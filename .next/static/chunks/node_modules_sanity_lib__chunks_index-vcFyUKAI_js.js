"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_sanity_lib__chunks_index-vcFyUKAI_js"],{

/***/ "./node_modules/sanity/lib/_chunks/index-vcFyUKAI.js":
/*!***********************************************************!*\
  !*** ./node_modules/sanity/lib/_chunks/index-vcFyUKAI.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DeskToolBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @sanity/ui */ \"./node_modules/@sanity/ui/dist/index.esm.js\");\n/* harmony import */ var _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./desk-Lv3-4p-G.js */ \"./node_modules/sanity/lib/_chunks/desk-Lv3-4p-G.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/omit.js */ \"./node_modules/lodash/omit.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/dist/esm5/index.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! nanoid */ \"./node_modules/nanoid/index.browser.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/dist/esm5/operators/index.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! sanity */ \"./node_modules/sanity/lib/index.esm.js\");\n/* harmony import */ var _sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sanity/generate-help-url */ \"./node_modules/@sanity/generate-help-url/dist/generate-help-url.esm.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual.js */ \"./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sanity/router */ \"./node_modules/sanity/lib/router.esm.js\");\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sanity/uuid */ \"./node_modules/@sanity/uuid/lib/esm/uuid.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! styled-components */ \"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sanity/icons */ \"./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/camelCase.js */ \"./node_modules/lodash/camelCase.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! speakingurl */ \"./node_modules/speakingurl/index.js\");\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(speakingurl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/uniq.js */ \"./node_modules/lodash/uniq.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/kebabCase.js */ \"./node_modules/lodash/kebabCase.js\");\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/find.js */ \"./node_modules/lodash/find.js\");\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_find_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/uniqueId.js */ \"./node_modules/lodash/uniqueId.js\");\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/startCase.js */ \"./node_modules/lodash/startCase.js\");\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! is-hotkey */ \"./node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sanity/util/paths */ \"./node_modules/@sanity/util/lib/paths.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst emptyArray = [];\nfunction PaneRouterProvider(props) {\n  const {\n    children,\n    flatIndex,\n    index,\n    params,\n    payload,\n    siblingIndex\n  } = props;\n  const {\n    navigate,\n    navigateIntent,\n    resolvePathFromState\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  const routerState = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)();\n  const {\n    panes,\n    expand\n  } = (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.usePaneLayout)();\n  const routerPaneGroups = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (routerState == null ? void 0 : routerState.panes) || emptyArray, [routerState == null ? void 0 : routerState.panes]);\n  const lastPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => panes == null ? void 0 : panes[panes.length - 2], [panes]);\n  const groupIndex = index - 1;\n  const createNextRouterState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(modifier => {\n    const currentGroup = routerPaneGroups[groupIndex] || [];\n    const currentItem = currentGroup[siblingIndex];\n    const nextGroup = modifier(currentGroup, currentItem);\n    const nextPanes = [...routerPaneGroups.slice(0, groupIndex), nextGroup, ...routerPaneGroups.slice(groupIndex + 1)];\n    const nextRouterState = {\n      ...(routerState || {}),\n      panes: nextPanes\n    };\n    return nextRouterState;\n  }, [groupIndex, routerPaneGroups, routerState, siblingIndex]);\n  const modifyCurrentGroup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(modifier => {\n    const nextRouterState = createNextRouterState(modifier);\n    setTimeout(() => navigate(nextRouterState), 0);\n    return nextRouterState;\n  }, [createNextRouterState, navigate]);\n  const createPathWithParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextParams => {\n    const nextRouterState = createNextRouterState((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      params: nextParams\n    }, ...siblings.slice(siblingIndex + 1)]);\n    return resolvePathFromState(nextRouterState);\n  }, [createNextRouterState, resolvePathFromState, siblingIndex]);\n  const setPayload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextPayload => {\n    modifyCurrentGroup((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      payload: nextPayload\n    }, ...siblings.slice(siblingIndex + 1)]);\n  }, [modifyCurrentGroup, siblingIndex]);\n  const setParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextParams => {\n    modifyCurrentGroup((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      params: nextParams\n    }, ...siblings.slice(siblingIndex + 1)]);\n  }, [modifyCurrentGroup, siblingIndex]);\n  const handleEditReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_ref => {\n    let {\n      id,\n      parentRefPath,\n      type,\n      template\n    } = _ref;\n    navigate({\n      panes: [...routerPaneGroups.slice(0, groupIndex + 1), [{\n        id,\n        params: {\n          template: template.id,\n          parentRefPath: (0,_sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__.toString)(parentRefPath),\n          type\n        },\n        payload: template.params\n      }]]\n    });\n  }, [groupIndex, navigate, routerPaneGroups]);\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({\n    // Zero-based index (position) of pane, visually\n    index: flatIndex,\n    // Zero-based index of pane group (within URL structure)\n    groupIndex,\n    // Zero-based index of pane within sibling group\n    siblingIndex,\n    // Payload of the current pane\n    payload,\n    // Params of the current pane\n    params,\n    // Whether or not the pane has any siblings (within the same group)\n    hasGroupSiblings: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length > 1 : false,\n    // The length of the current group\n    groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n    // Current router state for the \"panes\" property\n    routerPanesState: routerPaneGroups,\n    // Curried StateLink that passes the correct state automatically\n    ChildLink: _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.ChildLink,\n    // Curried StateLink that pops off the last pane group\n    BackLink: _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.BackLink,\n    // A specialized `ChildLink` that takes in the needed props to open a\n    // referenced document to the right\n    ReferenceChildLink: _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.ReferenceChildLink,\n    // Similar to `ReferenceChildLink` expect without the wrapping component\n    handleEditReference,\n    // Curried StateLink that passed the correct state, but merges params/payload\n    ParameterizedLink: _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.ParameterizedLink,\n    // Replaces the current pane with a new one\n    replaceCurrent: function () {\n      let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      modifyCurrentGroup(() => [{\n        id: opts.id || \"\",\n        payload: opts.payload,\n        params: opts.params || {}\n      }]);\n    },\n    // Removes the current pane from the group\n    closeCurrent: () => {\n      modifyCurrentGroup((siblings, item) => siblings.length > 1 ? siblings.filter(sibling => sibling !== item) : siblings);\n    },\n    // Removes all panes to the right including current\n    closeCurrentAndAfter: function () {\n      let expandLast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (expandLast && lastPane) {\n        expand(lastPane.element);\n      }\n      navigate({\n        panes: [...routerPaneGroups.slice(0, groupIndex)]\n      }, {\n        replace: true\n      });\n    },\n    // Duplicate the current pane, with optional overrides for payload, parameters\n    duplicateCurrent: options => {\n      modifyCurrentGroup((siblings, item) => {\n        const duplicatedItem = {\n          ...item,\n          payload: (options == null ? void 0 : options.payload) || item.payload,\n          params: (options == null ? void 0 : options.params) || item.params\n        };\n        return [...siblings.slice(0, siblingIndex), duplicatedItem, ...siblings.slice(siblingIndex)];\n      });\n    },\n    // Set the view for the current pane\n    setView: viewId => {\n      const restParams = lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(params, \"view\");\n      return setParams(viewId ? {\n        ...restParams,\n        view: viewId\n      } : restParams);\n    },\n    // Set the parameters for the current pane\n    setParams,\n    // Set the payload for the current pane\n    setPayload,\n    // A function that returns a path with the given parameters\n    createPathWithParams,\n    // Proxied navigation to a given intent. Consider just exposing `router` instead?\n    navigateIntent\n  }), [flatIndex, groupIndex, siblingIndex, payload, params, routerPaneGroups, handleEditReference, setParams, setPayload, createPathWithParams, navigateIntent, modifyCurrentGroup, lastPane, navigate, expand]);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.PaneRouterContext.Provider, {\n    value: ctx,\n    children\n  });\n}\nclass PaneResolutionError extends Error {\n  constructor(_ref2) {\n    let {\n      message,\n      context,\n      helpId,\n      cause\n    } = _ref2;\n    super(message);\n    this.context = context;\n    this.helpId = helpId;\n    this.cause = cause;\n  }\n}\nconst randomIdCache = /* @__PURE__ */new WeakMap();\nfunction assignId(obj) {\n  const cachedValue = randomIdCache.get(obj);\n  if (cachedValue) return cachedValue;\n  const id = (0,nanoid__WEBPACK_IMPORTED_MODULE_16__.nanoid)();\n  randomIdCache.set(obj, id);\n  return id;\n}\nconst bindCache = /* @__PURE__ */new WeakMap();\nfunction memoBind(obj, methodKey) {\n  const boundMethods = bindCache.get(obj) || /* @__PURE__ */new Map();\n  if (boundMethods) {\n    const bound2 = boundMethods.get(methodKey);\n    if (bound2) return bound2;\n  }\n  const method = obj[methodKey];\n  if (typeof method !== \"function\") {\n    throw new Error(\"Expected property `\".concat(methodKey, \"` to be a function but got \").concat(typeof method, \" instead.\"));\n  }\n  const bound = method.bind(obj);\n  boundMethods.set(methodKey, bound);\n  bindCache.set(obj, boundMethods);\n  return bound;\n}\nconst isPromise = thing => {\n  return !!thing && typeof (thing == null ? void 0 : thing.then) === \"function\";\n};\nconst isSerializable = thing => {\n  if (!(0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(thing)) return false;\n  return typeof thing.serialize === \"function\";\n};\nconst rethrowWithPaneResolutionErrors = next => (unresolvedPane, context, flatIndex) => {\n  try {\n    return next(unresolvedPane, context, flatIndex);\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      throw e;\n    }\n    throw new PaneResolutionError({\n      message: typeof (e == null ? void 0 : e.message) === \"string\" ? e.message : \"\",\n      context,\n      cause: e\n    });\n  }\n};\nconst wrapWithPublishReplay = next => function () {\n  return next(...arguments).pipe(\n  // need to add publishReplay + refCount to ensure new subscribers always\n  // get an emission. without this, memoized observables may get stuck\n  // waiting for their first emissions resulting in a loading pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.publishReplay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.refCount)());\n};\nfunction createPaneResolver(middleware) {\n  const resolvePane = rethrowWithPaneResolutionErrors(wrapWithPublishReplay(middleware((unresolvedPane, context, flatIndex) => {\n    if (!unresolvedPane) {\n      throw new PaneResolutionError({\n        message: \"Pane returned no child\",\n        context,\n        helpId: \"structure-item-returned-no-child\"\n      });\n    }\n    if (isPromise(unresolvedPane) || (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.isObservable)(unresolvedPane)) {\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.from)(unresolvedPane).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(result => resolvePane(result, context, flatIndex)));\n    }\n    if (isSerializable(unresolvedPane)) {\n      return resolvePane(unresolvedPane.serialize(context), context, flatIndex);\n    }\n    if (typeof unresolvedPane === \"function\") {\n      return resolvePane(unresolvedPane(context.id, context), context, flatIndex);\n    }\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)(unresolvedPane);\n  })));\n  return resolvePane;\n}\nasync function resolveIntent(options) {\n  const resolvedPaneCache = /* @__PURE__ */new Map();\n  const memoize = nextFn => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(context.path.join(\"__\"));\n    const cachedResolvedPane = key && resolvedPaneCache.get(key);\n    if (cachedResolvedPane) return cachedResolvedPane;\n    const result = nextFn(unresolvedPane, context, flatIndex);\n    if (key) resolvedPaneCache.set(key, result);\n    return result;\n  };\n  const resolvePane = createPaneResolver(memoize);\n  const fallbackEditorPanes = [[{\n    id: \"__edit__\".concat(options.params.id),\n    params: {\n      ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(options.params, [\"id\"]),\n      type: options.params.type\n    },\n    payload: options.payload\n  }]];\n  async function traverse(_ref3) {\n    let {\n      currentId,\n      flatIndex,\n      intent,\n      params,\n      parent,\n      path,\n      payload,\n      unresolvedPane,\n      levelIndex,\n      structureContext\n    } = _ref3;\n    var _a;\n    if (!unresolvedPane) return [];\n    const {\n      id: targetId,\n      type: schemaTypeName,\n      ...otherParams\n    } = params;\n    const context = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: void 0,\n      structureContext\n    };\n    const resolvedPane = await (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.firstValueFrom)(resolvePane(unresolvedPane, context, flatIndex));\n    if (resolvedPane.type === \"document\" && resolvedPane.id === targetId) {\n      return [{\n        panes: [...path.slice(0, path.length - 1).map(i => [{\n          id: i\n        }]), [{\n          id: targetId,\n          params: otherParams,\n          payload\n        }]],\n        depthIndex: path.length,\n        levelIndex\n      }];\n    }\n    if (\n    // if the resolve pane's `canHandleIntent` returns true, then resolve\n    ((_a = resolvedPane.canHandleIntent) == null ? void 0 : _a.call(resolvedPane, intent, params, {\n      pane: resolvedPane,\n      index: flatIndex\n    })) ||\n    // if the pane's `canHandleIntent` did not return true, then match against\n    // this default case. we will resolve the intent if:\n    resolvedPane.type === \"documentList\" &&\n    // 1. the schema type matches (this required for the document to render)\n    resolvedPane.schemaTypeName === schemaTypeName &&\n    // 2. the filter is the default filter.\n    //\n    // NOTE: this case is to prevent false positive matches where the user\n    // has configured a more specific filter for a particular type. In that\n    // case, the user can implement their own `canHandleIntent` function\n    resolvedPane.options.filter === \"_type == $type\") {\n      return [{\n        panes: [\n        // map the current path to router panes\n        ...path.map(id => [{\n          id\n        }]),\n        // then augment with the intents IDs and params\n        [{\n          id: params.id,\n          params: otherParams,\n          payload\n        }]],\n        depthIndex: path.length,\n        levelIndex\n      }];\n    }\n    if (resolvedPane.type === \"list\" && resolvedPane.child && resolvedPane.items) {\n      return (await Promise.all(resolvedPane.items.map((item, nextLevelIndex) => {\n        if (item.type === \"divider\") return Promise.resolve([]);\n        return traverse({\n          currentId: item._id || item.id,\n          flatIndex: flatIndex + 1,\n          intent,\n          params,\n          parent: resolvedPane,\n          path: [...path, item.id],\n          payload,\n          unresolvedPane: typeof resolvedPane.child === \"function\" ? memoBind(resolvedPane, \"child\") : resolvedPane.child,\n          levelIndex: nextLevelIndex,\n          structureContext\n        });\n      }))).flat();\n    }\n    return [];\n  }\n  const matchingPanes = await traverse({\n    currentId: \"root\",\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext\n  });\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex;\n    return a.depthIndex - b.depthIndex;\n  })[0];\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes;\n  }\n  return fallbackEditorPanes;\n}\nconst fallbackEditorChild = (nodeId, context) => {\n  const id = nodeId.replace(/^__edit__/, \"\");\n  const {\n    params,\n    payload,\n    structureContext: {\n      resolveDocumentNode\n    }\n  } = context;\n  const {\n    type,\n    template\n  } = params;\n  if (!type) {\n    throw new Error(\"Document type for document with ID \".concat(id, \" was not provided in the router params.\"));\n  }\n  let defaultDocumentBuilder = resolveDocumentNode({\n    schemaType: type,\n    documentId: id\n  }).id(\"editor\");\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(template, payload);\n  }\n  return defaultDocumentBuilder.serialize();\n};\nfunction hashContext(context) {\n  var _a, _b;\n  return \"contextHash(\".concat(JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: (_a = context.serializeOptions) == null ? void 0 : _a.index,\n    serializeOptionsPath: (_b = context.serializeOptions) == null ? void 0 : _b.path\n  }), \")\");\n}\nconst hashResolvedPaneMeta = meta => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === \"resolvedMeta\" ? assignId(meta.paneNode) : null\n  };\n  return \"metaHash(\".concat(JSON.stringify(normalized), \")\");\n};\nfunction resolvePaneTree(_ref4) {\n  let {\n    unresolvedPane,\n    flattenedRouterPanes,\n    parent: parent2,\n    path,\n    resolvePane,\n    structureContext\n  } = _ref4;\n  const [current, ...rest] = flattenedRouterPanes;\n  const next = rest[0];\n  const context = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent: parent2,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext\n  };\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n    // this switch map receives a resolved pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(paneNode => {\n      const resolvedPaneMeta = {\n        type: \"resolvedMeta\",\n        ...current,\n        paneNode,\n        path: context.path\n      };\n      const loadingPanes = rest.map((i, restIndex) => {\n        const loadingPanePath = [...context.path, ...rest.slice(restIndex).map((_, currentIndex) => \"[\".concat(i.flatIndex + currentIndex, \"]\"))];\n        const loadingPane = {\n          type: \"loading\",\n          path: loadingPanePath,\n          paneNode: null,\n          ...i\n        };\n        return loadingPane;\n      });\n      if (!rest.length) {\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([resolvedPaneMeta]);\n      }\n      let nextStream;\n      if (\n      // the fallback editor case\n      next == null ? void 0 : next.routerPaneSibling.id.startsWith(\"__edit__\")) {\n        nextStream = resolvePaneTree({\n          unresolvedPane: fallbackEditorChild,\n          flattenedRouterPanes: rest,\n          parent: parent2,\n          path: context.path,\n          resolvePane,\n          structureContext\n        });\n      } else if (current.groupIndex === (next == null ? void 0 : next.groupIndex)) {\n        nextStream = resolvePaneTree({\n          unresolvedPane,\n          flattenedRouterPanes: rest,\n          parent: parent2,\n          path,\n          resolvePane,\n          structureContext\n        });\n      } else {\n        nextStream = resolvePaneTree({\n          unresolvedPane: typeof paneNode.child === \"function\" ? memoBind(paneNode, \"child\") : paneNode.child,\n          flattenedRouterPanes: rest,\n          parent: paneNode,\n          path: context.path,\n          resolvePane,\n          structureContext\n        });\n      }\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.concat)(\n      // we emit the loading panes first in a concat (this emits immediately)\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([resolvedPaneMeta, ...loadingPanes]),\n      // then whenever the next stream is done, the results will be combined.\n      nextStream.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(nextResolvedPanes => [resolvedPaneMeta, ...nextResolvedPanes])));\n    }));\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\"Pane resolution error at index \".concat(e.context.index).concat(e.context.splitIndex > 0 ? \" for split pane index \".concat(e.context.splitIndex) : \"\", \": \").concat(e.message).concat(e.helpId ? \" - see \".concat((0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__.generateHelpUrl)(e.helpId)) : \"\"), e);\n      }\n      if (e.helpId === \"structure-item-returned-no-child\") {\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([]);\n      }\n    }\n    throw e;\n  }\n}\nfunction createResolvedPaneNodeStream(_ref5) {\n  let {\n    routerPanesStream,\n    rootPaneNode,\n    initialCacheState = {\n      cacheKeysByFlatIndex: [],\n      flattenedRouterPanes: [],\n      resolvedPaneCache: /* @__PURE__ */new Map(),\n      resolvePane: () => rxjs__WEBPACK_IMPORTED_MODULE_19__.NEVER\n    },\n    structureContext\n  } = _ref5;\n  const resolvedPanes$ = routerPanesStream.pipe(\n  // add in implicit \"root\" router pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(rawRouterPanes => [[{\n    id: \"root\"\n  }], ...rawRouterPanes]),\n  // create flattened router panes\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(routerPanes => {\n    const flattenedRouterPanes = routerPanes.flatMap((routerPaneGroup, groupIndex) => routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n      routerPaneSibling,\n      groupIndex,\n      siblingIndex\n    }))).map((i, index) => ({\n      ...i,\n      flatIndex: index\n    }));\n    return flattenedRouterPanes;\n  }),\n  // calculate a \"diffIndex\" used for clearing the memo cache\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.startWith)([]), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.pairwise)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(_ref6 => {\n    let [prev, curr] = _ref6;\n    for (let i = 0; i < curr.length; i++) {\n      const prevValue = prev[i];\n      const currValue = curr[i];\n      if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevValue, currValue)) {\n        return {\n          flattenedRouterPanes: curr,\n          diffIndex: i\n        };\n      }\n    }\n    return {\n      flattenedRouterPanes: curr,\n      diffIndex: curr.length\n    };\n  }),\n  // create the memoized `resolvePane` function and manage the memo cache\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.scan)((acc, next) => {\n    const {\n      cacheKeysByFlatIndex,\n      resolvedPaneCache\n    } = acc;\n    const {\n      flattenedRouterPanes,\n      diffIndex\n    } = next;\n    const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1);\n    const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1);\n    const keysToKeep = new Set(beforeDiffIndex.flatMap(keySet => Array.from(keySet)));\n    const keysToDelete = afterDiffIndex.flatMap(keySet => Array.from(keySet)).filter(key => !keysToKeep.has(key));\n    for (const key of keysToDelete) {\n      resolvedPaneCache.delete(key);\n    }\n    const memoize = nextFn => (unresolvedPane, context, flatIndex) => {\n      const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(hashContext(context));\n      const cachedResolvedPane = key && resolvedPaneCache.get(key);\n      if (cachedResolvedPane) return cachedResolvedPane;\n      const result = nextFn(unresolvedPane, context, flatIndex);\n      if (!key) return result;\n      const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || /* @__PURE__ */new Set();\n      cacheKeySet.add(key);\n      cacheKeysByFlatIndex[flatIndex] = cacheKeySet;\n      resolvedPaneCache.set(key, result);\n      return result;\n    };\n    return {\n      flattenedRouterPanes,\n      cacheKeysByFlatIndex,\n      resolvedPaneCache,\n      resolvePane: createPaneResolver(memoize)\n    };\n  }, initialCacheState),\n  // run the memoized, recursive resolving\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(_ref7 => {\n    let {\n      flattenedRouterPanes,\n      resolvePane\n    } = _ref7;\n    return resolvePaneTree({\n      unresolvedPane: rootPaneNode,\n      flattenedRouterPanes,\n      parent: null,\n      path: [],\n      resolvePane,\n      structureContext\n    });\n  }));\n  return resolvedPanes$.pipe(\n  // this diffs the previous emission with the current one. if there is a new\n  // loading pane at the same position where a previous pane already had a\n  // resolved value (looking at the IDs to compare), then return the previous\n  // pane instead of the loading pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.scan)((prev, next) => next.map((nextPane, index) => {\n    const prevPane = prev[index];\n    if (!prevPane) return nextPane;\n    if (nextPane.type !== \"loading\") return nextPane;\n    if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n      return prevPane;\n    }\n    return nextPane;\n  }), []),\n  // this prevents duplicate emissions\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.distinctUntilChanged)((prev, next) => {\n    if (prev.length !== next.length) return false;\n    for (let i = 0; i < next.length; i++) {\n      const prevValue = prev[i];\n      const nextValue = next[i];\n      if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n        return false;\n      }\n    }\n    return true;\n  }));\n}\nfunction useRouterPanesStream() {\n  const routerStateSubject = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new rxjs__WEBPACK_IMPORTED_MODULE_19__.ReplaySubject(1), []);\n  const routerPanes$ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => routerStateSubject.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(_routerState => (_routerState == null ? void 0 : _routerState.panes) || [])), [routerStateSubject]);\n  const {\n    state: routerState\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    routerStateSubject.next(routerState);\n  }, [routerState, routerStateSubject]);\n  return routerPanes$;\n}\nfunction useResolvedPanes() {\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n  if (error) throw error;\n  const {\n    structureContext,\n    rootPaneNode\n  } = (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: []\n  });\n  const routerPanesStream = useRouterPanesStream();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext\n    }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(resolvedPanes => {\n      const routerPanes = resolvedPanes.reduce((acc, next) => {\n        const currentGroup = acc[next.groupIndex] || [];\n        currentGroup[next.siblingIndex] = next.routerPaneSibling;\n        acc[next.groupIndex] = currentGroup;\n        return acc;\n      }, []);\n      const groupsLen = routerPanes.length;\n      const paneDataItems = resolvedPanes.map(pane => {\n        var _a;\n        const {\n          groupIndex,\n          flatIndex,\n          siblingIndex,\n          routerPaneSibling,\n          path\n        } = pane;\n        const itemId = routerPaneSibling.id;\n        const nextGroup = routerPanes[groupIndex + 1];\n        const paneDataItem = {\n          active: groupIndex === groupsLen - 2,\n          childItemId: (_a = nextGroup == null ? void 0 : nextGroup[0].id) != null ? _a : null,\n          index: flatIndex,\n          itemId: routerPaneSibling.id,\n          groupIndex,\n          key: \"\".concat(pane.type === \"loading\" ? \"unknown\" : pane.paneNode.id, \"-\").concat(itemId, \"-\").concat(siblingIndex),\n          pane: pane.type === \"loading\" ? _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE : pane.paneNode,\n          params: routerPaneSibling.params || {},\n          path: path.join(\";\"),\n          payload: routerPaneSibling.payload,\n          selected: flatIndex === resolvedPanes.length - 1,\n          siblingIndex\n        };\n        return paneDataItem;\n      });\n      return {\n        paneDataItems,\n        routerPanes,\n        resolvedPanes: paneDataItems.map(pane => pane.pane)\n      };\n    }));\n    const subscription = resolvedPanes$.subscribe({\n      next: result => setData(result),\n      error: e => setError(e)\n    });\n    return () => subscription.unsubscribe();\n  }, [rootPaneNode, routerPanesStream, structureContext]);\n  return data;\n}\nasync function ensureDocumentIdAndType(documentStore, id, type) {\n  if (id && type) return {\n    id,\n    type\n  };\n  if (!id && type) return {\n    id: (0,_sanity_uuid__WEBPACK_IMPORTED_MODULE_21__.uuid)(),\n    type\n  };\n  if (id && !type) {\n    const resolvedType = await (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.firstValueFrom)(documentStore.resolveTypeForDocument(id));\n    return {\n      id,\n      type: resolvedType\n    };\n  }\n  throw new PaneResolutionError({\n    message: \"Neither document `id` or `type` was provided when trying to resolve intent.\"\n  });\n}\nconst EMPTY_RECORD = {};\nconst IntentResolver = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function IntentResolver2() {\n  const {\n    navigate\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  const maybeIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(routerState => {\n    const intentName = typeof routerState.intent === \"string\" ? routerState.intent : void 0;\n    return intentName ? {\n      intent: intentName,\n      params: (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(routerState.params) ? routerState.params : EMPTY_RECORD,\n      payload: routerState.payload\n    } : void 0;\n  }, []));\n  const {\n    rootPaneNode,\n    structureContext\n  } = (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const documentStore = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useDocumentStore)();\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  if (error) throw error;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (maybeIntent) {\n      const {\n        intent,\n        params,\n        payload\n      } = maybeIntent;\n      let cancelled = false;\n      async function effect() {\n        const {\n          id,\n          type\n        } = await ensureDocumentIdAndType(documentStore, typeof params.id === \"string\" ? params.id : void 0, typeof params.type === \"string\" ? params.type : void 0);\n        if (cancelled) return;\n        const panes = await resolveIntent({\n          intent,\n          params: {\n            ...params,\n            id,\n            type\n          },\n          payload,\n          rootPaneNode,\n          structureContext\n        });\n        if (cancelled) return;\n        navigate({\n          panes\n        }, {\n          replace: true\n        });\n      }\n      effect().catch(setError);\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext]);\n  return null;\n});\nvar __freeze$1 = Object.freeze;\nvar __defProp$1 = Object.defineProperty;\nvar __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, \"raw\", {\n  value: __freeze$1(raw || cooked.slice())\n}));\nvar _a$1;\nconst PathSegment = styled_components__WEBPACK_IMPORTED_MODULE_22__[\"default\"].span(_a$1 || (_a$1 = __template$1([\"\\n  &:not(:last-child)::after {\\n    content: ' \\u279D ';\\n    opacity: 0.5;\\n  }\\n\"])));\nfunction formatStack(stack) {\n  return stack.replace(/\\(\\.\\.\\.\\)\\./g, \"(...)\\n  .\").replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, \"\").replace(/___default\\./g, \".\").replace(new RegExp(\" \\\\(https?:\\\\/\\\\/\".concat(window.location.host), \"g\"), \" (\");\n}\nfunction StructureError(_ref8) {\n  let {\n    error\n  } = _ref8;\n  if (!(error instanceof PaneResolutionError)) {\n    throw error;\n  }\n  const {\n    cause\n  } = error;\n  const {\n    t\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n  const stack = (cause == null ? void 0 : cause.stack) || error.stack;\n  const showStack = stack && !(cause instanceof _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError) && !error.message.includes(\"Module build failed:\");\n  const path = cause instanceof _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError ? cause.path : [];\n  const helpId = cause instanceof _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError && cause.helpId || error.helpId;\n  const handleReload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    window.location.reload();\n  }, []);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n    height: \"fill\",\n    overflow: \"auto\",\n    padding: 4,\n    sizing: \"border\",\n    tone: \"critical\",\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Container, {\n      children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Heading, {\n        as: \"h2\",\n        children: t(\"structure-error.header.text\")\n      }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n        marginTop: 4,\n        padding: 4,\n        radius: 2,\n        overflow: \"auto\",\n        shadow: 1,\n        tone: \"inherit\",\n        children: [path.length > 0 && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n          space: 2,\n          children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Label, {\n            children: t(\"structure-error.structure-path.label\")\n          }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Code, {\n            children: path.slice(1).map((segment, i) =>\n            // eslint-disable-next-line react/no-array-index-key\n            /* @__PURE__ */\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PathSegment, {\n              children: segment\n            }, \"\".concat(segment, \"-\").concat(i)))\n          })]\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n          marginTop: 4,\n          space: 2,\n          children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Label, {\n            children: t(\"structure-error.error.label\")\n          }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Code, {\n            children: showStack ? formatStack(stack) : error.message\n          })]\n        }), helpId && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n          marginTop: 4,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n            children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n              href: (0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__.generateHelpUrl)(helpId),\n              rel: \"noopener noreferrer\",\n              target: \"_blank\",\n              children: t(\"structure-error.docs-link.text\")\n            })\n          })\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n          marginTop: 4,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Button, {\n            text: t(\"structure-error.reload-button.text\"),\n            icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_24__.SyncIcon,\n            tone: \"primary\",\n            onClick: handleReload\n          })\n        })]\n      })]\n    })\n  });\n}\nfunction UnknownPane(props) {\n  const {\n    isSelected,\n    pane,\n    paneKey\n  } = props;\n  const type = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(pane) && pane.type || null;\n  const {\n    t\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.Pane, {\n    id: paneKey,\n    selected: isSelected,\n    children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.PaneHeader, {\n      title: t(\"panes.unknown-pane-type.title\")\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.PaneContent, {\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n        padding: 4,\n        children: typeof type === \"string\" ? /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n          as: \"p\",\n          muted: true,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.Translate, {\n            t,\n            i18nKey: \"panes.unknown-pane-type.unknown-type.text\",\n            values: {\n              type\n            }\n          })\n        }) : /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n          as: \"p\",\n          muted: true,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.Translate, {\n            t,\n            i18nKey: \"panes.unknown-pane-type.missing-type.text\"\n          })\n        })\n      })\n    })]\n  });\n}\nconst paneMap = {\n  component: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_index-1eVMM9hT_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-1eVMM9hT.js */ \"./node_modules/sanity/lib/_chunks/index-1eVMM9hT.js\"))),\n  document: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_pane-EjPa6RIS_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-EjPa6RIS.js */ \"./node_modules/sanity/lib/_chunks/pane-EjPa6RIS.js\"))),\n  documentList: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_pane-6Nd1D3WL_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-6Nd1D3WL.js */ \"./node_modules/sanity/lib/_chunks/pane-6Nd1D3WL.js\"))),\n  list: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_index-qT_-Ghuf_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-qT_-Ghuf.js */ \"./node_modules/sanity/lib/_chunks/index-qT_-Ghuf.js\")))\n};\nconst DeskToolPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function DeskToolPane2(props) {\n  const {\n    active,\n    childItemId,\n    groupIndex,\n    index,\n    itemId,\n    pane,\n    paneKey,\n    params,\n    payload,\n    path,\n    selected,\n    siblingIndex\n  } = props;\n  const PaneComponent = paneMap[pane.type] || UnknownPane;\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneRouterProvider, {\n    flatIndex: index,\n    index: groupIndex,\n    params,\n    payload,\n    siblingIndex,\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n      fallback: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n        paneKey,\n        path,\n        selected\n      }),\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneComponent, {\n        childItemId: childItemId || \"\",\n        index,\n        itemId,\n        isActive: active,\n        isSelected: selected,\n        paneKey,\n        pane\n      })\n    })\n  });\n}, (_ref9, _ref10) => {\n  let {\n    params: prevParams = {},\n    payload: prevPayload = null,\n    ...prev\n  } = _ref9;\n  let {\n    params: nextParams = {},\n    payload: nextPayload = null,\n    ...next\n  } = _ref10;\n  if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevParams, nextParams)) return false;\n  if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevPayload, nextPayload)) return false;\n  const keys = /* @__PURE__ */new Set([...Object.keys(prev), ...Object.keys(next)]);\n  for (const key of keys) {\n    if (prev[key] !== next[key]) return false;\n  }\n  return true;\n});\nfunction NoDocumentTypesScreen() {\n  const {\n    t\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n    height: \"fill\",\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Flex, {\n      align: \"center\",\n      height: \"fill\",\n      justify: \"center\",\n      padding: 4,\n      sizing: \"border\",\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Container, {\n        width: 0,\n        children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n          padding: 4,\n          radius: 2,\n          shadow: 1,\n          tone: \"caution\",\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Flex, {\n            children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n              children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                size: 1,\n                children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_24__.WarningOutlineIcon, {})\n              })\n            }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n              flex: 1,\n              marginLeft: 3,\n              space: 3,\n              children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"h1\",\n                size: 1,\n                weight: \"bold\",\n                children: t(\"no-document-types-screen.title\")\n              }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"p\",\n                muted: true,\n                size: 1,\n                children: t(\"no-document-types-screen.subtitle\")\n              }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"p\",\n                muted: true,\n                size: 1,\n                children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                  href: \"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\",\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: t(\"no-document-types-screen.link-text\")\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nconst DocumentTitle = props => {\n  const {\n    documentId,\n    documentType\n  } = props;\n  const editState = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useEditState)(documentId, documentType);\n  const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n  const isNewDocument = !(editState == null ? void 0 : editState.published) && !(editState == null ? void 0 : editState.draft);\n  const documentValue = (editState == null ? void 0 : editState.draft) || (editState == null ? void 0 : editState.published);\n  const schemaType = schema.get(documentType);\n  const {\n    value,\n    isLoading: previewValueIsLoading\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.unstable_useValuePreview)({\n    enabled: true,\n    schemaType,\n    value: documentValue\n  });\n  const documentTitle = isNewDocument ? \"New \".concat((schemaType == null ? void 0 : schemaType.title) || (schemaType == null ? void 0 : schemaType.name)) : (value == null ? void 0 : value.title) || \"Untitled\";\n  const settled = editState.ready && !previewValueIsLoading;\n  const newTitle = useConstructDocumentTitle(documentTitle);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!settled) return;\n    document.title = newTitle;\n  }, [documentTitle, settled, newTitle]);\n  return null;\n};\nconst PassthroughTitle = props => {\n  const {\n    title\n  } = props;\n  const newTitle = useConstructDocumentTitle(title);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    document.title = newTitle;\n  }, [newTitle, title]);\n  return null;\n};\nconst DeskTitle = props => {\n  const {\n    resolvedPanes\n  } = props;\n  if (!(resolvedPanes == null ? void 0 : resolvedPanes.length)) return null;\n  const lastPane = resolvedPanes[resolvedPanes.length - 1];\n  if (isLoadingPane(lastPane)) {\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {});\n  }\n  if (isDocumentPane(lastPane)) {\n    if (lastPane == null ? void 0 : lastPane.title) {\n      return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n        title: lastPane.title\n      });\n    }\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentTitle, {\n      documentId: lastPane.options.id,\n      documentType: lastPane.options.type\n    });\n  }\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n    title: lastPane == null ? void 0 : lastPane.title\n  });\n};\nfunction useConstructDocumentTitle(activeTitle) {\n  const deskToolBaseTitle = (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)().structureContext.title;\n  return [activeTitle, deskToolBaseTitle].filter(title => title).join(\" | \");\n}\nfunction isDocumentPane(pane) {\n  return pane !== _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE && pane.type === \"document\";\n}\nfunction isLoadingPane(pane) {\n  return pane === _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE;\n}\nvar __freeze = Object.freeze;\nvar __defProp = Object.defineProperty;\nvar __template = (cooked, raw) => __freeze(__defProp(cooked, \"raw\", {\n  value: __freeze(raw || cooked.slice())\n}));\nvar _a;\nconst StyledPaneLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_22__[\"default\"])(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.PaneLayout)(_a || (_a = __template([\"\\n  min-height: 100%;\\n  min-width: 320px;\\n\"])));\nconst isSaveHotkey = (0,is_hotkey__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(\"mod+s\");\nconst DeskTool = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function DeskTool2(_ref11) {\n  let {\n    onPaneChange\n  } = _ref11;\n  var _a2;\n  const {\n    push: pushToast\n  } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.useToast)();\n  const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n  const {\n    layoutCollapsed,\n    setLayoutCollapsed\n  } = (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const {\n    paneDataItems,\n    resolvedPanes\n  } = useResolvedPanes();\n  const isResolvingIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(routerState => typeof routerState.intent === \"string\", []));\n  const {\n    sanity: {\n      media\n    }\n  } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.useTheme)();\n  const [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const handleRootCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(true), [setLayoutCollapsed]);\n  const handleRootExpand = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(false), [setLayoutCollapsed]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes);\n    }\n  }, [onPaneChange, resolvedPanes]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const handleGlobalKeyDown = event => {\n      if (isSaveHotkey(event)) {\n        event.preventDefault();\n        pushToast({\n          closable: true,\n          id: \"auto-save-message\",\n          status: \"info\",\n          title: \"Your work is automatically saved!\",\n          duration: 4e3\n        });\n      }\n    };\n    window.addEventListener(\"keydown\", handleGlobalKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n  }, [pushToast]);\n  const hasDefinedDocumentTypes = (_a2 = schema._original) == null ? void 0 : _a2.types.some(sanity__WEBPACK_IMPORTED_MODULE_17__._isCustomDocumentTypeDefinition);\n  if (!hasDefinedDocumentTypes) {\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NoDocumentTypesScreen, {});\n  }\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.PortalProvider, {\n    element: portalElement || null,\n    children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledPaneLayout, {\n      flex: 1,\n      height: layoutCollapsed ? void 0 : \"fill\",\n      minWidth: media[1],\n      onCollapse: handleRootCollapse,\n      onExpand: handleRootExpand,\n      children: [paneDataItems.map(_ref12 => {\n        let {\n          active,\n          childItemId,\n          groupIndex,\n          itemId,\n          key: paneKey,\n          pane,\n          index: paneIndex,\n          params: paneParams,\n          path,\n          payload,\n          siblingIndex,\n          selected\n        } = _ref12;\n        return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n          children: pane === _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n            paneKey,\n            path,\n            selected\n          }) : /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskToolPane, {\n            active,\n            groupIndex,\n            index: paneIndex,\n            pane,\n            childItemId,\n            itemId,\n            paneKey,\n            params: paneParams,\n            payload,\n            path,\n            selected,\n            siblingIndex\n          })\n        }, \"\".concat(pane === _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? \"loading\" : pane.type, \"-\").concat(paneIndex));\n      }), paneDataItems.length <= 1 && isResolvingIntent && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n        paneKey: \"intent-resolver\"\n      })]\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskTitle, {\n      resolvedPanes\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      \"data-portal\": \"\",\n      ref: setPortalElement\n    })]\n  });\n});\nfunction DeskToolBoundary(_ref13) {\n  let {\n    tool: {\n      options\n    }\n  } = _ref13;\n  const {\n    unstable_sources: sources\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useWorkspace)();\n  const [firstSource] = sources;\n  const {\n    source,\n    defaultDocumentNode,\n    structure\n  } = options || {};\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n    return () => (0,_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n  }, []);\n  const [{\n    error\n  }, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    error: null\n  });\n  if (error) return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureError, {\n    error\n  });\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.ErrorBoundary, {\n    onCatch: setError,\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.SourceProvider, {\n      name: source || firstSource.name,\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.DeskToolProvider, {\n        defaultDocumentNode,\n        structure,\n        children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskTool, {\n          onPaneChange: _desk_Lv3_4p_G_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IntentResolver, {})]\n      })\n    })\n  });\n}\n\n//# sourceMappingURL=index-vcFyUKAI.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sanity/lib/_chunks/index-vcFyUKAI.js\n"));

/***/ })

}]);