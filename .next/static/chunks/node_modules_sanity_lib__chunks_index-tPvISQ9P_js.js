"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_sanity_lib__chunks_index-tPvISQ9P_js"],{

/***/ "./node_modules/sanity/lib/_chunks/index-tPvISQ9P.js":
/*!***********************************************************!*\
  !*** ./node_modules/sanity/lib/_chunks/index-tPvISQ9P.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DeskToolBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @sanity/ui */ \"./node_modules/@sanity/ui/dist/index.esm.js\");\n/* harmony import */ var _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./desk-pMu7KvwG.js */ \"./node_modules/sanity/lib/_chunks/desk-pMu7KvwG.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/omit.js */ \"./node_modules/lodash/omit.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/dist/esm5/index.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! nanoid */ \"./node_modules/nanoid/index.browser.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/dist/esm5/operators/index.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! sanity */ \"./node_modules/sanity/lib/index.esm.js\");\n/* harmony import */ var _sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @sanity/generate-help-url */ \"./node_modules/@sanity/generate-help-url/dist/generate-help-url.esm.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual.js */ \"./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sanity/router */ \"./node_modules/sanity/lib/router.esm.js\");\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @sanity/uuid */ \"./node_modules/@sanity/uuid/lib/esm/uuid.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! styled-components */ \"./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sanity/icons */ \"./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/camelCase.js */ \"./node_modules/lodash/camelCase.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! speakingurl */ \"./node_modules/speakingurl/index.js\");\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(speakingurl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/uniq.js */ \"./node_modules/lodash/uniq.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash/kebabCase.js */ \"./node_modules/lodash/kebabCase.js\");\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/find.js */ \"./node_modules/lodash/find.js\");\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_find_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/uniqueId.js */ \"./node_modules/lodash/uniqueId.js\");\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(react_is__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/startCase.js */ \"./node_modules/lodash/startCase.js\");\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! is-hotkey */ \"./node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sanity/util/paths */ \"./node_modules/@sanity/util/lib/paths.esm.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst emptyArray = [];\nfunction PaneRouterProvider(props) {\n  const {\n    children,\n    flatIndex,\n    index,\n    params,\n    payload,\n    siblingIndex\n  } = props;\n  const {\n    navigate,\n    navigateIntent,\n    resolvePathFromState\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  const routerState = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)();\n  const {\n    panes,\n    expand\n  } = (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.usePaneLayout)();\n  const routerPaneGroups = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => (routerState == null ? void 0 : routerState.panes) || emptyArray, [routerState == null ? void 0 : routerState.panes]);\n  const lastPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => panes == null ? void 0 : panes[panes.length - 2], [panes]);\n  const groupIndex = index - 1;\n  const createNextRouterState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(modifier => {\n    const currentGroup = routerPaneGroups[groupIndex] || [];\n    const currentItem = currentGroup[siblingIndex];\n    const nextGroup = modifier(currentGroup, currentItem);\n    const nextPanes = [...routerPaneGroups.slice(0, groupIndex), nextGroup, ...routerPaneGroups.slice(groupIndex + 1)];\n    const nextRouterState = {\n      ...(routerState || {}),\n      panes: nextPanes\n    };\n    return nextRouterState;\n  }, [groupIndex, routerPaneGroups, routerState, siblingIndex]);\n  const modifyCurrentGroup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(modifier => {\n    const nextRouterState = createNextRouterState(modifier);\n    setTimeout(() => navigate(nextRouterState), 0);\n    return nextRouterState;\n  }, [createNextRouterState, navigate]);\n  const createPathWithParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextParams => {\n    const nextRouterState = createNextRouterState((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      params: nextParams\n    }, ...siblings.slice(siblingIndex + 1)]);\n    return resolvePathFromState(nextRouterState);\n  }, [createNextRouterState, resolvePathFromState, siblingIndex]);\n  const setPayload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextPayload => {\n    modifyCurrentGroup((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      payload: nextPayload\n    }, ...siblings.slice(siblingIndex + 1)]);\n  }, [modifyCurrentGroup, siblingIndex]);\n  const setParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(nextParams => {\n    modifyCurrentGroup((siblings, item) => [...siblings.slice(0, siblingIndex), {\n      ...item,\n      params: nextParams\n    }, ...siblings.slice(siblingIndex + 1)]);\n  }, [modifyCurrentGroup, siblingIndex]);\n  const handleEditReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(_ref => {\n    let {\n      id,\n      parentRefPath,\n      type,\n      template\n    } = _ref;\n    navigate({\n      panes: [...routerPaneGroups.slice(0, groupIndex + 1), [{\n        id,\n        params: {\n          template: template.id,\n          parentRefPath: (0,_sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__.toString)(parentRefPath),\n          type\n        },\n        payload: template.params\n      }]]\n    });\n  }, [groupIndex, navigate, routerPaneGroups]);\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({\n    // Zero-based index (position) of pane, visually\n    index: flatIndex,\n    // Zero-based index of pane group (within URL structure)\n    groupIndex,\n    // Zero-based index of pane within sibling group\n    siblingIndex,\n    // Payload of the current pane\n    payload,\n    // Params of the current pane\n    params,\n    // Whether or not the pane has any siblings (within the same group)\n    hasGroupSiblings: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length > 1 : false,\n    // The length of the current group\n    groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n    // Current router state for the \"panes\" property\n    routerPanesState: routerPaneGroups,\n    // Curried StateLink that passes the correct state automatically\n    ChildLink: _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.ChildLink,\n    // Curried StateLink that pops off the last pane group\n    BackLink: _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.BackLink,\n    // A specialized `ChildLink` that takes in the needed props to open a\n    // referenced document to the right\n    ReferenceChildLink: _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.ReferenceChildLink,\n    // Similar to `ReferenceChildLink` expect without the wrapping component\n    handleEditReference,\n    // Curried StateLink that passed the correct state, but merges params/payload\n    ParameterizedLink: _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.ParameterizedLink,\n    // Replaces the current pane with a new one\n    replaceCurrent: function () {\n      let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      modifyCurrentGroup(() => [{\n        id: opts.id || \"\",\n        payload: opts.payload,\n        params: opts.params || {}\n      }]);\n    },\n    // Removes the current pane from the group\n    closeCurrent: () => {\n      modifyCurrentGroup((siblings, item) => siblings.length > 1 ? siblings.filter(sibling => sibling !== item) : siblings);\n    },\n    // Removes all panes to the right including current\n    closeCurrentAndAfter: function () {\n      let expandLast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (expandLast && lastPane) {\n        expand(lastPane.element);\n      }\n      navigate({\n        panes: [...routerPaneGroups.slice(0, groupIndex)]\n      }, {\n        replace: true\n      });\n    },\n    // Duplicate the current pane, with optional overrides for payload, parameters\n    duplicateCurrent: options => {\n      modifyCurrentGroup((siblings, item) => {\n        const duplicatedItem = {\n          ...item,\n          payload: (options == null ? void 0 : options.payload) || item.payload,\n          params: (options == null ? void 0 : options.params) || item.params\n        };\n        return [...siblings.slice(0, siblingIndex), duplicatedItem, ...siblings.slice(siblingIndex)];\n      });\n    },\n    // Set the view for the current pane\n    setView: viewId => {\n      const restParams = lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(params, \"view\");\n      return setParams(viewId ? {\n        ...restParams,\n        view: viewId\n      } : restParams);\n    },\n    // Set the parameters for the current pane\n    setParams,\n    // Set the payload for the current pane\n    setPayload,\n    // A function that returns a path with the given parameters\n    createPathWithParams,\n    // Proxied navigation to a given intent. Consider just exposing `router` instead?\n    navigateIntent\n  }), [flatIndex, groupIndex, siblingIndex, payload, params, routerPaneGroups, handleEditReference, setParams, setPayload, createPathWithParams, navigateIntent, modifyCurrentGroup, lastPane, navigate, expand]);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.PaneRouterContext.Provider, {\n    value: ctx,\n    children\n  });\n}\nclass PaneResolutionError extends Error {\n  constructor(_ref2) {\n    let {\n      message,\n      context,\n      helpId,\n      cause\n    } = _ref2;\n    super(message);\n    this.context = context;\n    this.helpId = helpId;\n    this.cause = cause;\n  }\n}\nconst randomIdCache = /* @__PURE__ */new WeakMap();\nfunction assignId(obj) {\n  const cachedValue = randomIdCache.get(obj);\n  if (cachedValue) return cachedValue;\n  const id = (0,nanoid__WEBPACK_IMPORTED_MODULE_16__.nanoid)();\n  randomIdCache.set(obj, id);\n  return id;\n}\nconst bindCache = /* @__PURE__ */new WeakMap();\nfunction memoBind(obj, methodKey) {\n  const boundMethods = bindCache.get(obj) || /* @__PURE__ */new Map();\n  if (boundMethods) {\n    const bound2 = boundMethods.get(methodKey);\n    if (bound2) return bound2;\n  }\n  const method = obj[methodKey];\n  if (typeof method !== \"function\") {\n    throw new Error(\"Expected property `\".concat(methodKey, \"` to be a function but got \").concat(typeof method, \" instead.\"));\n  }\n  const bound = method.bind(obj);\n  boundMethods.set(methodKey, bound);\n  bindCache.set(obj, boundMethods);\n  return bound;\n}\nconst isPromise = thing => {\n  return !!thing && typeof (thing == null ? void 0 : thing.then) === \"function\";\n};\nconst isSerializable = thing => {\n  if (!(0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(thing)) return false;\n  return typeof thing.serialize === \"function\";\n};\nconst rethrowWithPaneResolutionErrors = next => (unresolvedPane, context, flatIndex) => {\n  try {\n    return next(unresolvedPane, context, flatIndex);\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      throw e;\n    }\n    throw new PaneResolutionError({\n      message: typeof (e == null ? void 0 : e.message) === \"string\" ? e.message : \"\",\n      context,\n      cause: e\n    });\n  }\n};\nconst wrapWithPublishReplay = next => function () {\n  return next(...arguments).pipe(\n  // need to add publishReplay + refCount to ensure new subscribers always\n  // get an emission. without this, memoized observables may get stuck\n  // waiting for their first emissions resulting in a loading pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.publishReplay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.refCount)());\n};\nfunction createPaneResolver(middleware) {\n  const resolvePane = rethrowWithPaneResolutionErrors(wrapWithPublishReplay(middleware((unresolvedPane, context, flatIndex) => {\n    if (!unresolvedPane) {\n      throw new PaneResolutionError({\n        message: \"Pane returned no child\",\n        context,\n        helpId: \"structure-item-returned-no-child\"\n      });\n    }\n    if (isPromise(unresolvedPane) || (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.isObservable)(unresolvedPane)) {\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.from)(unresolvedPane).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(result => resolvePane(result, context, flatIndex)));\n    }\n    if (isSerializable(unresolvedPane)) {\n      return resolvePane(unresolvedPane.serialize(context), context, flatIndex);\n    }\n    if (typeof unresolvedPane === \"function\") {\n      return resolvePane(unresolvedPane(context.id, context), context, flatIndex);\n    }\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)(unresolvedPane);\n  })));\n  return resolvePane;\n}\nasync function resolveIntent(options) {\n  const resolvedPaneCache = /* @__PURE__ */new Map();\n  const memoize = nextFn => (unresolvedPane, context, flatIndex) => {\n    const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(context.path.join(\"__\"));\n    const cachedResolvedPane = key && resolvedPaneCache.get(key);\n    if (cachedResolvedPane) return cachedResolvedPane;\n    const result = nextFn(unresolvedPane, context, flatIndex);\n    if (key) resolvedPaneCache.set(key, result);\n    return result;\n  };\n  const resolvePane = createPaneResolver(memoize);\n  const fallbackEditorPanes = [[{\n    id: \"__edit__\".concat(options.params.id),\n    params: {\n      ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(options.params, [\"id\"]),\n      type: options.params.type\n    },\n    payload: options.payload\n  }]];\n  async function traverse(_ref3) {\n    let {\n      currentId,\n      flatIndex,\n      intent,\n      params,\n      parent,\n      path,\n      payload,\n      unresolvedPane,\n      levelIndex,\n      structureContext\n    } = _ref3;\n    var _a;\n    if (!unresolvedPane) return [];\n    const {\n      id: targetId,\n      type: schemaTypeName,\n      ...otherParams\n    } = params;\n    const context = {\n      id: currentId,\n      splitIndex: 0,\n      parent,\n      path,\n      index: flatIndex,\n      params: {},\n      payload: void 0,\n      structureContext\n    };\n    const resolvedPane = await (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.firstValueFrom)(resolvePane(unresolvedPane, context, flatIndex));\n    if (resolvedPane.type === \"document\" && resolvedPane.id === targetId) {\n      return [{\n        panes: [...path.slice(0, path.length - 1).map(i => [{\n          id: i\n        }]), [{\n          id: targetId,\n          params: otherParams,\n          payload\n        }]],\n        depthIndex: path.length,\n        levelIndex\n      }];\n    }\n    if (\n    // if the resolve pane's `canHandleIntent` returns true, then resolve\n    ((_a = resolvedPane.canHandleIntent) == null ? void 0 : _a.call(resolvedPane, intent, params, {\n      pane: resolvedPane,\n      index: flatIndex\n    })) ||\n    // if the pane's `canHandleIntent` did not return true, then match against\n    // this default case. we will resolve the intent if:\n    resolvedPane.type === \"documentList\" &&\n    // 1. the schema type matches (this required for the document to render)\n    resolvedPane.schemaTypeName === schemaTypeName &&\n    // 2. the filter is the default filter.\n    //\n    // NOTE: this case is to prevent false positive matches where the user\n    // has configured a more specific filter for a particular type. In that\n    // case, the user can implement their own `canHandleIntent` function\n    resolvedPane.options.filter === \"_type == $type\") {\n      return [{\n        panes: [\n        // map the current path to router panes\n        ...path.map(id => [{\n          id\n        }]),\n        // then augment with the intents IDs and params\n        [{\n          id: params.id,\n          params: otherParams,\n          payload\n        }]],\n        depthIndex: path.length,\n        levelIndex\n      }];\n    }\n    if (resolvedPane.type === \"list\" && resolvedPane.child && resolvedPane.items) {\n      return (await Promise.all(resolvedPane.items.map((item, nextLevelIndex) => {\n        if (item.type === \"divider\") return Promise.resolve([]);\n        return traverse({\n          currentId: item._id || item.id,\n          flatIndex: flatIndex + 1,\n          intent,\n          params,\n          parent: resolvedPane,\n          path: [...path, item.id],\n          payload,\n          unresolvedPane: typeof resolvedPane.child === \"function\" ? memoBind(resolvedPane, \"child\") : resolvedPane.child,\n          levelIndex: nextLevelIndex,\n          structureContext\n        });\n      }))).flat();\n    }\n    return [];\n  }\n  const matchingPanes = await traverse({\n    currentId: \"root\",\n    flatIndex: 0,\n    levelIndex: 0,\n    intent: options.intent,\n    params: options.params,\n    parent: null,\n    path: [],\n    payload: options.payload,\n    unresolvedPane: options.rootPaneNode,\n    structureContext: options.structureContext\n  });\n  const closestPaneToRoot = matchingPanes.sort((a, b) => {\n    if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex;\n    return a.depthIndex - b.depthIndex;\n  })[0];\n  if (closestPaneToRoot) {\n    return closestPaneToRoot.panes;\n  }\n  return fallbackEditorPanes;\n}\nconst fallbackEditorChild = (nodeId, context) => {\n  const id = nodeId.replace(/^__edit__/, \"\");\n  const {\n    params,\n    payload,\n    structureContext: {\n      resolveDocumentNode\n    }\n  } = context;\n  const {\n    type,\n    template\n  } = params;\n  if (!type) {\n    throw new Error(\"Document type for document with ID \".concat(id, \" was not provided in the router params.\"));\n  }\n  let defaultDocumentBuilder = resolveDocumentNode({\n    schemaType: type,\n    documentId: id\n  }).id(\"editor\");\n  if (template) {\n    defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(template, payload);\n  }\n  return defaultDocumentBuilder.serialize();\n};\nfunction hashContext(context) {\n  var _a, _b;\n  return \"contextHash(\".concat(JSON.stringify({\n    id: context.id,\n    parentId: parent && assignId(parent),\n    path: context.path,\n    index: context.index,\n    splitIndex: context.splitIndex,\n    serializeOptionsIndex: (_a = context.serializeOptions) == null ? void 0 : _a.index,\n    serializeOptionsPath: (_b = context.serializeOptions) == null ? void 0 : _b.path\n  }), \")\");\n}\nconst hashResolvedPaneMeta = meta => {\n  const normalized = {\n    type: meta.type,\n    id: meta.routerPaneSibling.id,\n    params: meta.routerPaneSibling.params || {},\n    payload: meta.routerPaneSibling.payload || null,\n    flatIndex: meta.flatIndex,\n    groupIndex: meta.groupIndex,\n    siblingIndex: meta.siblingIndex,\n    path: meta.path,\n    paneNode: meta.type === \"resolvedMeta\" ? assignId(meta.paneNode) : null\n  };\n  return \"metaHash(\".concat(JSON.stringify(normalized), \")\");\n};\nfunction resolvePaneTree(_ref4) {\n  let {\n    unresolvedPane,\n    flattenedRouterPanes,\n    parent: parent2,\n    path,\n    resolvePane,\n    structureContext\n  } = _ref4;\n  const [current, ...rest] = flattenedRouterPanes;\n  const next = rest[0];\n  const context = {\n    id: current.routerPaneSibling.id,\n    splitIndex: current.siblingIndex,\n    parent: parent2,\n    path: [...path, current.routerPaneSibling.id],\n    index: current.flatIndex,\n    params: current.routerPaneSibling.params || {},\n    payload: current.routerPaneSibling.payload,\n    structureContext\n  };\n  try {\n    return resolvePane(unresolvedPane, context, current.flatIndex).pipe(\n    // this switch map receives a resolved pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(paneNode => {\n      const resolvedPaneMeta = {\n        type: \"resolvedMeta\",\n        ...current,\n        paneNode,\n        path: context.path\n      };\n      const loadingPanes = rest.map((i, restIndex) => {\n        const loadingPanePath = [...context.path, ...rest.slice(restIndex).map((_, currentIndex) => \"[\".concat(i.flatIndex + currentIndex, \"]\"))];\n        const loadingPane = {\n          type: \"loading\",\n          path: loadingPanePath,\n          paneNode: null,\n          ...i\n        };\n        return loadingPane;\n      });\n      if (!rest.length) {\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([resolvedPaneMeta]);\n      }\n      let nextStream;\n      if (\n      // the fallback editor case\n      next == null ? void 0 : next.routerPaneSibling.id.startsWith(\"__edit__\")) {\n        nextStream = resolvePaneTree({\n          unresolvedPane: fallbackEditorChild,\n          flattenedRouterPanes: rest,\n          parent: parent2,\n          path: context.path,\n          resolvePane,\n          structureContext\n        });\n      } else if (current.groupIndex === (next == null ? void 0 : next.groupIndex)) {\n        nextStream = resolvePaneTree({\n          unresolvedPane,\n          flattenedRouterPanes: rest,\n          parent: parent2,\n          path,\n          resolvePane,\n          structureContext\n        });\n      } else {\n        nextStream = resolvePaneTree({\n          unresolvedPane: typeof paneNode.child === \"function\" ? memoBind(paneNode, \"child\") : paneNode.child,\n          flattenedRouterPanes: rest,\n          parent: paneNode,\n          path: context.path,\n          resolvePane,\n          structureContext\n        });\n      }\n      return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.concat)(\n      // we emit the loading panes first in a concat (this emits immediately)\n      (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([resolvedPaneMeta, ...loadingPanes]),\n      // then whenever the next stream is done, the results will be combined.\n      nextStream.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(nextResolvedPanes => [resolvedPaneMeta, ...nextResolvedPanes])));\n    }));\n  } catch (e) {\n    if (e instanceof PaneResolutionError) {\n      if (e.context) {\n        console.warn(\"Pane resolution error at index \".concat(e.context.index).concat(e.context.splitIndex > 0 ? \" for split pane index \".concat(e.context.splitIndex) : \"\", \": \").concat(e.message).concat(e.helpId ? \" - see \".concat((0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__.generateHelpUrl)(e.helpId)) : \"\"), e);\n      }\n      if (e.helpId === \"structure-item-returned-no-child\") {\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.of)([]);\n      }\n    }\n    throw e;\n  }\n}\nfunction createResolvedPaneNodeStream(_ref5) {\n  let {\n    routerPanesStream,\n    rootPaneNode,\n    initialCacheState = {\n      cacheKeysByFlatIndex: [],\n      flattenedRouterPanes: [],\n      resolvedPaneCache: /* @__PURE__ */new Map(),\n      resolvePane: () => rxjs__WEBPACK_IMPORTED_MODULE_19__.NEVER\n    },\n    structureContext\n  } = _ref5;\n  const resolvedPanes$ = routerPanesStream.pipe(\n  // add in implicit \"root\" router pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(rawRouterPanes => [[{\n    id: \"root\"\n  }], ...rawRouterPanes]),\n  // create flattened router panes\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(routerPanes => {\n    const flattenedRouterPanes = routerPanes.flatMap((routerPaneGroup, groupIndex) => routerPaneGroup.map((routerPaneSibling, siblingIndex) => ({\n      routerPaneSibling,\n      groupIndex,\n      siblingIndex\n    }))).map((i, index) => ({\n      ...i,\n      flatIndex: index\n    }));\n    return flattenedRouterPanes;\n  }),\n  // calculate a \"diffIndex\" used for clearing the memo cache\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.startWith)([]), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.pairwise)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(_ref6 => {\n    let [prev, curr] = _ref6;\n    for (let i = 0; i < curr.length; i++) {\n      const prevValue = prev[i];\n      const currValue = curr[i];\n      if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevValue, currValue)) {\n        return {\n          flattenedRouterPanes: curr,\n          diffIndex: i\n        };\n      }\n    }\n    return {\n      flattenedRouterPanes: curr,\n      diffIndex: curr.length\n    };\n  }),\n  // create the memoized `resolvePane` function and manage the memo cache\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.scan)((acc, next) => {\n    const {\n      cacheKeysByFlatIndex,\n      resolvedPaneCache\n    } = acc;\n    const {\n      flattenedRouterPanes,\n      diffIndex\n    } = next;\n    const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1);\n    const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1);\n    const keysToKeep = new Set(beforeDiffIndex.flatMap(keySet => Array.from(keySet)));\n    const keysToDelete = afterDiffIndex.flatMap(keySet => Array.from(keySet)).filter(key => !keysToKeep.has(key));\n    for (const key of keysToDelete) {\n      resolvedPaneCache.delete(key);\n    }\n    const memoize = nextFn => (unresolvedPane, context, flatIndex) => {\n      const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(hashContext(context));\n      const cachedResolvedPane = key && resolvedPaneCache.get(key);\n      if (cachedResolvedPane) return cachedResolvedPane;\n      const result = nextFn(unresolvedPane, context, flatIndex);\n      if (!key) return result;\n      const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || /* @__PURE__ */new Set();\n      cacheKeySet.add(key);\n      cacheKeysByFlatIndex[flatIndex] = cacheKeySet;\n      resolvedPaneCache.set(key, result);\n      return result;\n    };\n    return {\n      flattenedRouterPanes,\n      cacheKeysByFlatIndex,\n      resolvedPaneCache,\n      resolvePane: createPaneResolver(memoize)\n    };\n  }, initialCacheState),\n  // run the memoized, recursive resolving\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.switchMap)(_ref7 => {\n    let {\n      flattenedRouterPanes,\n      resolvePane\n    } = _ref7;\n    return resolvePaneTree({\n      unresolvedPane: rootPaneNode,\n      flattenedRouterPanes,\n      parent: null,\n      path: [],\n      resolvePane,\n      structureContext\n    });\n  }));\n  return resolvedPanes$.pipe(\n  // this diffs the previous emission with the current one. if there is a new\n  // loading pane at the same position where a previous pane already had a\n  // resolved value (looking at the IDs to compare), then return the previous\n  // pane instead of the loading pane\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.scan)((prev, next) => next.map((nextPane, index) => {\n    const prevPane = prev[index];\n    if (!prevPane) return nextPane;\n    if (nextPane.type !== \"loading\") return nextPane;\n    if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n      return prevPane;\n    }\n    return nextPane;\n  }), []),\n  // this prevents duplicate emissions\n  (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.distinctUntilChanged)((prev, next) => {\n    if (prev.length !== next.length) return false;\n    for (let i = 0; i < next.length; i++) {\n      const prevValue = prev[i];\n      const nextValue = next[i];\n      if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n        return false;\n      }\n    }\n    return true;\n  }));\n}\nfunction useRouterPanesStream() {\n  const routerStateSubject = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new rxjs__WEBPACK_IMPORTED_MODULE_19__.ReplaySubject(1), []);\n  const routerPanes$ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => routerStateSubject.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(_routerState => (_routerState == null ? void 0 : _routerState.panes) || [])), [routerStateSubject]);\n  const {\n    state: routerState\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    routerStateSubject.next(routerState);\n  }, [routerState, routerStateSubject]);\n  return routerPanes$;\n}\nfunction useResolvedPanes() {\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n  if (error) throw error;\n  const {\n    structureContext,\n    rootPaneNode\n  } = (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    paneDataItems: [],\n    resolvedPanes: [],\n    routerPanes: []\n  });\n  const routerPanesStream = useRouterPanesStream();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const resolvedPanes$ = createResolvedPaneNodeStream({\n      rootPaneNode,\n      routerPanesStream,\n      structureContext\n    }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.map)(resolvedPanes => {\n      const routerPanes = resolvedPanes.reduce((acc, next) => {\n        const currentGroup = acc[next.groupIndex] || [];\n        currentGroup[next.siblingIndex] = next.routerPaneSibling;\n        acc[next.groupIndex] = currentGroup;\n        return acc;\n      }, []);\n      const groupsLen = routerPanes.length;\n      const paneDataItems = resolvedPanes.map(pane => {\n        var _a;\n        const {\n          groupIndex,\n          flatIndex,\n          siblingIndex,\n          routerPaneSibling,\n          path\n        } = pane;\n        const itemId = routerPaneSibling.id;\n        const nextGroup = routerPanes[groupIndex + 1];\n        const paneDataItem = {\n          active: groupIndex === groupsLen - 2,\n          childItemId: (_a = nextGroup == null ? void 0 : nextGroup[0].id) != null ? _a : null,\n          index: flatIndex,\n          itemId: routerPaneSibling.id,\n          groupIndex,\n          key: \"\".concat(pane.type === \"loading\" ? \"unknown\" : pane.paneNode.id, \"-\").concat(itemId, \"-\").concat(siblingIndex),\n          pane: pane.type === \"loading\" ? _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE : pane.paneNode,\n          params: routerPaneSibling.params || {},\n          path: path.join(\";\"),\n          payload: routerPaneSibling.payload,\n          selected: flatIndex === resolvedPanes.length - 1,\n          siblingIndex\n        };\n        return paneDataItem;\n      });\n      return {\n        paneDataItems,\n        routerPanes,\n        resolvedPanes: paneDataItems.map(pane => pane.pane)\n      };\n    }));\n    const subscription = resolvedPanes$.subscribe({\n      next: result => setData(result),\n      error: e => setError(e)\n    });\n    return () => subscription.unsubscribe();\n  }, [rootPaneNode, routerPanesStream, structureContext]);\n  return data;\n}\nasync function ensureDocumentIdAndType(documentStore, id, type) {\n  if (id && type) return {\n    id,\n    type\n  };\n  if (!id && type) return {\n    id: (0,_sanity_uuid__WEBPACK_IMPORTED_MODULE_21__.uuid)(),\n    type\n  };\n  if (id && !type) {\n    const resolvedType = await (0,rxjs__WEBPACK_IMPORTED_MODULE_19__.firstValueFrom)(documentStore.resolveTypeForDocument(id));\n    return {\n      id,\n      type: resolvedType\n    };\n  }\n  throw new PaneResolutionError({\n    message: \"Neither document `id` or `type` was provided when trying to resolve intent.\"\n  });\n}\nconst EMPTY_RECORD = {};\nconst IntentResolver = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function IntentResolver2() {\n  const {\n    navigate\n  } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n  const maybeIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(routerState => {\n    const intentName = typeof routerState.intent === \"string\" ? routerState.intent : void 0;\n    return intentName ? {\n      intent: intentName,\n      params: (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(routerState.params) ? routerState.params : EMPTY_RECORD,\n      payload: routerState.payload\n    } : void 0;\n  }, []));\n  const {\n    rootPaneNode,\n    structureContext\n  } = (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const documentStore = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useDocumentStore)();\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  if (error) throw error;\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (maybeIntent) {\n      const {\n        intent,\n        params,\n        payload\n      } = maybeIntent;\n      let cancelled = false;\n      async function effect() {\n        const {\n          id,\n          type\n        } = await ensureDocumentIdAndType(documentStore, typeof params.id === \"string\" ? params.id : void 0, typeof params.type === \"string\" ? params.type : void 0);\n        if (cancelled) return;\n        const panes = await resolveIntent({\n          intent,\n          params: {\n            ...params,\n            id,\n            type\n          },\n          payload,\n          rootPaneNode,\n          structureContext\n        });\n        if (cancelled) return;\n        navigate({\n          panes\n        }, {\n          replace: true\n        });\n      }\n      effect().catch(setError);\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [documentStore, maybeIntent, navigate, rootPaneNode, structureContext]);\n  return null;\n});\nvar __freeze$1 = Object.freeze;\nvar __defProp$1 = Object.defineProperty;\nvar __template$1 = (cooked, raw) => __freeze$1(__defProp$1(cooked, \"raw\", {\n  value: __freeze$1(raw || cooked.slice())\n}));\nvar _a$1;\nconst PathSegment = styled_components__WEBPACK_IMPORTED_MODULE_22__[\"default\"].span(_a$1 || (_a$1 = __template$1([\"\\n  &:not(:last-child)::after {\\n    content: ' \\u279D ';\\n    opacity: 0.5;\\n  }\\n\"])));\nfunction formatStack(stack) {\n  return stack.replace(/\\(\\.\\.\\.\\)\\./g, \"(...)\\n  .\").replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, \"\").replace(/___default\\./g, \".\").replace(new RegExp(\" \\\\(https?:\\\\/\\\\/\".concat(window.location.host), \"g\"), \" (\");\n}\nfunction StructureError(_ref8) {\n  let {\n    error\n  } = _ref8;\n  if (!(error instanceof PaneResolutionError)) {\n    throw error;\n  }\n  const {\n    cause\n  } = error;\n  const stack = (cause == null ? void 0 : cause.stack) || error.stack;\n  const showStack = stack && !(cause instanceof _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError) && !error.message.includes(\"Module build failed:\");\n  const path = cause instanceof _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError ? cause.path : [];\n  const helpId = cause instanceof _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError && cause.helpId || error.helpId;\n  const handleReload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    window.location.reload();\n  }, []);\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n    height: \"fill\",\n    overflow: \"auto\",\n    padding: 4,\n    sizing: \"border\",\n    tone: \"critical\",\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Container, {\n      children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Heading, {\n        as: \"h2\",\n        children: \"Encountered an error while reading structure\"\n      }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n        marginTop: 4,\n        padding: 4,\n        radius: 2,\n        overflow: \"auto\",\n        shadow: 1,\n        tone: \"inherit\",\n        children: [path.length > 0 && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n          space: 2,\n          children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Label, {\n            children: \"Structure path\"\n          }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Code, {\n            children: path.slice(1).map((segment, i) =>\n            // eslint-disable-next-line react/no-array-index-key\n            /* @__PURE__ */\n            (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PathSegment, {\n              children: segment\n            }, \"\".concat(segment, \"-\").concat(i)))\n          })]\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n          marginTop: 4,\n          space: 2,\n          children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Label, {\n            children: \"Error\"\n          }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Code, {\n            children: showStack ? formatStack(stack) : error.message\n          })]\n        }), helpId && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n          marginTop: 4,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n            children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n              href: (0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_20__.generateHelpUrl)(helpId),\n              rel: \"noopener noreferrer\",\n              target: \"_blank\",\n              children: \"View documentation\"\n            })\n          })\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n          marginTop: 4,\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Button, {\n            text: \"Reload\",\n            icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_24__.SyncIcon,\n            tone: \"primary\",\n            onClick: handleReload\n          })\n        })]\n      })]\n    })\n  });\n}\nfunction UnknownPane(props) {\n  const {\n    isSelected,\n    pane,\n    paneKey\n  } = props;\n  const type = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(pane) && pane.type || null;\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.Pane, {\n    id: paneKey,\n    selected: isSelected,\n    children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.PaneHeader, {\n      title: \"Unknown pane type\"\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.PaneContent, {\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n        padding: 4,\n        children: typeof type === \"string\" ? /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n          as: \"p\",\n          muted: true,\n          children: [\"Structure item of type \", /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", {\n            children: type\n          }), \" is not a known entity.\"]\n        }) : /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n          as: \"p\",\n          muted: true,\n          children: [\"Structure item is missing required \", /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", {\n            children: \"type\"\n          }), \" property.\"]\n        })\n      })\n    })]\n  });\n}\nconst paneMap = {\n  component: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_index-lHtK80fO_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-lHtK80fO.js */ \"./node_modules/sanity/lib/_chunks/index-lHtK80fO.js\"))),\n  document: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_pane-BzYoLAok_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-BzYoLAok.js */ \"./node_modules/sanity/lib/_chunks/pane-BzYoLAok.js\"))),\n  documentList: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_pane-wQ_41HlJ_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-wQ_41HlJ.js */ \"./node_modules/sanity/lib/_chunks/pane-wQ_41HlJ.js\"))),\n  list: (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(() => __webpack_require__.e(/*! import() */ \"node_modules_sanity_lib__chunks_index-vptXz7al_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-vptXz7al.js */ \"./node_modules/sanity/lib/_chunks/index-vptXz7al.js\")))\n};\nconst DeskToolPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function DeskToolPane2(props) {\n  const {\n    active,\n    childItemId,\n    groupIndex,\n    index,\n    itemId,\n    pane,\n    paneKey,\n    params,\n    payload,\n    path,\n    selected,\n    siblingIndex\n  } = props;\n  const PaneComponent = paneMap[pane.type] || UnknownPane;\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneRouterProvider, {\n    flatIndex: index,\n    index: groupIndex,\n    params,\n    payload,\n    siblingIndex,\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n      fallback: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n        paneKey,\n        path,\n        selected\n      }),\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneComponent, {\n        childItemId: childItemId || \"\",\n        index,\n        itemId,\n        isActive: active,\n        isSelected: selected,\n        paneKey,\n        pane\n      })\n    })\n  });\n}, (_ref9, _ref10) => {\n  let {\n    params: prevParams = {},\n    payload: prevPayload = null,\n    ...prev\n  } = _ref9;\n  let {\n    params: nextParams = {},\n    payload: nextPayload = null,\n    ...next\n  } = _ref10;\n  if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevParams, nextParams)) return false;\n  if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevPayload, nextPayload)) return false;\n  const keys = /* @__PURE__ */new Set([...Object.keys(prev), ...Object.keys(next)]);\n  for (const key of keys) {\n    if (prev[key] !== next[key]) return false;\n  }\n  return true;\n});\nfunction NoDocumentTypesScreen() {\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n    height: \"fill\",\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Flex, {\n      align: \"center\",\n      height: \"fill\",\n      justify: \"center\",\n      padding: 4,\n      sizing: \"border\",\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Container, {\n        width: 0,\n        children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Card, {\n          padding: 4,\n          radius: 2,\n          shadow: 1,\n          tone: \"caution\",\n          children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Flex, {\n            children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Box, {\n              children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                size: 1,\n                children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_24__.WarningOutlineIcon, {})\n              })\n            }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Stack, {\n              flex: 1,\n              marginLeft: 3,\n              space: 3,\n              children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"h1\",\n                size: 1,\n                weight: \"bold\",\n                children: \"No document types\"\n              }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"p\",\n                muted: true,\n                size: 1,\n                children: \"Please define at least one document type in your schema.\"\n              }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.Text, {\n                as: \"p\",\n                muted: true,\n                size: 1,\n                children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                  href: \"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\",\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: \"Learn how to add a document type \\u2192\"\n                })\n              })]\n            })]\n          })\n        })\n      })\n    })\n  });\n}\nconst DocumentTitle = props => {\n  const {\n    documentId,\n    documentType\n  } = props;\n  const editState = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useEditState)(documentId, documentType);\n  const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n  const isNewDocument = !(editState == null ? void 0 : editState.published) && !(editState == null ? void 0 : editState.draft);\n  const documentValue = (editState == null ? void 0 : editState.draft) || (editState == null ? void 0 : editState.published);\n  const schemaType = schema.get(documentType);\n  const {\n    value,\n    isLoading: previewValueIsLoading\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.unstable_useValuePreview)({\n    enabled: true,\n    schemaType,\n    value: documentValue\n  });\n  const documentTitle = isNewDocument ? \"New \".concat((schemaType == null ? void 0 : schemaType.title) || (schemaType == null ? void 0 : schemaType.name)) : (value == null ? void 0 : value.title) || \"Untitled\";\n  const settled = editState.ready && !previewValueIsLoading;\n  const newTitle = useConstructDocumentTitle(documentTitle);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!settled) return;\n    document.title = newTitle;\n  }, [documentTitle, settled, newTitle]);\n  return null;\n};\nconst PassthroughTitle = props => {\n  const {\n    title\n  } = props;\n  const newTitle = useConstructDocumentTitle(title);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    document.title = newTitle;\n  }, [newTitle, title]);\n  return null;\n};\nconst DeskTitle = props => {\n  const {\n    resolvedPanes\n  } = props;\n  if (!(resolvedPanes == null ? void 0 : resolvedPanes.length)) return null;\n  const lastPane = resolvedPanes[resolvedPanes.length - 1];\n  if (isLoadingPane(lastPane)) {\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {});\n  }\n  if (isDocumentPane(lastPane)) {\n    if (lastPane == null ? void 0 : lastPane.title) {\n      return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n        title: lastPane.title\n      });\n    }\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentTitle, {\n      documentId: lastPane.options.id,\n      documentType: lastPane.options.type\n    });\n  }\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n    title: lastPane == null ? void 0 : lastPane.title\n  });\n};\nfunction useConstructDocumentTitle(activeTitle) {\n  const deskToolBaseTitle = (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)().structureContext.title;\n  return [activeTitle, deskToolBaseTitle].filter(title => title).join(\" | \");\n}\nfunction isDocumentPane(pane) {\n  return pane !== _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE && pane.type === \"document\";\n}\nfunction isLoadingPane(pane) {\n  return pane === _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE;\n}\nvar __freeze = Object.freeze;\nvar __defProp = Object.defineProperty;\nvar __template = (cooked, raw) => __freeze(__defProp(cooked, \"raw\", {\n  value: __freeze(raw || cooked.slice())\n}));\nvar _a;\nconst StyledPaneLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_22__[\"default\"])(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.PaneLayout)(_a || (_a = __template([\"\\n  min-height: 100%;\\n  min-width: 320px;\\n\"])));\nconst isSaveHotkey = (0,is_hotkey__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(\"mod+s\");\nconst DeskTool = (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function DeskTool2(_ref11) {\n  let {\n    onPaneChange\n  } = _ref11;\n  var _a2;\n  const {\n    push: pushToast\n  } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.useToast)();\n  const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n  const {\n    layoutCollapsed,\n    setLayoutCollapsed\n  } = (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.useDeskTool)();\n  const {\n    paneDataItems,\n    resolvedPanes\n  } = useResolvedPanes();\n  const isResolvingIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(routerState => typeof routerState.intent === \"string\", []));\n  const {\n    sanity: {\n      media\n    }\n  } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.useTheme)();\n  const [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n  const handleRootCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(true), [setLayoutCollapsed]);\n  const handleRootExpand = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => setLayoutCollapsed(false), [setLayoutCollapsed]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (resolvedPanes.length) {\n      onPaneChange(resolvedPanes);\n    }\n  }, [onPaneChange, resolvedPanes]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const handleGlobalKeyDown = event => {\n      if (isSaveHotkey(event)) {\n        event.preventDefault();\n        pushToast({\n          closable: true,\n          id: \"auto-save-message\",\n          status: \"info\",\n          title: \"Your work is automatically saved!\",\n          duration: 4e3\n        });\n      }\n    };\n    window.addEventListener(\"keydown\", handleGlobalKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n  }, [pushToast]);\n  const hasDefinedDocumentTypes = (_a2 = schema._original) == null ? void 0 : _a2.types.some(sanity__WEBPACK_IMPORTED_MODULE_17__._isCustomDocumentTypeDefinition);\n  if (!hasDefinedDocumentTypes) {\n    return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NoDocumentTypesScreen, {});\n  }\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.PortalProvider, {\n    element: portalElement || null,\n    children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledPaneLayout, {\n      flex: 1,\n      height: layoutCollapsed ? void 0 : \"fill\",\n      minWidth: media[1],\n      onCollapse: handleRootCollapse,\n      onExpand: handleRootExpand,\n      children: [paneDataItems.map(_ref12 => {\n        let {\n          active,\n          childItemId,\n          groupIndex,\n          itemId,\n          key: paneKey,\n          pane,\n          index: paneIndex,\n          params: paneParams,\n          path,\n          payload,\n          siblingIndex,\n          selected\n        } = _ref12;\n        return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n          children: pane === _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n            paneKey,\n            path,\n            selected\n          }) : /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskToolPane, {\n            active,\n            groupIndex,\n            index: paneIndex,\n            pane,\n            childItemId,\n            itemId,\n            paneKey,\n            params: paneParams,\n            payload,\n            path,\n            selected,\n            siblingIndex\n          })\n        }, \"\".concat(pane === _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? \"loading\" : pane.type, \"-\").concat(paneIndex));\n      }), paneDataItems.length <= 1 && isResolvingIntent && /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n        paneKey: \"intent-resolver\"\n      })]\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskTitle, {\n      resolvedPanes\n    }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      \"data-portal\": \"\",\n      ref: setPortalElement\n    })]\n  });\n});\nfunction DeskToolBoundary(_ref13) {\n  let {\n    tool: {\n      options\n    }\n  } = _ref13;\n  const {\n    unstable_sources: sources\n  } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useWorkspace)();\n  const [firstSource] = sources;\n  const {\n    source,\n    defaultDocumentNode,\n    structure\n  } = options || {};\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n    return () => (0,_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n  }, []);\n  const [{\n    error\n  }, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n    error: null\n  });\n  if (error) return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureError, {\n    error\n  });\n  return /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_23__.ErrorBoundary, {\n    onCatch: setError,\n    children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.SourceProvider, {\n      name: source || firstSource.name,\n      children: /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.DeskToolProvider, {\n        defaultDocumentNode,\n        structure,\n        children: [/* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DeskTool, {\n          onPaneChange: _desk_pMu7KvwG_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes\n        }), /* @__PURE__ */(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IntentResolver, {})]\n      })\n    })\n  });\n}\n\n//# sourceMappingURL=index-tPvISQ9P.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2FuaXR5L2xpYi9fY2h1bmtzL2luZGV4LXRQdklTUTlQLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ29EO0FBQ29EO0FBQ2lIO0FBQ3JPO0FBQzBEO0FBQzVEO0FBQzBGO0FBQzRDO0FBQzFHO0FBQ3BCO0FBQ2tCO0FBQ3RCO0FBQ0c7QUFDc0I7QUFDaEM7QUFDUjtBQUNHO0FBQ0s7QUFDTDtBQUNJO0FBQ1Y7QUFDVztBQUNJO0FBQ2E7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxFQUFFLHlEQUFTO0FBQ2Ysc0JBQXNCLDhEQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLElBQUksRUFBRSxpRUFBYTtBQUNuQiwyQkFBMkIsOENBQU87QUFDbEMsbUJBQW1CLDhDQUFPO0FBQzFCO0FBQ0EsZ0NBQWdDLGtEQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILDZCQUE2QixrREFBVztBQUN4QztBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsK0JBQStCLGtEQUFXO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSCxxQkFBcUIsa0RBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxvQkFBb0Isa0RBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCw4QkFBOEIsa0RBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZEQUFRO0FBQ2pDO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxH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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVMscUJBQXFCLDREQUFZO0FBQzFDLE9BQU8sb0VBQW9FLHNEQUFHLENBQUMsMkRBQVc7QUFDMUY7QUFDQSxPQUFPO0FBQ1AsS0FBSyxrQkFBa0Isc0RBQUc7QUFDMUI7QUFDQSxLQUFLLGtCQUFrQixzREFBRztBQUMxQjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EsSUFBSSxFQUFFLHFEQUFZO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osRUFBRSxnREFBUztBQUNYLElBQUksa0VBQWM7QUFDbEIsaUJBQWlCLGtFQUFjO0FBQy9CLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRyxjQUFjLCtDQUFRO0FBQ3pCO0FBQ0EsR0FBRztBQUNILG1DQUFtQyxzREFBRztBQUN0QztBQUNBLEdBQUc7QUFDSCx3QkFBd0Isc0RBQUcsQ0FBQyxzREFBYTtBQUN6QztBQUNBLDZCQUE2QixzREFBRyxDQUFDLG1EQUFjO0FBQy9DO0FBQ0EsK0JBQStCLHVEQUFJLENBQUMsZ0VBQWdCO0FBQ3BEO0FBQ0E7QUFDQSxrQ0FBa0Msc0RBQUc7QUFDckMsd0JBQXdCLDhEQUFjO0FBQ3RDLFNBQVMsa0JBQWtCLHNEQUFHLG1CQUFtQjtBQUNqRCxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUN1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc2FuaXR5L2xpYi9fY2h1bmtzL2luZGV4LXRQdklTUTlQLmpzP2RhMzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsganN4LCBqc3hzIH0gZnJvbSAncmVhY3QvanN4LXJ1bnRpbWUnO1xuaW1wb3J0IHsgdXNlTWVtbywgdXNlQ2FsbGJhY2ssIHVzZVN0YXRlLCB1c2VFZmZlY3QsIG1lbW8sIGxhenksIFN1c3BlbnNlLCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENhcmQsIENvbnRhaW5lciwgSGVhZGluZywgU3RhY2ssIExhYmVsLCBDb2RlLCBCb3gsIFRleHQsIEJ1dHRvbiwgRmxleCwgdXNlVG9hc3QsIHVzZVRoZW1lLCBQb3J0YWxQcm92aWRlciwgRXJyb3JCb3VuZGFyeSB9IGZyb20gJ0BzYW5pdHkvdWknO1xuaW1wb3J0IHsgdXNlUGFuZUxheW91dCwgQ2hpbGRMaW5rLCBCYWNrTGluaywgUmVmZXJlbmNlQ2hpbGRMaW5rLCBQYXJhbWV0ZXJpemVkTGluaywgUGFuZVJvdXRlckNvbnRleHQsIHVzZURlc2tUb29sLCBMT0FESU5HX1BBTkUsIFNlcmlhbGl6ZUVycm9yLCBQYW5lLCBQYW5lSGVhZGVyLCBQYW5lQ29udGVudCwgTG9hZGluZ1BhbmUsIFBhbmVMYXlvdXQsIHNldEFjdGl2ZVBhbmVzLCBEZXNrVG9vbFByb3ZpZGVyIH0gZnJvbSAnLi9kZXNrLXBNdTdLdndHLmpzJztcbmltcG9ydCBvbWl0IGZyb20gJ2xvZGFzaC9vbWl0LmpzJztcbmltcG9ydCB7IGlzT2JzZXJ2YWJsZSwgZnJvbSwgb2YsIGZpcnN0VmFsdWVGcm9tLCBORVZFUiwgY29uY2F0LCBSZXBsYXlTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBuYW5vaWQgfSBmcm9tICduYW5vaWQnO1xuaW1wb3J0IHsgc3dpdGNoTWFwLCBwdWJsaXNoUmVwbGF5LCByZWZDb3VudCwgbWFwLCBzdGFydFdpdGgsIHBhaXJ3aXNlLCBzY2FuLCBkaXN0aW5jdFVudGlsQ2hhbmdlZCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IGlzUmVjb3JkLCB1c2VEb2N1bWVudFN0b3JlLCB1c2VFZGl0U3RhdGUsIHVzZVNjaGVtYSwgdW5zdGFibGVfdXNlVmFsdWVQcmV2aWV3LCBfaXNDdXN0b21Eb2N1bWVudFR5cGVEZWZpbml0aW9uLCB1c2VXb3Jrc3BhY2UsIFNvdXJjZVByb3ZpZGVyIH0gZnJvbSAnc2FuaXR5JztcbmltcG9ydCB7IGdlbmVyYXRlSGVscFVybCB9IGZyb20gJ0BzYW5pdHkvZ2VuZXJhdGUtaGVscC11cmwnO1xuaW1wb3J0IGlzRXF1YWwgZnJvbSAnbG9kYXNoL2lzRXF1YWwuanMnO1xuaW1wb3J0IHsgdXNlUm91dGVyLCB1c2VSb3V0ZXJTdGF0ZSB9IGZyb20gJ3Nhbml0eS9yb3V0ZXInO1xuaW1wb3J0IHsgdXVpZCB9IGZyb20gJ0BzYW5pdHkvdXVpZCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7IFN5bmNJY29uLCBXYXJuaW5nT3V0bGluZUljb24gfSBmcm9tICdAc2FuaXR5L2ljb25zJztcbmltcG9ydCAnbG9kYXNoL2NhbWVsQ2FzZS5qcyc7XG5pbXBvcnQgJ3NwZWFraW5ndXJsJztcbmltcG9ydCAnbG9kYXNoL3VuaXEuanMnO1xuaW1wb3J0ICdsb2Rhc2gva2ViYWJDYXNlLmpzJztcbmltcG9ydCAnbG9kYXNoL2ZpbmQuanMnO1xuaW1wb3J0ICdsb2Rhc2gvdW5pcXVlSWQuanMnO1xuaW1wb3J0ICdyZWFjdC1pcyc7XG5pbXBvcnQgJ2xvZGFzaC9zdGFydENhc2UuanMnO1xuaW1wb3J0IGlzSG90a2V5IGZyb20gJ2lzLWhvdGtleSc7XG5pbXBvcnQgeyB0b1N0cmluZyB9IGZyb20gJ0BzYW5pdHkvdXRpbC9wYXRocyc7XG5jb25zdCBlbXB0eUFycmF5ID0gW107XG5mdW5jdGlvbiBQYW5lUm91dGVyUHJvdmlkZXIocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGNoaWxkcmVuLFxuICAgIGZsYXRJbmRleCxcbiAgICBpbmRleCxcbiAgICBwYXJhbXMsXG4gICAgcGF5bG9hZCxcbiAgICBzaWJsaW5nSW5kZXhcbiAgfSA9IHByb3BzO1xuICBjb25zdCB7XG4gICAgbmF2aWdhdGUsXG4gICAgbmF2aWdhdGVJbnRlbnQsXG4gICAgcmVzb2x2ZVBhdGhGcm9tU3RhdGVcbiAgfSA9IHVzZVJvdXRlcigpO1xuICBjb25zdCByb3V0ZXJTdGF0ZSA9IHVzZVJvdXRlclN0YXRlKCk7XG4gIGNvbnN0IHtcbiAgICBwYW5lcyxcbiAgICBleHBhbmRcbiAgfSA9IHVzZVBhbmVMYXlvdXQoKTtcbiAgY29uc3Qgcm91dGVyUGFuZUdyb3VwcyA9IHVzZU1lbW8oKCkgPT4gKHJvdXRlclN0YXRlID09IG51bGwgPyB2b2lkIDAgOiByb3V0ZXJTdGF0ZS5wYW5lcykgfHwgZW1wdHlBcnJheSwgW3JvdXRlclN0YXRlID09IG51bGwgPyB2b2lkIDAgOiByb3V0ZXJTdGF0ZS5wYW5lc10pO1xuICBjb25zdCBsYXN0UGFuZSA9IHVzZU1lbW8oKCkgPT4gcGFuZXMgPT0gbnVsbCA/IHZvaWQgMCA6IHBhbmVzW3BhbmVzLmxlbmd0aCAtIDJdLCBbcGFuZXNdKTtcbiAgY29uc3QgZ3JvdXBJbmRleCA9IGluZGV4IC0gMTtcbiAgY29uc3QgY3JlYXRlTmV4dFJvdXRlclN0YXRlID0gdXNlQ2FsbGJhY2sobW9kaWZpZXIgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnRHcm91cCA9IHJvdXRlclBhbmVHcm91cHNbZ3JvdXBJbmRleF0gfHwgW107XG4gICAgY29uc3QgY3VycmVudEl0ZW0gPSBjdXJyZW50R3JvdXBbc2libGluZ0luZGV4XTtcbiAgICBjb25zdCBuZXh0R3JvdXAgPSBtb2RpZmllcihjdXJyZW50R3JvdXAsIGN1cnJlbnRJdGVtKTtcbiAgICBjb25zdCBuZXh0UGFuZXMgPSBbLi4ucm91dGVyUGFuZUdyb3Vwcy5zbGljZSgwLCBncm91cEluZGV4KSwgbmV4dEdyb3VwLCAuLi5yb3V0ZXJQYW5lR3JvdXBzLnNsaWNlKGdyb3VwSW5kZXggKyAxKV07XG4gICAgY29uc3QgbmV4dFJvdXRlclN0YXRlID0ge1xuICAgICAgLi4uKHJvdXRlclN0YXRlIHx8IHt9KSxcbiAgICAgIHBhbmVzOiBuZXh0UGFuZXNcbiAgICB9O1xuICAgIHJldHVybiBuZXh0Um91dGVyU3RhdGU7XG4gIH0sIFtncm91cEluZGV4LCByb3V0ZXJQYW5lR3JvdXBzLCByb3V0ZXJTdGF0ZSwgc2libGluZ0luZGV4XSk7XG4gIGNvbnN0IG1vZGlmeUN1cnJlbnRHcm91cCA9IHVzZUNhbGxiYWNrKG1vZGlmaWVyID0+IHtcbiAgICBjb25zdCBuZXh0Um91dGVyU3RhdGUgPSBjcmVhdGVOZXh0Um91dGVyU3RhdGUobW9kaWZpZXIpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4gbmF2aWdhdGUobmV4dFJvdXRlclN0YXRlKSwgMCk7XG4gICAgcmV0dXJuIG5leHRSb3V0ZXJTdGF0ZTtcbiAgfSwgW2NyZWF0ZU5leHRSb3V0ZXJTdGF0ZSwgbmF2aWdhdGVdKTtcbiAgY29uc3QgY3JlYXRlUGF0aFdpdGhQYXJhbXMgPSB1c2VDYWxsYmFjayhuZXh0UGFyYW1zID0+IHtcbiAgICBjb25zdCBuZXh0Um91dGVyU3RhdGUgPSBjcmVhdGVOZXh0Um91dGVyU3RhdGUoKHNpYmxpbmdzLCBpdGVtKSA9PiBbLi4uc2libGluZ3Muc2xpY2UoMCwgc2libGluZ0luZGV4KSwge1xuICAgICAgLi4uaXRlbSxcbiAgICAgIHBhcmFtczogbmV4dFBhcmFtc1xuICAgIH0sIC4uLnNpYmxpbmdzLnNsaWNlKHNpYmxpbmdJbmRleCArIDEpXSk7XG4gICAgcmV0dXJuIHJlc29sdmVQYXRoRnJvbVN0YXRlKG5leHRSb3V0ZXJTdGF0ZSk7XG4gIH0sIFtjcmVhdGVOZXh0Um91dGVyU3RhdGUsIHJlc29sdmVQYXRoRnJvbVN0YXRlLCBzaWJsaW5nSW5kZXhdKTtcbiAgY29uc3Qgc2V0UGF5bG9hZCA9IHVzZUNhbGxiYWNrKG5leHRQYXlsb2FkID0+IHtcbiAgICBtb2RpZnlDdXJyZW50R3JvdXAoKHNpYmxpbmdzLCBpdGVtKSA9PiBbLi4uc2libGluZ3Muc2xpY2UoMCwgc2libGluZ0luZGV4KSwge1xuICAgICAgLi4uaXRlbSxcbiAgICAgIHBheWxvYWQ6IG5leHRQYXlsb2FkXG4gICAgfSwgLi4uc2libGluZ3Muc2xpY2Uoc2libGluZ0luZGV4ICsgMSldKTtcbiAgfSwgW21vZGlmeUN1cnJlbnRHcm91cCwgc2libGluZ0luZGV4XSk7XG4gIGNvbnN0IHNldFBhcmFtcyA9IHVzZUNhbGxiYWNrKG5leHRQYXJhbXMgPT4ge1xuICAgIG1vZGlmeUN1cnJlbnRHcm91cCgoc2libGluZ3MsIGl0ZW0pID0+IFsuLi5zaWJsaW5ncy5zbGljZSgwLCBzaWJsaW5nSW5kZXgpLCB7XG4gICAgICAuLi5pdGVtLFxuICAgICAgcGFyYW1zOiBuZXh0UGFyYW1zXG4gICAgfSwgLi4uc2libGluZ3Muc2xpY2Uoc2libGluZ0luZGV4ICsgMSldKTtcbiAgfSwgW21vZGlmeUN1cnJlbnRHcm91cCwgc2libGluZ0luZGV4XSk7XG4gIGNvbnN0IGhhbmRsZUVkaXRSZWZlcmVuY2UgPSB1c2VDYWxsYmFjayhfcmVmID0+IHtcbiAgICBsZXQge1xuICAgICAgaWQsXG4gICAgICBwYXJlbnRSZWZQYXRoLFxuICAgICAgdHlwZSxcbiAgICAgIHRlbXBsYXRlXG4gICAgfSA9IF9yZWY7XG4gICAgbmF2aWdhdGUoe1xuICAgICAgcGFuZXM6IFsuLi5yb3V0ZXJQYW5lR3JvdXBzLnNsaWNlKDAsIGdyb3VwSW5kZXggKyAxKSwgW3tcbiAgICAgICAgaWQsXG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIHRlbXBsYXRlOiB0ZW1wbGF0ZS5pZCxcbiAgICAgICAgICBwYXJlbnRSZWZQYXRoOiB0b1N0cmluZyhwYXJlbnRSZWZQYXRoKSxcbiAgICAgICAgICB0eXBlXG4gICAgICAgIH0sXG4gICAgICAgIHBheWxvYWQ6IHRlbXBsYXRlLnBhcmFtc1xuICAgICAgfV1dXG4gICAgfSk7XG4gIH0sIFtncm91cEluZGV4LCBuYXZpZ2F0ZSwgcm91dGVyUGFuZUdyb3Vwc10pO1xuICBjb25zdCBjdHggPSB1c2VNZW1vKCgpID0+ICh7XG4gICAgLy8gWmVyby1iYXNlZCBpbmRleCAocG9zaXRpb24pIG9mIHBhbmUsIHZpc3VhbGx5XG4gICAgaW5kZXg6IGZsYXRJbmRleCxcbiAgICAvLyBaZXJvLWJhc2VkIGluZGV4IG9mIHBhbmUgZ3JvdXAgKHdpdGhpbiBVUkwgc3RydWN0dXJlKVxuICAgIGdyb3VwSW5kZXgsXG4gICAgLy8gWmVyby1iYXNlZCBpbmRleCBvZiBwYW5lIHdpdGhpbiBzaWJsaW5nIGdyb3VwXG4gICAgc2libGluZ0luZGV4LFxuICAgIC8vIFBheWxvYWQgb2YgdGhlIGN1cnJlbnQgcGFuZVxuICAgIHBheWxvYWQsXG4gICAgLy8gUGFyYW1zIG9mIHRoZSBjdXJyZW50IHBhbmVcbiAgICBwYXJhbXMsXG4gICAgLy8gV2hldGhlciBvciBub3QgdGhlIHBhbmUgaGFzIGFueSBzaWJsaW5ncyAod2l0aGluIHRoZSBzYW1lIGdyb3VwKVxuICAgIGhhc0dyb3VwU2libGluZ3M6IHJvdXRlclBhbmVHcm91cHNbZ3JvdXBJbmRleF0gPyByb3V0ZXJQYW5lR3JvdXBzW2dyb3VwSW5kZXhdLmxlbmd0aCA+IDEgOiBmYWxzZSxcbiAgICAvLyBUaGUgbGVuZ3RoIG9mIHRoZSBjdXJyZW50IGdyb3VwXG4gICAgZ3JvdXBMZW5ndGg6IHJvdXRlclBhbmVHcm91cHNbZ3JvdXBJbmRleF0gPyByb3V0ZXJQYW5lR3JvdXBzW2dyb3VwSW5kZXhdLmxlbmd0aCA6IDAsXG4gICAgLy8gQ3VycmVudCByb3V0ZXIgc3RhdGUgZm9yIHRoZSBcInBhbmVzXCIgcHJvcGVydHlcbiAgICByb3V0ZXJQYW5lc1N0YXRlOiByb3V0ZXJQYW5lR3JvdXBzLFxuICAgIC8vIEN1cnJpZWQgU3RhdGVMaW5rIHRoYXQgcGFzc2VzIHRoZSBjb3JyZWN0IHN0YXRlIGF1dG9tYXRpY2FsbHlcbiAgICBDaGlsZExpbmssXG4gICAgLy8gQ3VycmllZCBTdGF0ZUxpbmsgdGhhdCBwb3BzIG9mZiB0aGUgbGFzdCBwYW5lIGdyb3VwXG4gICAgQmFja0xpbmssXG4gICAgLy8gQSBzcGVjaWFsaXplZCBgQ2hpbGRMaW5rYCB0aGF0IHRha2VzIGluIHRoZSBuZWVkZWQgcHJvcHMgdG8gb3BlbiBhXG4gICAgLy8gcmVmZXJlbmNlZCBkb2N1bWVudCB0byB0aGUgcmlnaHRcbiAgICBSZWZlcmVuY2VDaGlsZExpbmssXG4gICAgLy8gU2ltaWxhciB0byBgUmVmZXJlbmNlQ2hpbGRMaW5rYCBleHBlY3Qgd2l0aG91dCB0aGUgd3JhcHBpbmcgY29tcG9uZW50XG4gICAgaGFuZGxlRWRpdFJlZmVyZW5jZSxcbiAgICAvLyBDdXJyaWVkIFN0YXRlTGluayB0aGF0IHBhc3NlZCB0aGUgY29ycmVjdCBzdGF0ZSwgYnV0IG1lcmdlcyBwYXJhbXMvcGF5bG9hZFxuICAgIFBhcmFtZXRlcml6ZWRMaW5rLFxuICAgIC8vIFJlcGxhY2VzIHRoZSBjdXJyZW50IHBhbmUgd2l0aCBhIG5ldyBvbmVcbiAgICByZXBsYWNlQ3VycmVudDogZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9O1xuICAgICAgbW9kaWZ5Q3VycmVudEdyb3VwKCgpID0+IFt7XG4gICAgICAgIGlkOiBvcHRzLmlkIHx8IFwiXCIsXG4gICAgICAgIHBheWxvYWQ6IG9wdHMucGF5bG9hZCxcbiAgICAgICAgcGFyYW1zOiBvcHRzLnBhcmFtcyB8fCB7fVxuICAgICAgfV0pO1xuICAgIH0sXG4gICAgLy8gUmVtb3ZlcyB0aGUgY3VycmVudCBwYW5lIGZyb20gdGhlIGdyb3VwXG4gICAgY2xvc2VDdXJyZW50OiAoKSA9PiB7XG4gICAgICBtb2RpZnlDdXJyZW50R3JvdXAoKHNpYmxpbmdzLCBpdGVtKSA9PiBzaWJsaW5ncy5sZW5ndGggPiAxID8gc2libGluZ3MuZmlsdGVyKHNpYmxpbmcgPT4gc2libGluZyAhPT0gaXRlbSkgOiBzaWJsaW5ncyk7XG4gICAgfSxcbiAgICAvLyBSZW1vdmVzIGFsbCBwYW5lcyB0byB0aGUgcmlnaHQgaW5jbHVkaW5nIGN1cnJlbnRcbiAgICBjbG9zZUN1cnJlbnRBbmRBZnRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgbGV0IGV4cGFuZExhc3QgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHRydWU7XG4gICAgICBpZiAoZXhwYW5kTGFzdCAmJiBsYXN0UGFuZSkge1xuICAgICAgICBleHBhbmQobGFzdFBhbmUuZWxlbWVudCk7XG4gICAgICB9XG4gICAgICBuYXZpZ2F0ZSh7XG4gICAgICAgIHBhbmVzOiBbLi4ucm91dGVyUGFuZUdyb3Vwcy5zbGljZSgwLCBncm91cEluZGV4KV1cbiAgICAgIH0sIHtcbiAgICAgICAgcmVwbGFjZTogdHJ1ZVxuICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyBEdXBsaWNhdGUgdGhlIGN1cnJlbnQgcGFuZSwgd2l0aCBvcHRpb25hbCBvdmVycmlkZXMgZm9yIHBheWxvYWQsIHBhcmFtZXRlcnNcbiAgICBkdXBsaWNhdGVDdXJyZW50OiBvcHRpb25zID0+IHtcbiAgICAgIG1vZGlmeUN1cnJlbnRHcm91cCgoc2libGluZ3MsIGl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgZHVwbGljYXRlZEl0ZW0gPSB7XG4gICAgICAgICAgLi4uaXRlbSxcbiAgICAgICAgICBwYXlsb2FkOiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5wYXlsb2FkKSB8fCBpdGVtLnBheWxvYWQsXG4gICAgICAgICAgcGFyYW1zOiAob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5wYXJhbXMpIHx8IGl0ZW0ucGFyYW1zXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBbLi4uc2libGluZ3Muc2xpY2UoMCwgc2libGluZ0luZGV4KSwgZHVwbGljYXRlZEl0ZW0sIC4uLnNpYmxpbmdzLnNsaWNlKHNpYmxpbmdJbmRleCldO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyBTZXQgdGhlIHZpZXcgZm9yIHRoZSBjdXJyZW50IHBhbmVcbiAgICBzZXRWaWV3OiB2aWV3SWQgPT4ge1xuICAgICAgY29uc3QgcmVzdFBhcmFtcyA9IG9taXQocGFyYW1zLCBcInZpZXdcIik7XG4gICAgICByZXR1cm4gc2V0UGFyYW1zKHZpZXdJZCA/IHtcbiAgICAgICAgLi4ucmVzdFBhcmFtcyxcbiAgICAgICAgdmlldzogdmlld0lkXG4gICAgICB9IDogcmVzdFBhcmFtcyk7XG4gICAgfSxcbiAgICAvLyBTZXQgdGhlIHBhcmFtZXRlcnMgZm9yIHRoZSBjdXJyZW50IHBhbmVcbiAgICBzZXRQYXJhbXMsXG4gICAgLy8gU2V0IHRoZSBwYXlsb2FkIGZvciB0aGUgY3VycmVudCBwYW5lXG4gICAgc2V0UGF5bG9hZCxcbiAgICAvLyBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHBhdGggd2l0aCB0aGUgZ2l2ZW4gcGFyYW1ldGVyc1xuICAgIGNyZWF0ZVBhdGhXaXRoUGFyYW1zLFxuICAgIC8vIFByb3hpZWQgbmF2aWdhdGlvbiB0byBhIGdpdmVuIGludGVudC4gQ29uc2lkZXIganVzdCBleHBvc2luZyBgcm91dGVyYCBpbnN0ZWFkP1xuICAgIG5hdmlnYXRlSW50ZW50XG4gIH0pLCBbZmxhdEluZGV4LCBncm91cEluZGV4LCBzaWJsaW5nSW5kZXgsIHBheWxvYWQsIHBhcmFtcywgcm91dGVyUGFuZUdyb3VwcywgaGFuZGxlRWRpdFJlZmVyZW5jZSwgc2V0UGFyYW1zLCBzZXRQYXlsb2FkLCBjcmVhdGVQYXRoV2l0aFBhcmFtcywgbmF2aWdhdGVJbnRlbnQsIG1vZGlmeUN1cnJlbnRHcm91cCwgbGFzdFBhbmUsIG5hdmlnYXRlLCBleHBhbmRdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqL2pzeChQYW5lUm91dGVyQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjdHgsXG4gICAgY2hpbGRyZW5cbiAgfSk7XG59XG5jbGFzcyBQYW5lUmVzb2x1dGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihfcmVmMikge1xuICAgIGxldCB7XG4gICAgICBtZXNzYWdlLFxuICAgICAgY29udGV4dCxcbiAgICAgIGhlbHBJZCxcbiAgICAgIGNhdXNlXG4gICAgfSA9IF9yZWYyO1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgdGhpcy5oZWxwSWQgPSBoZWxwSWQ7XG4gICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICB9XG59XG5jb25zdCByYW5kb21JZENhY2hlID0gLyogQF9fUFVSRV9fICovbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIGFzc2lnbklkKG9iaikge1xuICBjb25zdCBjYWNoZWRWYWx1ZSA9IHJhbmRvbUlkQ2FjaGUuZ2V0KG9iaik7XG4gIGlmIChjYWNoZWRWYWx1ZSkgcmV0dXJuIGNhY2hlZFZhbHVlO1xuICBjb25zdCBpZCA9IG5hbm9pZCgpO1xuICByYW5kb21JZENhY2hlLnNldChvYmosIGlkKTtcbiAgcmV0dXJuIGlkO1xufVxuY29uc3QgYmluZENhY2hlID0gLyogQF9fUFVSRV9fICovbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIG1lbW9CaW5kKG9iaiwgbWV0aG9kS2V5KSB7XG4gIGNvbnN0IGJvdW5kTWV0aG9kcyA9IGJpbmRDYWNoZS5nZXQob2JqKSB8fCAvKiBAX19QVVJFX18gKi9uZXcgTWFwKCk7XG4gIGlmIChib3VuZE1ldGhvZHMpIHtcbiAgICBjb25zdCBib3VuZDIgPSBib3VuZE1ldGhvZHMuZ2V0KG1ldGhvZEtleSk7XG4gICAgaWYgKGJvdW5kMikgcmV0dXJuIGJvdW5kMjtcbiAgfVxuICBjb25zdCBtZXRob2QgPSBvYmpbbWV0aG9kS2V5XTtcbiAgaWYgKHR5cGVvZiBtZXRob2QgIT09IFwiZnVuY3Rpb25cIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIHByb3BlcnR5IGBcIi5jb25jYXQobWV0aG9kS2V5LCBcImAgdG8gYmUgYSBmdW5jdGlvbiBidXQgZ290IFwiKS5jb25jYXQodHlwZW9mIG1ldGhvZCwgXCIgaW5zdGVhZC5cIikpO1xuICB9XG4gIGNvbnN0IGJvdW5kID0gbWV0aG9kLmJpbmQob2JqKTtcbiAgYm91bmRNZXRob2RzLnNldChtZXRob2RLZXksIGJvdW5kKTtcbiAgYmluZENhY2hlLnNldChvYmosIGJvdW5kTWV0aG9kcyk7XG4gIHJldHVybiBib3VuZDtcbn1cbmNvbnN0IGlzUHJvbWlzZSA9IHRoaW5nID0+IHtcbiAgcmV0dXJuICEhdGhpbmcgJiYgdHlwZW9mICh0aGluZyA9PSBudWxsID8gdm9pZCAwIDogdGhpbmcudGhlbikgPT09IFwiZnVuY3Rpb25cIjtcbn07XG5jb25zdCBpc1NlcmlhbGl6YWJsZSA9IHRoaW5nID0+IHtcbiAgaWYgKCFpc1JlY29yZCh0aGluZykpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHR5cGVvZiB0aGluZy5zZXJpYWxpemUgPT09IFwiZnVuY3Rpb25cIjtcbn07XG5jb25zdCByZXRocm93V2l0aFBhbmVSZXNvbHV0aW9uRXJyb3JzID0gbmV4dCA9PiAodW5yZXNvbHZlZFBhbmUsIGNvbnRleHQsIGZsYXRJbmRleCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBuZXh0KHVucmVzb2x2ZWRQYW5lLCBjb250ZXh0LCBmbGF0SW5kZXgpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBQYW5lUmVzb2x1dGlvbkVycm9yKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgUGFuZVJlc29sdXRpb25FcnJvcih7XG4gICAgICBtZXNzYWdlOiB0eXBlb2YgKGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUubWVzc2FnZSkgPT09IFwic3RyaW5nXCIgPyBlLm1lc3NhZ2UgOiBcIlwiLFxuICAgICAgY29udGV4dCxcbiAgICAgIGNhdXNlOiBlXG4gICAgfSk7XG4gIH1cbn07XG5jb25zdCB3cmFwV2l0aFB1Ymxpc2hSZXBsYXkgPSBuZXh0ID0+IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5leHQoLi4uYXJndW1lbnRzKS5waXBlKFxuICAvLyBuZWVkIHRvIGFkZCBwdWJsaXNoUmVwbGF5ICsgcmVmQ291bnQgdG8gZW5zdXJlIG5ldyBzdWJzY3JpYmVycyBhbHdheXNcbiAgLy8gZ2V0IGFuIGVtaXNzaW9uLiB3aXRob3V0IHRoaXMsIG1lbW9pemVkIG9ic2VydmFibGVzIG1heSBnZXQgc3R1Y2tcbiAgLy8gd2FpdGluZyBmb3IgdGhlaXIgZmlyc3QgZW1pc3Npb25zIHJlc3VsdGluZyBpbiBhIGxvYWRpbmcgcGFuZVxuICBwdWJsaXNoUmVwbGF5KDEpLCByZWZDb3VudCgpKTtcbn07XG5mdW5jdGlvbiBjcmVhdGVQYW5lUmVzb2x2ZXIobWlkZGxld2FyZSkge1xuICBjb25zdCByZXNvbHZlUGFuZSA9IHJldGhyb3dXaXRoUGFuZVJlc29sdXRpb25FcnJvcnMod3JhcFdpdGhQdWJsaXNoUmVwbGF5KG1pZGRsZXdhcmUoKHVucmVzb2x2ZWRQYW5lLCBjb250ZXh0LCBmbGF0SW5kZXgpID0+IHtcbiAgICBpZiAoIXVucmVzb2x2ZWRQYW5lKSB7XG4gICAgICB0aHJvdyBuZXcgUGFuZVJlc29sdXRpb25FcnJvcih7XG4gICAgICAgIG1lc3NhZ2U6IFwiUGFuZSByZXR1cm5lZCBubyBjaGlsZFwiLFxuICAgICAgICBjb250ZXh0LFxuICAgICAgICBoZWxwSWQ6IFwic3RydWN0dXJlLWl0ZW0tcmV0dXJuZWQtbm8tY2hpbGRcIlxuICAgICAgfSk7XG4gICAgfVxuICAgIGlmIChpc1Byb21pc2UodW5yZXNvbHZlZFBhbmUpIHx8IGlzT2JzZXJ2YWJsZSh1bnJlc29sdmVkUGFuZSkpIHtcbiAgICAgIHJldHVybiBmcm9tKHVucmVzb2x2ZWRQYW5lKS5waXBlKHN3aXRjaE1hcChyZXN1bHQgPT4gcmVzb2x2ZVBhbmUocmVzdWx0LCBjb250ZXh0LCBmbGF0SW5kZXgpKSk7XG4gICAgfVxuICAgIGlmIChpc1NlcmlhbGl6YWJsZSh1bnJlc29sdmVkUGFuZSkpIHtcbiAgICAgIHJldHVybiByZXNvbHZlUGFuZSh1bnJlc29sdmVkUGFuZS5zZXJpYWxpemUoY29udGV4dCksIGNvbnRleHQsIGZsYXRJbmRleCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdW5yZXNvbHZlZFBhbmUgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgcmV0dXJuIHJlc29sdmVQYW5lKHVucmVzb2x2ZWRQYW5lKGNvbnRleHQuaWQsIGNvbnRleHQpLCBjb250ZXh0LCBmbGF0SW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gb2YodW5yZXNvbHZlZFBhbmUpO1xuICB9KSkpO1xuICByZXR1cm4gcmVzb2x2ZVBhbmU7XG59XG5hc3luYyBmdW5jdGlvbiByZXNvbHZlSW50ZW50KG9wdGlvbnMpIHtcbiAgY29uc3QgcmVzb2x2ZWRQYW5lQ2FjaGUgPSAvKiBAX19QVVJFX18gKi9uZXcgTWFwKCk7XG4gIGNvbnN0IG1lbW9pemUgPSBuZXh0Rm4gPT4gKHVucmVzb2x2ZWRQYW5lLCBjb250ZXh0LCBmbGF0SW5kZXgpID0+IHtcbiAgICBjb25zdCBrZXkgPSB1bnJlc29sdmVkUGFuZSAmJiBcIlwiLmNvbmNhdChhc3NpZ25JZCh1bnJlc29sdmVkUGFuZSksIFwiLVwiKS5jb25jYXQoY29udGV4dC5wYXRoLmpvaW4oXCJfX1wiKSk7XG4gICAgY29uc3QgY2FjaGVkUmVzb2x2ZWRQYW5lID0ga2V5ICYmIHJlc29sdmVkUGFuZUNhY2hlLmdldChrZXkpO1xuICAgIGlmIChjYWNoZWRSZXNvbHZlZFBhbmUpIHJldHVybiBjYWNoZWRSZXNvbHZlZFBhbmU7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV4dEZuKHVucmVzb2x2ZWRQYW5lLCBjb250ZXh0LCBmbGF0SW5kZXgpO1xuICAgIGlmIChrZXkpIHJlc29sdmVkUGFuZUNhY2hlLnNldChrZXksIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgY29uc3QgcmVzb2x2ZVBhbmUgPSBjcmVhdGVQYW5lUmVzb2x2ZXIobWVtb2l6ZSk7XG4gIGNvbnN0IGZhbGxiYWNrRWRpdG9yUGFuZXMgPSBbW3tcbiAgICBpZDogXCJfX2VkaXRfX1wiLmNvbmNhdChvcHRpb25zLnBhcmFtcy5pZCksXG4gICAgcGFyYW1zOiB7XG4gICAgICAuLi5vbWl0KG9wdGlvbnMucGFyYW1zLCBbXCJpZFwiXSksXG4gICAgICB0eXBlOiBvcHRpb25zLnBhcmFtcy50eXBlXG4gICAgfSxcbiAgICBwYXlsb2FkOiBvcHRpb25zLnBheWxvYWRcbiAgfV1dO1xuICBhc3luYyBmdW5jdGlvbiB0cmF2ZXJzZShfcmVmMykge1xuICAgIGxldCB7XG4gICAgICBjdXJyZW50SWQsXG4gICAgICBmbGF0SW5kZXgsXG4gICAgICBpbnRlbnQsXG4gICAgICBwYXJhbXMsXG4gICAgICBwYXJlbnQsXG4gICAgICBwYXRoLFxuICAgICAgcGF5bG9hZCxcbiAgICAgIHVucmVzb2x2ZWRQYW5lLFxuICAgICAgbGV2ZWxJbmRleCxcbiAgICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgICB9ID0gX3JlZjM7XG4gICAgdmFyIF9hO1xuICAgIGlmICghdW5yZXNvbHZlZFBhbmUpIHJldHVybiBbXTtcbiAgICBjb25zdCB7XG4gICAgICBpZDogdGFyZ2V0SWQsXG4gICAgICB0eXBlOiBzY2hlbWFUeXBlTmFtZSxcbiAgICAgIC4uLm90aGVyUGFyYW1zXG4gICAgfSA9IHBhcmFtcztcbiAgICBjb25zdCBjb250ZXh0ID0ge1xuICAgICAgaWQ6IGN1cnJlbnRJZCxcbiAgICAgIHNwbGl0SW5kZXg6IDAsXG4gICAgICBwYXJlbnQsXG4gICAgICBwYXRoLFxuICAgICAgaW5kZXg6IGZsYXRJbmRleCxcbiAgICAgIHBhcmFtczoge30sXG4gICAgICBwYXlsb2FkOiB2b2lkIDAsXG4gICAgICBzdHJ1Y3R1cmVDb250ZXh0XG4gICAgfTtcbiAgICBjb25zdCByZXNvbHZlZFBhbmUgPSBhd2FpdCBmaXJzdFZhbHVlRnJvbShyZXNvbHZlUGFuZSh1bnJlc29sdmVkUGFuZSwgY29udGV4dCwgZmxhdEluZGV4KSk7XG4gICAgaWYgKHJlc29sdmVkUGFuZS50eXBlID09PSBcImRvY3VtZW50XCIgJiYgcmVzb2x2ZWRQYW5lLmlkID09PSB0YXJnZXRJZCkge1xuICAgICAgcmV0dXJuIFt7XG4gICAgICAgIHBhbmVzOiBbLi4ucGF0aC5zbGljZSgwLCBwYXRoLmxlbmd0aCAtIDEpLm1hcChpID0+IFt7XG4gICAgICAgICAgaWQ6IGlcbiAgICAgICAgfV0pLCBbe1xuICAgICAgICAgIGlkOiB0YXJnZXRJZCxcbiAgICAgICAgICBwYXJhbXM6IG90aGVyUGFyYW1zLFxuICAgICAgICAgIHBheWxvYWRcbiAgICAgICAgfV1dLFxuICAgICAgICBkZXB0aEluZGV4OiBwYXRoLmxlbmd0aCxcbiAgICAgICAgbGV2ZWxJbmRleFxuICAgICAgfV07XG4gICAgfVxuICAgIGlmIChcbiAgICAvLyBpZiB0aGUgcmVzb2x2ZSBwYW5lJ3MgYGNhbkhhbmRsZUludGVudGAgcmV0dXJucyB0cnVlLCB0aGVuIHJlc29sdmVcbiAgICAoKF9hID0gcmVzb2x2ZWRQYW5lLmNhbkhhbmRsZUludGVudCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLmNhbGwocmVzb2x2ZWRQYW5lLCBpbnRlbnQsIHBhcmFtcywge1xuICAgICAgcGFuZTogcmVzb2x2ZWRQYW5lLFxuICAgICAgaW5kZXg6IGZsYXRJbmRleFxuICAgIH0pKSB8fFxuICAgIC8vIGlmIHRoZSBwYW5lJ3MgYGNhbkhhbmRsZUludGVudGAgZGlkIG5vdCByZXR1cm4gdHJ1ZSwgdGhlbiBtYXRjaCBhZ2FpbnN0XG4gICAgLy8gdGhpcyBkZWZhdWx0IGNhc2UuIHdlIHdpbGwgcmVzb2x2ZSB0aGUgaW50ZW50IGlmOlxuICAgIHJlc29sdmVkUGFuZS50eXBlID09PSBcImRvY3VtZW50TGlzdFwiICYmXG4gICAgLy8gMS4gdGhlIHNjaGVtYSB0eXBlIG1hdGNoZXMgKHRoaXMgcmVxdWlyZWQgZm9yIHRoZSBkb2N1bWVudCB0byByZW5kZXIpXG4gICAgcmVzb2x2ZWRQYW5lLnNjaGVtYVR5cGVOYW1lID09PSBzY2hlbWFUeXBlTmFtZSAmJlxuICAgIC8vIDIuIHRoZSBmaWx0ZXIgaXMgdGhlIGRlZmF1bHQgZmlsdGVyLlxuICAgIC8vXG4gICAgLy8gTk9URTogdGhpcyBjYXNlIGlzIHRvIHByZXZlbnQgZmFsc2UgcG9zaXRpdmUgbWF0Y2hlcyB3aGVyZSB0aGUgdXNlclxuICAgIC8vIGhhcyBjb25maWd1cmVkIGEgbW9yZSBzcGVjaWZpYyBmaWx0ZXIgZm9yIGEgcGFydGljdWxhciB0eXBlLiBJbiB0aGF0XG4gICAgLy8gY2FzZSwgdGhlIHVzZXIgY2FuIGltcGxlbWVudCB0aGVpciBvd24gYGNhbkhhbmRsZUludGVudGAgZnVuY3Rpb25cbiAgICByZXNvbHZlZFBhbmUub3B0aW9ucy5maWx0ZXIgPT09IFwiX3R5cGUgPT0gJHR5cGVcIikge1xuICAgICAgcmV0dXJuIFt7XG4gICAgICAgIHBhbmVzOiBbXG4gICAgICAgIC8vIG1hcCB0aGUgY3VycmVudCBwYXRoIHRvIHJvdXRlciBwYW5lc1xuICAgICAgICAuLi5wYXRoLm1hcChpZCA9PiBbe1xuICAgICAgICAgIGlkXG4gICAgICAgIH1dKSxcbiAgICAgICAgLy8gdGhlbiBhdWdtZW50IHdpdGggdGhlIGludGVudHMgSURzIGFuZCBwYXJhbXNcbiAgICAgICAgW3tcbiAgICAgICAgICBpZDogcGFyYW1zLmlkLFxuICAgICAgICAgIHBhcmFtczogb3RoZXJQYXJhbXMsXG4gICAgICAgICAgcGF5bG9hZFxuICAgICAgICB9XV0sXG4gICAgICAgIGRlcHRoSW5kZXg6IHBhdGgubGVuZ3RoLFxuICAgICAgICBsZXZlbEluZGV4XG4gICAgICB9XTtcbiAgICB9XG4gICAgaWYgKHJlc29sdmVkUGFuZS50eXBlID09PSBcImxpc3RcIiAmJiByZXNvbHZlZFBhbmUuY2hpbGQgJiYgcmVzb2x2ZWRQYW5lLml0ZW1zKSB7XG4gICAgICByZXR1cm4gKGF3YWl0IFByb21pc2UuYWxsKHJlc29sdmVkUGFuZS5pdGVtcy5tYXAoKGl0ZW0sIG5leHRMZXZlbEluZGV4KSA9PiB7XG4gICAgICAgIGlmIChpdGVtLnR5cGUgPT09IFwiZGl2aWRlclwiKSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgICAgICAgcmV0dXJuIHRyYXZlcnNlKHtcbiAgICAgICAgICBjdXJyZW50SWQ6IGl0ZW0uX2lkIHx8IGl0ZW0uaWQsXG4gICAgICAgICAgZmxhdEluZGV4OiBmbGF0SW5kZXggKyAxLFxuICAgICAgICAgIGludGVudCxcbiAgICAgICAgICBwYXJhbXMsXG4gICAgICAgICAgcGFyZW50OiByZXNvbHZlZFBhbmUsXG4gICAgICAgICAgcGF0aDogWy4uLnBhdGgsIGl0ZW0uaWRdLFxuICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgdW5yZXNvbHZlZFBhbmU6IHR5cGVvZiByZXNvbHZlZFBhbmUuY2hpbGQgPT09IFwiZnVuY3Rpb25cIiA/IG1lbW9CaW5kKHJlc29sdmVkUGFuZSwgXCJjaGlsZFwiKSA6IHJlc29sdmVkUGFuZS5jaGlsZCxcbiAgICAgICAgICBsZXZlbEluZGV4OiBuZXh0TGV2ZWxJbmRleCxcbiAgICAgICAgICBzdHJ1Y3R1cmVDb250ZXh0XG4gICAgICAgIH0pO1xuICAgICAgfSkpKS5mbGF0KCk7XG4gICAgfVxuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBtYXRjaGluZ1BhbmVzID0gYXdhaXQgdHJhdmVyc2Uoe1xuICAgIGN1cnJlbnRJZDogXCJyb290XCIsXG4gICAgZmxhdEluZGV4OiAwLFxuICAgIGxldmVsSW5kZXg6IDAsXG4gICAgaW50ZW50OiBvcHRpb25zLmludGVudCxcbiAgICBwYXJhbXM6IG9wdGlvbnMucGFyYW1zLFxuICAgIHBhcmVudDogbnVsbCxcbiAgICBwYXRoOiBbXSxcbiAgICBwYXlsb2FkOiBvcHRpb25zLnBheWxvYWQsXG4gICAgdW5yZXNvbHZlZFBhbmU6IG9wdGlvbnMucm9vdFBhbmVOb2RlLFxuICAgIHN0cnVjdHVyZUNvbnRleHQ6IG9wdGlvbnMuc3RydWN0dXJlQ29udGV4dFxuICB9KTtcbiAgY29uc3QgY2xvc2VzdFBhbmVUb1Jvb3QgPSBtYXRjaGluZ1BhbmVzLnNvcnQoKGEsIGIpID0+IHtcbiAgICBpZiAoYS5kZXB0aEluZGV4ID09PSBiLmRlcHRoSW5kZXgpIHJldHVybiBhLmxldmVsSW5kZXggLSBiLmxldmVsSW5kZXg7XG4gICAgcmV0dXJuIGEuZGVwdGhJbmRleCAtIGIuZGVwdGhJbmRleDtcbiAgfSlbMF07XG4gIGlmIChjbG9zZXN0UGFuZVRvUm9vdCkge1xuICAgIHJldHVybiBjbG9zZXN0UGFuZVRvUm9vdC5wYW5lcztcbiAgfVxuICByZXR1cm4gZmFsbGJhY2tFZGl0b3JQYW5lcztcbn1cbmNvbnN0IGZhbGxiYWNrRWRpdG9yQ2hpbGQgPSAobm9kZUlkLCBjb250ZXh0KSA9PiB7XG4gIGNvbnN0IGlkID0gbm9kZUlkLnJlcGxhY2UoL15fX2VkaXRfXy8sIFwiXCIpO1xuICBjb25zdCB7XG4gICAgcGFyYW1zLFxuICAgIHBheWxvYWQsXG4gICAgc3RydWN0dXJlQ29udGV4dDoge1xuICAgICAgcmVzb2x2ZURvY3VtZW50Tm9kZVxuICAgIH1cbiAgfSA9IGNvbnRleHQ7XG4gIGNvbnN0IHtcbiAgICB0eXBlLFxuICAgIHRlbXBsYXRlXG4gIH0gPSBwYXJhbXM7XG4gIGlmICghdHlwZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkRvY3VtZW50IHR5cGUgZm9yIGRvY3VtZW50IHdpdGggSUQgXCIuY29uY2F0KGlkLCBcIiB3YXMgbm90IHByb3ZpZGVkIGluIHRoZSByb3V0ZXIgcGFyYW1zLlwiKSk7XG4gIH1cbiAgbGV0IGRlZmF1bHREb2N1bWVudEJ1aWxkZXIgPSByZXNvbHZlRG9jdW1lbnROb2RlKHtcbiAgICBzY2hlbWFUeXBlOiB0eXBlLFxuICAgIGRvY3VtZW50SWQ6IGlkXG4gIH0pLmlkKFwiZWRpdG9yXCIpO1xuICBpZiAodGVtcGxhdGUpIHtcbiAgICBkZWZhdWx0RG9jdW1lbnRCdWlsZGVyID0gZGVmYXVsdERvY3VtZW50QnVpbGRlci5pbml0aWFsVmFsdWVUZW1wbGF0ZSh0ZW1wbGF0ZSwgcGF5bG9hZCk7XG4gIH1cbiAgcmV0dXJuIGRlZmF1bHREb2N1bWVudEJ1aWxkZXIuc2VyaWFsaXplKCk7XG59O1xuZnVuY3Rpb24gaGFzaENvbnRleHQoY29udGV4dCkge1xuICB2YXIgX2EsIF9iO1xuICByZXR1cm4gXCJjb250ZXh0SGFzaChcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkoe1xuICAgIGlkOiBjb250ZXh0LmlkLFxuICAgIHBhcmVudElkOiBwYXJlbnQgJiYgYXNzaWduSWQocGFyZW50KSxcbiAgICBwYXRoOiBjb250ZXh0LnBhdGgsXG4gICAgaW5kZXg6IGNvbnRleHQuaW5kZXgsXG4gICAgc3BsaXRJbmRleDogY29udGV4dC5zcGxpdEluZGV4LFxuICAgIHNlcmlhbGl6ZU9wdGlvbnNJbmRleDogKF9hID0gY29udGV4dC5zZXJpYWxpemVPcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogX2EuaW5kZXgsXG4gICAgc2VyaWFsaXplT3B0aW9uc1BhdGg6IChfYiA9IGNvbnRleHQuc2VyaWFsaXplT3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9iLnBhdGhcbiAgfSksIFwiKVwiKTtcbn1cbmNvbnN0IGhhc2hSZXNvbHZlZFBhbmVNZXRhID0gbWV0YSA9PiB7XG4gIGNvbnN0IG5vcm1hbGl6ZWQgPSB7XG4gICAgdHlwZTogbWV0YS50eXBlLFxuICAgIGlkOiBtZXRhLnJvdXRlclBhbmVTaWJsaW5nLmlkLFxuICAgIHBhcmFtczogbWV0YS5yb3V0ZXJQYW5lU2libGluZy5wYXJhbXMgfHwge30sXG4gICAgcGF5bG9hZDogbWV0YS5yb3V0ZXJQYW5lU2libGluZy5wYXlsb2FkIHx8IG51bGwsXG4gICAgZmxhdEluZGV4OiBtZXRhLmZsYXRJbmRleCxcbiAgICBncm91cEluZGV4OiBtZXRhLmdyb3VwSW5kZXgsXG4gICAgc2libGluZ0luZGV4OiBtZXRhLnNpYmxpbmdJbmRleCxcbiAgICBwYXRoOiBtZXRhLnBhdGgsXG4gICAgcGFuZU5vZGU6IG1ldGEudHlwZSA9PT0gXCJyZXNvbHZlZE1ldGFcIiA/IGFzc2lnbklkKG1ldGEucGFuZU5vZGUpIDogbnVsbFxuICB9O1xuICByZXR1cm4gXCJtZXRhSGFzaChcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkobm9ybWFsaXplZCksIFwiKVwiKTtcbn07XG5mdW5jdGlvbiByZXNvbHZlUGFuZVRyZWUoX3JlZjQpIHtcbiAgbGV0IHtcbiAgICB1bnJlc29sdmVkUGFuZSxcbiAgICBmbGF0dGVuZWRSb3V0ZXJQYW5lcyxcbiAgICBwYXJlbnQ6IHBhcmVudDIsXG4gICAgcGF0aCxcbiAgICByZXNvbHZlUGFuZSxcbiAgICBzdHJ1Y3R1cmVDb250ZXh0XG4gIH0gPSBfcmVmNDtcbiAgY29uc3QgW2N1cnJlbnQsIC4uLnJlc3RdID0gZmxhdHRlbmVkUm91dGVyUGFuZXM7XG4gIGNvbnN0IG5leHQgPSByZXN0WzBdO1xuICBjb25zdCBjb250ZXh0ID0ge1xuICAgIGlkOiBjdXJyZW50LnJvdXRlclBhbmVTaWJsaW5nLmlkLFxuICAgIHNwbGl0SW5kZXg6IGN1cnJlbnQuc2libGluZ0luZGV4LFxuICAgIHBhcmVudDogcGFyZW50MixcbiAgICBwYXRoOiBbLi4ucGF0aCwgY3VycmVudC5yb3V0ZXJQYW5lU2libGluZy5pZF0sXG4gICAgaW5kZXg6IGN1cnJlbnQuZmxhdEluZGV4LFxuICAgIHBhcmFtczogY3VycmVudC5yb3V0ZXJQYW5lU2libGluZy5wYXJhbXMgfHwge30sXG4gICAgcGF5bG9hZDogY3VycmVudC5yb3V0ZXJQYW5lU2libGluZy5wYXlsb2FkLFxuICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgfTtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcmVzb2x2ZVBhbmUodW5yZXNvbHZlZFBhbmUsIGNvbnRleHQsIGN1cnJlbnQuZmxhdEluZGV4KS5waXBlKFxuICAgIC8vIHRoaXMgc3dpdGNoIG1hcCByZWNlaXZlcyBhIHJlc29sdmVkIHBhbmVcbiAgICBzd2l0Y2hNYXAocGFuZU5vZGUgPT4ge1xuICAgICAgY29uc3QgcmVzb2x2ZWRQYW5lTWV0YSA9IHtcbiAgICAgICAgdHlwZTogXCJyZXNvbHZlZE1ldGFcIixcbiAgICAgICAgLi4uY3VycmVudCxcbiAgICAgICAgcGFuZU5vZGUsXG4gICAgICAgIHBhdGg6IGNvbnRleHQucGF0aFxuICAgICAgfTtcbiAgICAgIGNvbnN0IGxvYWRpbmdQYW5lcyA9IHJlc3QubWFwKChpLCByZXN0SW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgbG9hZGluZ1BhbmVQYXRoID0gWy4uLmNvbnRleHQucGF0aCwgLi4ucmVzdC5zbGljZShyZXN0SW5kZXgpLm1hcCgoXywgY3VycmVudEluZGV4KSA9PiBcIltcIi5jb25jYXQoaS5mbGF0SW5kZXggKyBjdXJyZW50SW5kZXgsIFwiXVwiKSldO1xuICAgICAgICBjb25zdCBsb2FkaW5nUGFuZSA9IHtcbiAgICAgICAgICB0eXBlOiBcImxvYWRpbmdcIixcbiAgICAgICAgICBwYXRoOiBsb2FkaW5nUGFuZVBhdGgsXG4gICAgICAgICAgcGFuZU5vZGU6IG51bGwsXG4gICAgICAgICAgLi4uaVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbG9hZGluZ1BhbmU7XG4gICAgICB9KTtcbiAgICAgIGlmICghcmVzdC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG9mKFtyZXNvbHZlZFBhbmVNZXRhXSk7XG4gICAgICB9XG4gICAgICBsZXQgbmV4dFN0cmVhbTtcbiAgICAgIGlmIChcbiAgICAgIC8vIHRoZSBmYWxsYmFjayBlZGl0b3IgY2FzZVxuICAgICAgbmV4dCA9PSBudWxsID8gdm9pZCAwIDogbmV4dC5yb3V0ZXJQYW5lU2libGluZy5pZC5zdGFydHNXaXRoKFwiX19lZGl0X19cIikpIHtcbiAgICAgICAgbmV4dFN0cmVhbSA9IHJlc29sdmVQYW5lVHJlZSh7XG4gICAgICAgICAgdW5yZXNvbHZlZFBhbmU6IGZhbGxiYWNrRWRpdG9yQ2hpbGQsXG4gICAgICAgICAgZmxhdHRlbmVkUm91dGVyUGFuZXM6IHJlc3QsXG4gICAgICAgICAgcGFyZW50OiBwYXJlbnQyLFxuICAgICAgICAgIHBhdGg6IGNvbnRleHQucGF0aCxcbiAgICAgICAgICByZXNvbHZlUGFuZSxcbiAgICAgICAgICBzdHJ1Y3R1cmVDb250ZXh0XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChjdXJyZW50Lmdyb3VwSW5kZXggPT09IChuZXh0ID09IG51bGwgPyB2b2lkIDAgOiBuZXh0Lmdyb3VwSW5kZXgpKSB7XG4gICAgICAgIG5leHRTdHJlYW0gPSByZXNvbHZlUGFuZVRyZWUoe1xuICAgICAgICAgIHVucmVzb2x2ZWRQYW5lLFxuICAgICAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzOiByZXN0LFxuICAgICAgICAgIHBhcmVudDogcGFyZW50MixcbiAgICAgICAgICBwYXRoLFxuICAgICAgICAgIHJlc29sdmVQYW5lLFxuICAgICAgICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuZXh0U3RyZWFtID0gcmVzb2x2ZVBhbmVUcmVlKHtcbiAgICAgICAgICB1bnJlc29sdmVkUGFuZTogdHlwZW9mIHBhbmVOb2RlLmNoaWxkID09PSBcImZ1bmN0aW9uXCIgPyBtZW1vQmluZChwYW5lTm9kZSwgXCJjaGlsZFwiKSA6IHBhbmVOb2RlLmNoaWxkLFxuICAgICAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzOiByZXN0LFxuICAgICAgICAgIHBhcmVudDogcGFuZU5vZGUsXG4gICAgICAgICAgcGF0aDogY29udGV4dC5wYXRoLFxuICAgICAgICAgIHJlc29sdmVQYW5lLFxuICAgICAgICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29uY2F0KFxuICAgICAgLy8gd2UgZW1pdCB0aGUgbG9hZGluZyBwYW5lcyBmaXJzdCBpbiBhIGNvbmNhdCAodGhpcyBlbWl0cyBpbW1lZGlhdGVseSlcbiAgICAgIG9mKFtyZXNvbHZlZFBhbmVNZXRhLCAuLi5sb2FkaW5nUGFuZXNdKSxcbiAgICAgIC8vIHRoZW4gd2hlbmV2ZXIgdGhlIG5leHQgc3RyZWFtIGlzIGRvbmUsIHRoZSByZXN1bHRzIHdpbGwgYmUgY29tYmluZWQuXG4gICAgICBuZXh0U3RyZWFtLnBpcGUobWFwKG5leHRSZXNvbHZlZFBhbmVzID0+IFtyZXNvbHZlZFBhbmVNZXRhLCAuLi5uZXh0UmVzb2x2ZWRQYW5lc10pKSk7XG4gICAgfSkpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBQYW5lUmVzb2x1dGlvbkVycm9yKSB7XG4gICAgICBpZiAoZS5jb250ZXh0KSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIlBhbmUgcmVzb2x1dGlvbiBlcnJvciBhdCBpbmRleCBcIi5jb25jYXQoZS5jb250ZXh0LmluZGV4KS5jb25jYXQoZS5jb250ZXh0LnNwbGl0SW5kZXggPiAwID8gXCIgZm9yIHNwbGl0IHBhbmUgaW5kZXggXCIuY29uY2F0KGUuY29udGV4dC5zcGxpdEluZGV4KSA6IFwiXCIsIFwiOiBcIikuY29uY2F0KGUubWVzc2FnZSkuY29uY2F0KGUuaGVscElkID8gXCIgLSBzZWUgXCIuY29uY2F0KGdlbmVyYXRlSGVscFVybChlLmhlbHBJZCkpIDogXCJcIiksIGUpO1xuICAgICAgfVxuICAgICAgaWYgKGUuaGVscElkID09PSBcInN0cnVjdHVyZS1pdGVtLXJldHVybmVkLW5vLWNoaWxkXCIpIHtcbiAgICAgICAgcmV0dXJuIG9mKFtdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuZnVuY3Rpb24gY3JlYXRlUmVzb2x2ZWRQYW5lTm9kZVN0cmVhbShfcmVmNSkge1xuICBsZXQge1xuICAgIHJvdXRlclBhbmVzU3RyZWFtLFxuICAgIHJvb3RQYW5lTm9kZSxcbiAgICBpbml0aWFsQ2FjaGVTdGF0ZSA9IHtcbiAgICAgIGNhY2hlS2V5c0J5RmxhdEluZGV4OiBbXSxcbiAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzOiBbXSxcbiAgICAgIHJlc29sdmVkUGFuZUNhY2hlOiAvKiBAX19QVVJFX18gKi9uZXcgTWFwKCksXG4gICAgICByZXNvbHZlUGFuZTogKCkgPT4gTkVWRVJcbiAgICB9LFxuICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgfSA9IF9yZWY1O1xuICBjb25zdCByZXNvbHZlZFBhbmVzJCA9IHJvdXRlclBhbmVzU3RyZWFtLnBpcGUoXG4gIC8vIGFkZCBpbiBpbXBsaWNpdCBcInJvb3RcIiByb3V0ZXIgcGFuZVxuICBtYXAocmF3Um91dGVyUGFuZXMgPT4gW1t7XG4gICAgaWQ6IFwicm9vdFwiXG4gIH1dLCAuLi5yYXdSb3V0ZXJQYW5lc10pLFxuICAvLyBjcmVhdGUgZmxhdHRlbmVkIHJvdXRlciBwYW5lc1xuICBtYXAocm91dGVyUGFuZXMgPT4ge1xuICAgIGNvbnN0IGZsYXR0ZW5lZFJvdXRlclBhbmVzID0gcm91dGVyUGFuZXMuZmxhdE1hcCgocm91dGVyUGFuZUdyb3VwLCBncm91cEluZGV4KSA9PiByb3V0ZXJQYW5lR3JvdXAubWFwKChyb3V0ZXJQYW5lU2libGluZywgc2libGluZ0luZGV4KSA9PiAoe1xuICAgICAgcm91dGVyUGFuZVNpYmxpbmcsXG4gICAgICBncm91cEluZGV4LFxuICAgICAgc2libGluZ0luZGV4XG4gICAgfSkpKS5tYXAoKGksIGluZGV4KSA9PiAoe1xuICAgICAgLi4uaSxcbiAgICAgIGZsYXRJbmRleDogaW5kZXhcbiAgICB9KSk7XG4gICAgcmV0dXJuIGZsYXR0ZW5lZFJvdXRlclBhbmVzO1xuICB9KSxcbiAgLy8gY2FsY3VsYXRlIGEgXCJkaWZmSW5kZXhcIiB1c2VkIGZvciBjbGVhcmluZyB0aGUgbWVtbyBjYWNoZVxuICBzdGFydFdpdGgoW10pLCBwYWlyd2lzZSgpLCBtYXAoX3JlZjYgPT4ge1xuICAgIGxldCBbcHJldiwgY3Vycl0gPSBfcmVmNjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN1cnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IHByZXZWYWx1ZSA9IHByZXZbaV07XG4gICAgICBjb25zdCBjdXJyVmFsdWUgPSBjdXJyW2ldO1xuICAgICAgaWYgKCFpc0VxdWFsKHByZXZWYWx1ZSwgY3VyclZhbHVlKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzOiBjdXJyLFxuICAgICAgICAgIGRpZmZJbmRleDogaVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgZmxhdHRlbmVkUm91dGVyUGFuZXM6IGN1cnIsXG4gICAgICBkaWZmSW5kZXg6IGN1cnIubGVuZ3RoXG4gICAgfTtcbiAgfSksXG4gIC8vIGNyZWF0ZSB0aGUgbWVtb2l6ZWQgYHJlc29sdmVQYW5lYCBmdW5jdGlvbiBhbmQgbWFuYWdlIHRoZSBtZW1vIGNhY2hlXG4gIHNjYW4oKGFjYywgbmV4dCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIGNhY2hlS2V5c0J5RmxhdEluZGV4LFxuICAgICAgcmVzb2x2ZWRQYW5lQ2FjaGVcbiAgICB9ID0gYWNjO1xuICAgIGNvbnN0IHtcbiAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzLFxuICAgICAgZGlmZkluZGV4XG4gICAgfSA9IG5leHQ7XG4gICAgY29uc3QgYmVmb3JlRGlmZkluZGV4ID0gY2FjaGVLZXlzQnlGbGF0SW5kZXguc2xpY2UoMCwgZGlmZkluZGV4ICsgMSk7XG4gICAgY29uc3QgYWZ0ZXJEaWZmSW5kZXggPSBjYWNoZUtleXNCeUZsYXRJbmRleC5zbGljZShkaWZmSW5kZXggKyAxKTtcbiAgICBjb25zdCBrZXlzVG9LZWVwID0gbmV3IFNldChiZWZvcmVEaWZmSW5kZXguZmxhdE1hcChrZXlTZXQgPT4gQXJyYXkuZnJvbShrZXlTZXQpKSk7XG4gICAgY29uc3Qga2V5c1RvRGVsZXRlID0gYWZ0ZXJEaWZmSW5kZXguZmxhdE1hcChrZXlTZXQgPT4gQXJyYXkuZnJvbShrZXlTZXQpKS5maWx0ZXIoa2V5ID0+ICFrZXlzVG9LZWVwLmhhcyhrZXkpKTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzVG9EZWxldGUpIHtcbiAgICAgIHJlc29sdmVkUGFuZUNhY2hlLmRlbGV0ZShrZXkpO1xuICAgIH1cbiAgICBjb25zdCBtZW1vaXplID0gbmV4dEZuID0+ICh1bnJlc29sdmVkUGFuZSwgY29udGV4dCwgZmxhdEluZGV4KSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSB1bnJlc29sdmVkUGFuZSAmJiBcIlwiLmNvbmNhdChhc3NpZ25JZCh1bnJlc29sdmVkUGFuZSksIFwiLVwiKS5jb25jYXQoaGFzaENvbnRleHQoY29udGV4dCkpO1xuICAgICAgY29uc3QgY2FjaGVkUmVzb2x2ZWRQYW5lID0ga2V5ICYmIHJlc29sdmVkUGFuZUNhY2hlLmdldChrZXkpO1xuICAgICAgaWYgKGNhY2hlZFJlc29sdmVkUGFuZSkgcmV0dXJuIGNhY2hlZFJlc29sdmVkUGFuZTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IG5leHRGbih1bnJlc29sdmVkUGFuZSwgY29udGV4dCwgZmxhdEluZGV4KTtcbiAgICAgIGlmICgha2V5KSByZXR1cm4gcmVzdWx0O1xuICAgICAgY29uc3QgY2FjaGVLZXlTZXQgPSBjYWNoZUtleXNCeUZsYXRJbmRleFtmbGF0SW5kZXhdIHx8IC8qIEBfX1BVUkVfXyAqL25ldyBTZXQoKTtcbiAgICAgIGNhY2hlS2V5U2V0LmFkZChrZXkpO1xuICAgICAgY2FjaGVLZXlzQnlGbGF0SW5kZXhbZmxhdEluZGV4XSA9IGNhY2hlS2V5U2V0O1xuICAgICAgcmVzb2x2ZWRQYW5lQ2FjaGUuc2V0KGtleSwgcmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgZmxhdHRlbmVkUm91dGVyUGFuZXMsXG4gICAgICBjYWNoZUtleXNCeUZsYXRJbmRleCxcbiAgICAgIHJlc29sdmVkUGFuZUNhY2hlLFxuICAgICAgcmVzb2x2ZVBhbmU6IGNyZWF0ZVBhbmVSZXNvbHZlcihtZW1vaXplKVxuICAgIH07XG4gIH0sIGluaXRpYWxDYWNoZVN0YXRlKSxcbiAgLy8gcnVuIHRoZSBtZW1vaXplZCwgcmVjdXJzaXZlIHJlc29sdmluZ1xuICBzd2l0Y2hNYXAoX3JlZjcgPT4ge1xuICAgIGxldCB7XG4gICAgICBmbGF0dGVuZWRSb3V0ZXJQYW5lcyxcbiAgICAgIHJlc29sdmVQYW5lXG4gICAgfSA9IF9yZWY3O1xuICAgIHJldHVybiByZXNvbHZlUGFuZVRyZWUoe1xuICAgICAgdW5yZXNvbHZlZFBhbmU6IHJvb3RQYW5lTm9kZSxcbiAgICAgIGZsYXR0ZW5lZFJvdXRlclBhbmVzLFxuICAgICAgcGFyZW50OiBudWxsLFxuICAgICAgcGF0aDogW10sXG4gICAgICByZXNvbHZlUGFuZSxcbiAgICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgICB9KTtcbiAgfSkpO1xuICByZXR1cm4gcmVzb2x2ZWRQYW5lcyQucGlwZShcbiAgLy8gdGhpcyBkaWZmcyB0aGUgcHJldmlvdXMgZW1pc3Npb24gd2l0aCB0aGUgY3VycmVudCBvbmUuIGlmIHRoZXJlIGlzIGEgbmV3XG4gIC8vIGxvYWRpbmcgcGFuZSBhdCB0aGUgc2FtZSBwb3NpdGlvbiB3aGVyZSBhIHByZXZpb3VzIHBhbmUgYWxyZWFkeSBoYWQgYVxuICAvLyByZXNvbHZlZCB2YWx1ZSAobG9va2luZyBhdCB0aGUgSURzIHRvIGNvbXBhcmUpLCB0aGVuIHJldHVybiB0aGUgcHJldmlvdXNcbiAgLy8gcGFuZSBpbnN0ZWFkIG9mIHRoZSBsb2FkaW5nIHBhbmVcbiAgc2NhbigocHJldiwgbmV4dCkgPT4gbmV4dC5tYXAoKG5leHRQYW5lLCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IHByZXZQYW5lID0gcHJldltpbmRleF07XG4gICAgaWYgKCFwcmV2UGFuZSkgcmV0dXJuIG5leHRQYW5lO1xuICAgIGlmIChuZXh0UGFuZS50eXBlICE9PSBcImxvYWRpbmdcIikgcmV0dXJuIG5leHRQYW5lO1xuICAgIGlmIChwcmV2UGFuZS5yb3V0ZXJQYW5lU2libGluZy5pZCA9PT0gbmV4dFBhbmUucm91dGVyUGFuZVNpYmxpbmcuaWQpIHtcbiAgICAgIHJldHVybiBwcmV2UGFuZTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHRQYW5lO1xuICB9KSwgW10pLFxuICAvLyB0aGlzIHByZXZlbnRzIGR1cGxpY2F0ZSBlbWlzc2lvbnNcbiAgZGlzdGluY3RVbnRpbENoYW5nZWQoKHByZXYsIG5leHQpID0+IHtcbiAgICBpZiAocHJldi5sZW5ndGggIT09IG5leHQubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZXh0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBwcmV2VmFsdWUgPSBwcmV2W2ldO1xuICAgICAgY29uc3QgbmV4dFZhbHVlID0gbmV4dFtpXTtcbiAgICAgIGlmIChoYXNoUmVzb2x2ZWRQYW5lTWV0YShwcmV2VmFsdWUpICE9PSBoYXNoUmVzb2x2ZWRQYW5lTWV0YShuZXh0VmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH0pKTtcbn1cbmZ1bmN0aW9uIHVzZVJvdXRlclBhbmVzU3RyZWFtKCkge1xuICBjb25zdCByb3V0ZXJTdGF0ZVN1YmplY3QgPSB1c2VNZW1vKCgpID0+IG5ldyBSZXBsYXlTdWJqZWN0KDEpLCBbXSk7XG4gIGNvbnN0IHJvdXRlclBhbmVzJCA9IHVzZU1lbW8oKCkgPT4gcm91dGVyU3RhdGVTdWJqZWN0LmFzT2JzZXJ2YWJsZSgpLnBpcGUobWFwKF9yb3V0ZXJTdGF0ZSA9PiAoX3JvdXRlclN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBfcm91dGVyU3RhdGUucGFuZXMpIHx8IFtdKSksIFtyb3V0ZXJTdGF0ZVN1YmplY3RdKTtcbiAgY29uc3Qge1xuICAgIHN0YXRlOiByb3V0ZXJTdGF0ZVxuICB9ID0gdXNlUm91dGVyKCk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcm91dGVyU3RhdGVTdWJqZWN0Lm5leHQocm91dGVyU3RhdGUpO1xuICB9LCBbcm91dGVyU3RhdGUsIHJvdXRlclN0YXRlU3ViamVjdF0pO1xuICByZXR1cm4gcm91dGVyUGFuZXMkO1xufVxuZnVuY3Rpb24gdXNlUmVzb2x2ZWRQYW5lcygpIHtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZSgpO1xuICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICBjb25zdCB7XG4gICAgc3RydWN0dXJlQ29udGV4dCxcbiAgICByb290UGFuZU5vZGVcbiAgfSA9IHVzZURlc2tUb29sKCk7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlKHtcbiAgICBwYW5lRGF0YUl0ZW1zOiBbXSxcbiAgICByZXNvbHZlZFBhbmVzOiBbXSxcbiAgICByb3V0ZXJQYW5lczogW11cbiAgfSk7XG4gIGNvbnN0IHJvdXRlclBhbmVzU3RyZWFtID0gdXNlUm91dGVyUGFuZXNTdHJlYW0oKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCByZXNvbHZlZFBhbmVzJCA9IGNyZWF0ZVJlc29sdmVkUGFuZU5vZGVTdHJlYW0oe1xuICAgICAgcm9vdFBhbmVOb2RlLFxuICAgICAgcm91dGVyUGFuZXNTdHJlYW0sXG4gICAgICBzdHJ1Y3R1cmVDb250ZXh0XG4gICAgfSkucGlwZShtYXAocmVzb2x2ZWRQYW5lcyA9PiB7XG4gICAgICBjb25zdCByb3V0ZXJQYW5lcyA9IHJlc29sdmVkUGFuZXMucmVkdWNlKChhY2MsIG5leHQpID0+IHtcbiAgICAgICAgY29uc3QgY3VycmVudEdyb3VwID0gYWNjW25leHQuZ3JvdXBJbmRleF0gfHwgW107XG4gICAgICAgIGN1cnJlbnRHcm91cFtuZXh0LnNpYmxpbmdJbmRleF0gPSBuZXh0LnJvdXRlclBhbmVTaWJsaW5nO1xuICAgICAgICBhY2NbbmV4dC5ncm91cEluZGV4XSA9IGN1cnJlbnRHcm91cDtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIFtdKTtcbiAgICAgIGNvbnN0IGdyb3Vwc0xlbiA9IHJvdXRlclBhbmVzLmxlbmd0aDtcbiAgICAgIGNvbnN0IHBhbmVEYXRhSXRlbXMgPSByZXNvbHZlZFBhbmVzLm1hcChwYW5lID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCB7XG4gICAgICAgICAgZ3JvdXBJbmRleCxcbiAgICAgICAgICBmbGF0SW5kZXgsXG4gICAgICAgICAgc2libGluZ0luZGV4LFxuICAgICAgICAgIHJvdXRlclBhbmVTaWJsaW5nLFxuICAgICAgICAgIHBhdGhcbiAgICAgICAgfSA9IHBhbmU7XG4gICAgICAgIGNvbnN0IGl0ZW1JZCA9IHJvdXRlclBhbmVTaWJsaW5nLmlkO1xuICAgICAgICBjb25zdCBuZXh0R3JvdXAgPSByb3V0ZXJQYW5lc1tncm91cEluZGV4ICsgMV07XG4gICAgICAgIGNvbnN0IHBhbmVEYXRhSXRlbSA9IHtcbiAgICAgICAgICBhY3RpdmU6IGdyb3VwSW5kZXggPT09IGdyb3Vwc0xlbiAtIDIsXG4gICAgICAgICAgY2hpbGRJdGVtSWQ6IChfYSA9IG5leHRHcm91cCA9PSBudWxsID8gdm9pZCAwIDogbmV4dEdyb3VwWzBdLmlkKSAhPSBudWxsID8gX2EgOiBudWxsLFxuICAgICAgICAgIGluZGV4OiBmbGF0SW5kZXgsXG4gICAgICAgICAgaXRlbUlkOiByb3V0ZXJQYW5lU2libGluZy5pZCxcbiAgICAgICAgICBncm91cEluZGV4LFxuICAgICAgICAgIGtleTogXCJcIi5jb25jYXQocGFuZS50eXBlID09PSBcImxvYWRpbmdcIiA/IFwidW5rbm93blwiIDogcGFuZS5wYW5lTm9kZS5pZCwgXCItXCIpLmNvbmNhdChpdGVtSWQsIFwiLVwiKS5jb25jYXQoc2libGluZ0luZGV4KSxcbiAgICAgICAgICBwYW5lOiBwYW5lLnR5cGUgPT09IFwibG9hZGluZ1wiID8gTE9BRElOR19QQU5FIDogcGFuZS5wYW5lTm9kZSxcbiAgICAgICAgICBwYXJhbXM6IHJvdXRlclBhbmVTaWJsaW5nLnBhcmFtcyB8fCB7fSxcbiAgICAgICAgICBwYXRoOiBwYXRoLmpvaW4oXCI7XCIpLFxuICAgICAgICAgIHBheWxvYWQ6IHJvdXRlclBhbmVTaWJsaW5nLnBheWxvYWQsXG4gICAgICAgICAgc2VsZWN0ZWQ6IGZsYXRJbmRleCA9PT0gcmVzb2x2ZWRQYW5lcy5sZW5ndGggLSAxLFxuICAgICAgICAgIHNpYmxpbmdJbmRleFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gcGFuZURhdGFJdGVtO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwYW5lRGF0YUl0ZW1zLFxuICAgICAgICByb3V0ZXJQYW5lcyxcbiAgICAgICAgcmVzb2x2ZWRQYW5lczogcGFuZURhdGFJdGVtcy5tYXAocGFuZSA9PiBwYW5lLnBhbmUpXG4gICAgICB9O1xuICAgIH0pKTtcbiAgICBjb25zdCBzdWJzY3JpcHRpb24gPSByZXNvbHZlZFBhbmVzJC5zdWJzY3JpYmUoe1xuICAgICAgbmV4dDogcmVzdWx0ID0+IHNldERhdGEocmVzdWx0KSxcbiAgICAgIGVycm9yOiBlID0+IHNldEVycm9yKGUpXG4gICAgfSk7XG4gICAgcmV0dXJuICgpID0+IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9LCBbcm9vdFBhbmVOb2RlLCByb3V0ZXJQYW5lc1N0cmVhbSwgc3RydWN0dXJlQ29udGV4dF0pO1xuICByZXR1cm4gZGF0YTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGVuc3VyZURvY3VtZW50SWRBbmRUeXBlKGRvY3VtZW50U3RvcmUsIGlkLCB0eXBlKSB7XG4gIGlmIChpZCAmJiB0eXBlKSByZXR1cm4ge1xuICAgIGlkLFxuICAgIHR5cGVcbiAgfTtcbiAgaWYgKCFpZCAmJiB0eXBlKSByZXR1cm4ge1xuICAgIGlkOiB1dWlkKCksXG4gICAgdHlwZVxuICB9O1xuICBpZiAoaWQgJiYgIXR5cGUpIHtcbiAgICBjb25zdCByZXNvbHZlZFR5cGUgPSBhd2FpdCBmaXJzdFZhbHVlRnJvbShkb2N1bWVudFN0b3JlLnJlc29sdmVUeXBlRm9yRG9jdW1lbnQoaWQpKTtcbiAgICByZXR1cm4ge1xuICAgICAgaWQsXG4gICAgICB0eXBlOiByZXNvbHZlZFR5cGVcbiAgICB9O1xuICB9XG4gIHRocm93IG5ldyBQYW5lUmVzb2x1dGlvbkVycm9yKHtcbiAgICBtZXNzYWdlOiBcIk5laXRoZXIgZG9jdW1lbnQgYGlkYCBvciBgdHlwZWAgd2FzIHByb3ZpZGVkIHdoZW4gdHJ5aW5nIHRvIHJlc29sdmUgaW50ZW50LlwiXG4gIH0pO1xufVxuY29uc3QgRU1QVFlfUkVDT1JEID0ge307XG5jb25zdCBJbnRlbnRSZXNvbHZlciA9IG1lbW8oZnVuY3Rpb24gSW50ZW50UmVzb2x2ZXIyKCkge1xuICBjb25zdCB7XG4gICAgbmF2aWdhdGVcbiAgfSA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBtYXliZUludGVudCA9IHVzZVJvdXRlclN0YXRlKHVzZUNhbGxiYWNrKHJvdXRlclN0YXRlID0+IHtcbiAgICBjb25zdCBpbnRlbnROYW1lID0gdHlwZW9mIHJvdXRlclN0YXRlLmludGVudCA9PT0gXCJzdHJpbmdcIiA/IHJvdXRlclN0YXRlLmludGVudCA6IHZvaWQgMDtcbiAgICByZXR1cm4gaW50ZW50TmFtZSA/IHtcbiAgICAgIGludGVudDogaW50ZW50TmFtZSxcbiAgICAgIHBhcmFtczogaXNSZWNvcmQocm91dGVyU3RhdGUucGFyYW1zKSA/IHJvdXRlclN0YXRlLnBhcmFtcyA6IEVNUFRZX1JFQ09SRCxcbiAgICAgIHBheWxvYWQ6IHJvdXRlclN0YXRlLnBheWxvYWRcbiAgICB9IDogdm9pZCAwO1xuICB9LCBbXSkpO1xuICBjb25zdCB7XG4gICAgcm9vdFBhbmVOb2RlLFxuICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgfSA9IHVzZURlc2tUb29sKCk7XG4gIGNvbnN0IGRvY3VtZW50U3RvcmUgPSB1c2VEb2N1bWVudFN0b3JlKCk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGUobnVsbCk7XG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1heWJlSW50ZW50KSB7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGludGVudCxcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICBwYXlsb2FkXG4gICAgICB9ID0gbWF5YmVJbnRlbnQ7XG4gICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICBhc3luYyBmdW5jdGlvbiBlZmZlY3QoKSB7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICBpZCxcbiAgICAgICAgICB0eXBlXG4gICAgICAgIH0gPSBhd2FpdCBlbnN1cmVEb2N1bWVudElkQW5kVHlwZShkb2N1bWVudFN0b3JlLCB0eXBlb2YgcGFyYW1zLmlkID09PSBcInN0cmluZ1wiID8gcGFyYW1zLmlkIDogdm9pZCAwLCB0eXBlb2YgcGFyYW1zLnR5cGUgPT09IFwic3RyaW5nXCIgPyBwYXJhbXMudHlwZSA6IHZvaWQgMCk7XG4gICAgICAgIGlmIChjYW5jZWxsZWQpIHJldHVybjtcbiAgICAgICAgY29uc3QgcGFuZXMgPSBhd2FpdCByZXNvbHZlSW50ZW50KHtcbiAgICAgICAgICBpbnRlbnQsXG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAuLi5wYXJhbXMsXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIHR5cGVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHBheWxvYWQsXG4gICAgICAgICAgcm9vdFBhbmVOb2RlLFxuICAgICAgICAgIHN0cnVjdHVyZUNvbnRleHRcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChjYW5jZWxsZWQpIHJldHVybjtcbiAgICAgICAgbmF2aWdhdGUoe1xuICAgICAgICAgIHBhbmVzXG4gICAgICAgIH0sIHtcbiAgICAgICAgICByZXBsYWNlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgZWZmZWN0KCkuY2F0Y2goc2V0RXJyb3IpO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgIH07XG4gICAgfVxuICB9LCBbZG9jdW1lbnRTdG9yZSwgbWF5YmVJbnRlbnQsIG5hdmlnYXRlLCByb290UGFuZU5vZGUsIHN0cnVjdHVyZUNvbnRleHRdKTtcbiAgcmV0dXJuIG51bGw7XG59KTtcbnZhciBfX2ZyZWV6ZSQxID0gT2JqZWN0LmZyZWV6ZTtcbnZhciBfX2RlZlByb3AkMSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX3RlbXBsYXRlJDEgPSAoY29va2VkLCByYXcpID0+IF9fZnJlZXplJDEoX19kZWZQcm9wJDEoY29va2VkLCBcInJhd1wiLCB7XG4gIHZhbHVlOiBfX2ZyZWV6ZSQxKHJhdyB8fCBjb29rZWQuc2xpY2UoKSlcbn0pKTtcbnZhciBfYSQxO1xuY29uc3QgUGF0aFNlZ21lbnQgPSBzdHlsZWQuc3BhbihfYSQxIHx8IChfYSQxID0gX190ZW1wbGF0ZSQxKFtcIlxcbiAgJjpub3QoOmxhc3QtY2hpbGQpOjphZnRlciB7XFxuICAgIGNvbnRlbnQ6ICcgXFx1Mjc5RCAnO1xcbiAgICBvcGFjaXR5OiAwLjU7XFxuICB9XFxuXCJdKSkpO1xuZnVuY3Rpb24gZm9ybWF0U3RhY2soc3RhY2spIHtcbiAgcmV0dXJuIHN0YWNrLnJlcGxhY2UoL1xcKFxcLlxcLlxcLlxcKVxcLi9nLCBcIiguLi4pXFxuICAuXCIpLnJlcGxhY2UoL19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfXFxkK18rL2csIFwiXCIpLnJlcGxhY2UoL19fX2RlZmF1bHRcXC4vZywgXCIuXCIpLnJlcGxhY2UobmV3IFJlZ0V4cChcIiBcXFxcKGh0dHBzPzpcXFxcL1xcXFwvXCIuY29uY2F0KHdpbmRvdy5sb2NhdGlvbi5ob3N0KSwgXCJnXCIpLCBcIiAoXCIpO1xufVxuZnVuY3Rpb24gU3RydWN0dXJlRXJyb3IoX3JlZjgpIHtcbiAgbGV0IHtcbiAgICBlcnJvclxuICB9ID0gX3JlZjg7XG4gIGlmICghKGVycm9yIGluc3RhbmNlb2YgUGFuZVJlc29sdXRpb25FcnJvcikpIHtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxuICBjb25zdCB7XG4gICAgY2F1c2VcbiAgfSA9IGVycm9yO1xuICBjb25zdCBzdGFjayA9IChjYXVzZSA9PSBudWxsID8gdm9pZCAwIDogY2F1c2Uuc3RhY2spIHx8IGVycm9yLnN0YWNrO1xuICBjb25zdCBzaG93U3RhY2sgPSBzdGFjayAmJiAhKGNhdXNlIGluc3RhbmNlb2YgU2VyaWFsaXplRXJyb3IpICYmICFlcnJvci5tZXNzYWdlLmluY2x1ZGVzKFwiTW9kdWxlIGJ1aWxkIGZhaWxlZDpcIik7XG4gIGNvbnN0IHBhdGggPSBjYXVzZSBpbnN0YW5jZW9mIFNlcmlhbGl6ZUVycm9yID8gY2F1c2UucGF0aCA6IFtdO1xuICBjb25zdCBoZWxwSWQgPSBjYXVzZSBpbnN0YW5jZW9mIFNlcmlhbGl6ZUVycm9yICYmIGNhdXNlLmhlbHBJZCB8fCBlcnJvci5oZWxwSWQ7XG4gIGNvbnN0IGhhbmRsZVJlbG9hZCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqL2pzeChDYXJkLCB7XG4gICAgaGVpZ2h0OiBcImZpbGxcIixcbiAgICBvdmVyZmxvdzogXCJhdXRvXCIsXG4gICAgcGFkZGluZzogNCxcbiAgICBzaXppbmc6IFwiYm9yZGVyXCIsXG4gICAgdG9uZTogXCJjcml0aWNhbFwiLFxuICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3hzKENvbnRhaW5lciwge1xuICAgICAgY2hpbGRyZW46IFsvKiBAX19QVVJFX18gKi9qc3goSGVhZGluZywge1xuICAgICAgICBhczogXCJoMlwiLFxuICAgICAgICBjaGlsZHJlbjogXCJFbmNvdW50ZXJlZCBhbiBlcnJvciB3aGlsZSByZWFkaW5nIHN0cnVjdHVyZVwiXG4gICAgICB9KSwgLyogQF9fUFVSRV9fICovanN4cyhDYXJkLCB7XG4gICAgICAgIG1hcmdpblRvcDogNCxcbiAgICAgICAgcGFkZGluZzogNCxcbiAgICAgICAgcmFkaXVzOiAyLFxuICAgICAgICBvdmVyZmxvdzogXCJhdXRvXCIsXG4gICAgICAgIHNoYWRvdzogMSxcbiAgICAgICAgdG9uZTogXCJpbmhlcml0XCIsXG4gICAgICAgIGNoaWxkcmVuOiBbcGF0aC5sZW5ndGggPiAwICYmIC8qIEBfX1BVUkVfXyAqL2pzeHMoU3RhY2ssIHtcbiAgICAgICAgICBzcGFjZTogMixcbiAgICAgICAgICBjaGlsZHJlbjogWy8qIEBfX1BVUkVfXyAqL2pzeChMYWJlbCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiU3RydWN0dXJlIHBhdGhcIlxuICAgICAgICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3goQ29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IHBhdGguc2xpY2UoMSkubWFwKChzZWdtZW50LCBpKSA9PlxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L25vLWFycmF5LWluZGV4LWtleVxuICAgICAgICAgICAgLyogQF9fUFVSRV9fICovXG4gICAgICAgICAgICBqc3goUGF0aFNlZ21lbnQsIHtcbiAgICAgICAgICAgICAgY2hpbGRyZW46IHNlZ21lbnRcbiAgICAgICAgICAgIH0sIFwiXCIuY29uY2F0KHNlZ21lbnQsIFwiLVwiKS5jb25jYXQoaSkpKVxuICAgICAgICAgIH0pXVxuICAgICAgICB9KSwgLyogQF9fUFVSRV9fICovanN4cyhTdGFjaywge1xuICAgICAgICAgIG1hcmdpblRvcDogNCxcbiAgICAgICAgICBzcGFjZTogMixcbiAgICAgICAgICBjaGlsZHJlbjogWy8qIEBfX1BVUkVfXyAqL2pzeChMYWJlbCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFwiRXJyb3JcIlxuICAgICAgICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3goQ29kZSwge1xuICAgICAgICAgICAgY2hpbGRyZW46IHNob3dTdGFjayA/IGZvcm1hdFN0YWNrKHN0YWNrKSA6IGVycm9yLm1lc3NhZ2VcbiAgICAgICAgICB9KV1cbiAgICAgICAgfSksIGhlbHBJZCAmJiAvKiBAX19QVVJFX18gKi9qc3goQm94LCB7XG4gICAgICAgICAgbWFyZ2luVG9wOiA0LFxuICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goVGV4dCwge1xuICAgICAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqL2pzeChcImFcIiwge1xuICAgICAgICAgICAgICBocmVmOiBnZW5lcmF0ZUhlbHBVcmwoaGVscElkKSxcbiAgICAgICAgICAgICAgcmVsOiBcIm5vb3BlbmVyIG5vcmVmZXJyZXJcIixcbiAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogXCJWaWV3IGRvY3VtZW50YXRpb25cIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICB9KSwgLyogQF9fUFVSRV9fICovanN4KEJveCwge1xuICAgICAgICAgIG1hcmdpblRvcDogNCxcbiAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovanN4KEJ1dHRvbiwge1xuICAgICAgICAgICAgdGV4dDogXCJSZWxvYWRcIixcbiAgICAgICAgICAgIGljb246IFN5bmNJY29uLFxuICAgICAgICAgICAgdG9uZTogXCJwcmltYXJ5XCIsXG4gICAgICAgICAgICBvbkNsaWNrOiBoYW5kbGVSZWxvYWRcbiAgICAgICAgICB9KVxuICAgICAgICB9KV1cbiAgICAgIH0pXVxuICAgIH0pXG4gIH0pO1xufVxuZnVuY3Rpb24gVW5rbm93blBhbmUocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGlzU2VsZWN0ZWQsXG4gICAgcGFuZSxcbiAgICBwYW5lS2V5XG4gIH0gPSBwcm9wcztcbiAgY29uc3QgdHlwZSA9IGlzUmVjb3JkKHBhbmUpICYmIHBhbmUudHlwZSB8fCBudWxsO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4cyhQYW5lLCB7XG4gICAgaWQ6IHBhbmVLZXksXG4gICAgc2VsZWN0ZWQ6IGlzU2VsZWN0ZWQsXG4gICAgY2hpbGRyZW46IFsvKiBAX19QVVJFX18gKi9qc3goUGFuZUhlYWRlciwge1xuICAgICAgdGl0bGU6IFwiVW5rbm93biBwYW5lIHR5cGVcIlxuICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3goUGFuZUNvbnRlbnQsIHtcbiAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goQm94LCB7XG4gICAgICAgIHBhZGRpbmc6IDQsXG4gICAgICAgIGNoaWxkcmVuOiB0eXBlb2YgdHlwZSA9PT0gXCJzdHJpbmdcIiA/IC8qIEBfX1BVUkVfXyAqL2pzeHMoVGV4dCwge1xuICAgICAgICAgIGFzOiBcInBcIixcbiAgICAgICAgICBtdXRlZDogdHJ1ZSxcbiAgICAgICAgICBjaGlsZHJlbjogW1wiU3RydWN0dXJlIGl0ZW0gb2YgdHlwZSBcIiwgLyogQF9fUFVSRV9fICovanN4KFwiY29kZVwiLCB7XG4gICAgICAgICAgICBjaGlsZHJlbjogdHlwZVxuICAgICAgICAgIH0pLCBcIiBpcyBub3QgYSBrbm93biBlbnRpdHkuXCJdXG4gICAgICAgIH0pIDogLyogQF9fUFVSRV9fICovanN4cyhUZXh0LCB7XG4gICAgICAgICAgYXM6IFwicFwiLFxuICAgICAgICAgIG11dGVkOiB0cnVlLFxuICAgICAgICAgIGNoaWxkcmVuOiBbXCJTdHJ1Y3R1cmUgaXRlbSBpcyBtaXNzaW5nIHJlcXVpcmVkIFwiLCAvKiBAX19QVVJFX18gKi9qc3goXCJjb2RlXCIsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBcInR5cGVcIlxuICAgICAgICAgIH0pLCBcIiBwcm9wZXJ0eS5cIl1cbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfSldXG4gIH0pO1xufVxuY29uc3QgcGFuZU1hcCA9IHtcbiAgY29tcG9uZW50OiBsYXp5KCgpID0+IGltcG9ydCgnLi9pbmRleC1sSHRLODBmTy5qcycpKSxcbiAgZG9jdW1lbnQ6IGxhenkoKCkgPT4gaW1wb3J0KCcuL3BhbmUtQnpZb0xBb2suanMnKSksXG4gIGRvY3VtZW50TGlzdDogbGF6eSgoKSA9PiBpbXBvcnQoJy4vcGFuZS13UV80MUhsSi5qcycpKSxcbiAgbGlzdDogbGF6eSgoKSA9PiBpbXBvcnQoJy4vaW5kZXgtdnB0WHo3YWwuanMnKSlcbn07XG5jb25zdCBEZXNrVG9vbFBhbmUgPSBtZW1vKGZ1bmN0aW9uIERlc2tUb29sUGFuZTIocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGFjdGl2ZSxcbiAgICBjaGlsZEl0ZW1JZCxcbiAgICBncm91cEluZGV4LFxuICAgIGluZGV4LFxuICAgIGl0ZW1JZCxcbiAgICBwYW5lLFxuICAgIHBhbmVLZXksXG4gICAgcGFyYW1zLFxuICAgIHBheWxvYWQsXG4gICAgcGF0aCxcbiAgICBzZWxlY3RlZCxcbiAgICBzaWJsaW5nSW5kZXhcbiAgfSA9IHByb3BzO1xuICBjb25zdCBQYW5lQ29tcG9uZW50ID0gcGFuZU1hcFtwYW5lLnR5cGVdIHx8IFVua25vd25QYW5lO1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4KFBhbmVSb3V0ZXJQcm92aWRlciwge1xuICAgIGZsYXRJbmRleDogaW5kZXgsXG4gICAgaW5kZXg6IGdyb3VwSW5kZXgsXG4gICAgcGFyYW1zLFxuICAgIHBheWxvYWQsXG4gICAgc2libGluZ0luZGV4LFxuICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goU3VzcGVuc2UsIHtcbiAgICAgIGZhbGxiYWNrOiAvKiBAX19QVVJFX18gKi9qc3goTG9hZGluZ1BhbmUsIHtcbiAgICAgICAgcGFuZUtleSxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgc2VsZWN0ZWRcbiAgICAgIH0pLFxuICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqL2pzeChQYW5lQ29tcG9uZW50LCB7XG4gICAgICAgIGNoaWxkSXRlbUlkOiBjaGlsZEl0ZW1JZCB8fCBcIlwiLFxuICAgICAgICBpbmRleCxcbiAgICAgICAgaXRlbUlkLFxuICAgICAgICBpc0FjdGl2ZTogYWN0aXZlLFxuICAgICAgICBpc1NlbGVjdGVkOiBzZWxlY3RlZCxcbiAgICAgICAgcGFuZUtleSxcbiAgICAgICAgcGFuZVxuICAgICAgfSlcbiAgICB9KVxuICB9KTtcbn0sIChfcmVmOSwgX3JlZjEwKSA9PiB7XG4gIGxldCB7XG4gICAgcGFyYW1zOiBwcmV2UGFyYW1zID0ge30sXG4gICAgcGF5bG9hZDogcHJldlBheWxvYWQgPSBudWxsLFxuICAgIC4uLnByZXZcbiAgfSA9IF9yZWY5O1xuICBsZXQge1xuICAgIHBhcmFtczogbmV4dFBhcmFtcyA9IHt9LFxuICAgIHBheWxvYWQ6IG5leHRQYXlsb2FkID0gbnVsbCxcbiAgICAuLi5uZXh0XG4gIH0gPSBfcmVmMTA7XG4gIGlmICghaXNFcXVhbChwcmV2UGFyYW1zLCBuZXh0UGFyYW1zKSkgcmV0dXJuIGZhbHNlO1xuICBpZiAoIWlzRXF1YWwocHJldlBheWxvYWQsIG5leHRQYXlsb2FkKSkgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBrZXlzID0gLyogQF9fUFVSRV9fICovbmV3IFNldChbLi4uT2JqZWN0LmtleXMocHJldiksIC4uLk9iamVjdC5rZXlzKG5leHQpXSk7XG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICBpZiAocHJldltrZXldICE9PSBuZXh0W2tleV0pIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn0pO1xuZnVuY3Rpb24gTm9Eb2N1bWVudFR5cGVzU2NyZWVuKCkge1xuICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4KENhcmQsIHtcbiAgICBoZWlnaHQ6IFwiZmlsbFwiLFxuICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goRmxleCwge1xuICAgICAgYWxpZ246IFwiY2VudGVyXCIsXG4gICAgICBoZWlnaHQ6IFwiZmlsbFwiLFxuICAgICAganVzdGlmeTogXCJjZW50ZXJcIixcbiAgICAgIHBhZGRpbmc6IDQsXG4gICAgICBzaXppbmc6IFwiYm9yZGVyXCIsXG4gICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovanN4KENvbnRhaW5lciwge1xuICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqL2pzeChDYXJkLCB7XG4gICAgICAgICAgcGFkZGluZzogNCxcbiAgICAgICAgICByYWRpdXM6IDIsXG4gICAgICAgICAgc2hhZG93OiAxLFxuICAgICAgICAgIHRvbmU6IFwiY2F1dGlvblwiLFxuICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3hzKEZsZXgsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbLyogQF9fUFVSRV9fICovanN4KEJveCwge1xuICAgICAgICAgICAgICBjaGlsZHJlbjogLyogQF9fUFVSRV9fICovanN4KFRleHQsIHtcbiAgICAgICAgICAgICAgICBzaXplOiAxLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goV2FybmluZ091dGxpbmVJY29uLCB7fSlcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3hzKFN0YWNrLCB7XG4gICAgICAgICAgICAgIGZsZXg6IDEsXG4gICAgICAgICAgICAgIG1hcmdpbkxlZnQ6IDMsXG4gICAgICAgICAgICAgIHNwYWNlOiAzLFxuICAgICAgICAgICAgICBjaGlsZHJlbjogWy8qIEBfX1BVUkVfXyAqL2pzeChUZXh0LCB7XG4gICAgICAgICAgICAgICAgYXM6IFwiaDFcIixcbiAgICAgICAgICAgICAgICBzaXplOiAxLFxuICAgICAgICAgICAgICAgIHdlaWdodDogXCJib2xkXCIsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFwiTm8gZG9jdW1lbnQgdHlwZXNcIlxuICAgICAgICAgICAgICB9KSwgLyogQF9fUFVSRV9fICovanN4KFRleHQsIHtcbiAgICAgICAgICAgICAgICBhczogXCJwXCIsXG4gICAgICAgICAgICAgICAgbXV0ZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbjogXCJQbGVhc2UgZGVmaW5lIGF0IGxlYXN0IG9uZSBkb2N1bWVudCB0eXBlIGluIHlvdXIgc2NoZW1hLlwiXG4gICAgICAgICAgICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3goVGV4dCwge1xuICAgICAgICAgICAgICAgIGFzOiBcInBcIixcbiAgICAgICAgICAgICAgICBtdXRlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzaXplOiAxLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goXCJhXCIsIHtcbiAgICAgICAgICAgICAgICAgIGhyZWY6IFwiaHR0cHM6Ly93d3cuc2FuaXR5LmlvL2RvY3MvY3JlYXRlLWEtc2NoZW1hLWFuZC1jb25maWd1cmUtc2FuaXR5LXN0dWRpb1wiLFxuICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBcIl9ibGFua1wiLFxuICAgICAgICAgICAgICAgICAgcmVsOiBcIm5vcmVmZXJyZXJcIixcbiAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBcIkxlYXJuIGhvdyB0byBhZGQgYSBkb2N1bWVudCB0eXBlIFxcdTIxOTJcIlxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH0pXVxuICAgICAgICAgICAgfSldXG4gICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfSlcbiAgfSk7XG59XG5jb25zdCBEb2N1bWVudFRpdGxlID0gcHJvcHMgPT4ge1xuICBjb25zdCB7XG4gICAgZG9jdW1lbnRJZCxcbiAgICBkb2N1bWVudFR5cGVcbiAgfSA9IHByb3BzO1xuICBjb25zdCBlZGl0U3RhdGUgPSB1c2VFZGl0U3RhdGUoZG9jdW1lbnRJZCwgZG9jdW1lbnRUeXBlKTtcbiAgY29uc3Qgc2NoZW1hID0gdXNlU2NoZW1hKCk7XG4gIGNvbnN0IGlzTmV3RG9jdW1lbnQgPSAhKGVkaXRTdGF0ZSA9PSBudWxsID8gdm9pZCAwIDogZWRpdFN0YXRlLnB1Ymxpc2hlZCkgJiYgIShlZGl0U3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IGVkaXRTdGF0ZS5kcmFmdCk7XG4gIGNvbnN0IGRvY3VtZW50VmFsdWUgPSAoZWRpdFN0YXRlID09IG51bGwgPyB2b2lkIDAgOiBlZGl0U3RhdGUuZHJhZnQpIHx8IChlZGl0U3RhdGUgPT0gbnVsbCA/IHZvaWQgMCA6IGVkaXRTdGF0ZS5wdWJsaXNoZWQpO1xuICBjb25zdCBzY2hlbWFUeXBlID0gc2NoZW1hLmdldChkb2N1bWVudFR5cGUpO1xuICBjb25zdCB7XG4gICAgdmFsdWUsXG4gICAgaXNMb2FkaW5nOiBwcmV2aWV3VmFsdWVJc0xvYWRpbmdcbiAgfSA9IHVuc3RhYmxlX3VzZVZhbHVlUHJldmlldyh7XG4gICAgZW5hYmxlZDogdHJ1ZSxcbiAgICBzY2hlbWFUeXBlLFxuICAgIHZhbHVlOiBkb2N1bWVudFZhbHVlXG4gIH0pO1xuICBjb25zdCBkb2N1bWVudFRpdGxlID0gaXNOZXdEb2N1bWVudCA/IFwiTmV3IFwiLmNvbmNhdCgoc2NoZW1hVHlwZSA9PSBudWxsID8gdm9pZCAwIDogc2NoZW1hVHlwZS50aXRsZSkgfHwgKHNjaGVtYVR5cGUgPT0gbnVsbCA/IHZvaWQgMCA6IHNjaGVtYVR5cGUubmFtZSkpIDogKHZhbHVlID09IG51bGwgPyB2b2lkIDAgOiB2YWx1ZS50aXRsZSkgfHwgXCJVbnRpdGxlZFwiO1xuICBjb25zdCBzZXR0bGVkID0gZWRpdFN0YXRlLnJlYWR5ICYmICFwcmV2aWV3VmFsdWVJc0xvYWRpbmc7XG4gIGNvbnN0IG5ld1RpdGxlID0gdXNlQ29uc3RydWN0RG9jdW1lbnRUaXRsZShkb2N1bWVudFRpdGxlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIXNldHRsZWQpIHJldHVybjtcbiAgICBkb2N1bWVudC50aXRsZSA9IG5ld1RpdGxlO1xuICB9LCBbZG9jdW1lbnRUaXRsZSwgc2V0dGxlZCwgbmV3VGl0bGVdKTtcbiAgcmV0dXJuIG51bGw7XG59O1xuY29uc3QgUGFzc3Rocm91Z2hUaXRsZSA9IHByb3BzID0+IHtcbiAgY29uc3Qge1xuICAgIHRpdGxlXG4gIH0gPSBwcm9wcztcbiAgY29uc3QgbmV3VGl0bGUgPSB1c2VDb25zdHJ1Y3REb2N1bWVudFRpdGxlKHRpdGxlKTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBkb2N1bWVudC50aXRsZSA9IG5ld1RpdGxlO1xuICB9LCBbbmV3VGl0bGUsIHRpdGxlXSk7XG4gIHJldHVybiBudWxsO1xufTtcbmNvbnN0IERlc2tUaXRsZSA9IHByb3BzID0+IHtcbiAgY29uc3Qge1xuICAgIHJlc29sdmVkUGFuZXNcbiAgfSA9IHByb3BzO1xuICBpZiAoIShyZXNvbHZlZFBhbmVzID09IG51bGwgPyB2b2lkIDAgOiByZXNvbHZlZFBhbmVzLmxlbmd0aCkpIHJldHVybiBudWxsO1xuICBjb25zdCBsYXN0UGFuZSA9IHJlc29sdmVkUGFuZXNbcmVzb2x2ZWRQYW5lcy5sZW5ndGggLSAxXTtcbiAgaWYgKGlzTG9hZGluZ1BhbmUobGFzdFBhbmUpKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqL2pzeChQYXNzdGhyb3VnaFRpdGxlLCB7fSk7XG4gIH1cbiAgaWYgKGlzRG9jdW1lbnRQYW5lKGxhc3RQYW5lKSkge1xuICAgIGlmIChsYXN0UGFuZSA9PSBudWxsID8gdm9pZCAwIDogbGFzdFBhbmUudGl0bGUpIHtcbiAgICAgIHJldHVybiAvKiBAX19QVVJFX18gKi9qc3goUGFzc3Rocm91Z2hUaXRsZSwge1xuICAgICAgICB0aXRsZTogbGFzdFBhbmUudGl0bGVcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4KERvY3VtZW50VGl0bGUsIHtcbiAgICAgIGRvY3VtZW50SWQ6IGxhc3RQYW5lLm9wdGlvbnMuaWQsXG4gICAgICBkb2N1bWVudFR5cGU6IGxhc3RQYW5lLm9wdGlvbnMudHlwZVxuICAgIH0pO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi9qc3goUGFzc3Rocm91Z2hUaXRsZSwge1xuICAgIHRpdGxlOiBsYXN0UGFuZSA9PSBudWxsID8gdm9pZCAwIDogbGFzdFBhbmUudGl0bGVcbiAgfSk7XG59O1xuZnVuY3Rpb24gdXNlQ29uc3RydWN0RG9jdW1lbnRUaXRsZShhY3RpdmVUaXRsZSkge1xuICBjb25zdCBkZXNrVG9vbEJhc2VUaXRsZSA9IHVzZURlc2tUb29sKCkuc3RydWN0dXJlQ29udGV4dC50aXRsZTtcbiAgcmV0dXJuIFthY3RpdmVUaXRsZSwgZGVza1Rvb2xCYXNlVGl0bGVdLmZpbHRlcih0aXRsZSA9PiB0aXRsZSkuam9pbihcIiB8IFwiKTtcbn1cbmZ1bmN0aW9uIGlzRG9jdW1lbnRQYW5lKHBhbmUpIHtcbiAgcmV0dXJuIHBhbmUgIT09IExPQURJTkdfUEFORSAmJiBwYW5lLnR5cGUgPT09IFwiZG9jdW1lbnRcIjtcbn1cbmZ1bmN0aW9uIGlzTG9hZGluZ1BhbmUocGFuZSkge1xuICByZXR1cm4gcGFuZSA9PT0gTE9BRElOR19QQU5FO1xufVxudmFyIF9fZnJlZXplID0gT2JqZWN0LmZyZWV6ZTtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX190ZW1wbGF0ZSA9IChjb29rZWQsIHJhdykgPT4gX19mcmVlemUoX19kZWZQcm9wKGNvb2tlZCwgXCJyYXdcIiwge1xuICB2YWx1ZTogX19mcmVlemUocmF3IHx8IGNvb2tlZC5zbGljZSgpKVxufSkpO1xudmFyIF9hO1xuY29uc3QgU3R5bGVkUGFuZUxheW91dCA9IHN0eWxlZChQYW5lTGF5b3V0KShfYSB8fCAoX2EgPSBfX3RlbXBsYXRlKFtcIlxcbiAgbWluLWhlaWdodDogMTAwJTtcXG4gIG1pbi13aWR0aDogMzIwcHg7XFxuXCJdKSkpO1xuY29uc3QgaXNTYXZlSG90a2V5ID0gaXNIb3RrZXkoXCJtb2Qrc1wiKTtcbmNvbnN0IERlc2tUb29sID0gbWVtbyhmdW5jdGlvbiBEZXNrVG9vbDIoX3JlZjExKSB7XG4gIGxldCB7XG4gICAgb25QYW5lQ2hhbmdlXG4gIH0gPSBfcmVmMTE7XG4gIHZhciBfYTI7XG4gIGNvbnN0IHtcbiAgICBwdXNoOiBwdXNoVG9hc3RcbiAgfSA9IHVzZVRvYXN0KCk7XG4gIGNvbnN0IHNjaGVtYSA9IHVzZVNjaGVtYSgpO1xuICBjb25zdCB7XG4gICAgbGF5b3V0Q29sbGFwc2VkLFxuICAgIHNldExheW91dENvbGxhcHNlZFxuICB9ID0gdXNlRGVza1Rvb2woKTtcbiAgY29uc3Qge1xuICAgIHBhbmVEYXRhSXRlbXMsXG4gICAgcmVzb2x2ZWRQYW5lc1xuICB9ID0gdXNlUmVzb2x2ZWRQYW5lcygpO1xuICBjb25zdCBpc1Jlc29sdmluZ0ludGVudCA9IHVzZVJvdXRlclN0YXRlKHVzZUNhbGxiYWNrKHJvdXRlclN0YXRlID0+IHR5cGVvZiByb3V0ZXJTdGF0ZS5pbnRlbnQgPT09IFwic3RyaW5nXCIsIFtdKSk7XG4gIGNvbnN0IHtcbiAgICBzYW5pdHk6IHtcbiAgICAgIG1lZGlhXG4gICAgfVxuICB9ID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgW3BvcnRhbEVsZW1lbnQsIHNldFBvcnRhbEVsZW1lbnRdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IGhhbmRsZVJvb3RDb2xsYXBzZSA9IHVzZUNhbGxiYWNrKCgpID0+IHNldExheW91dENvbGxhcHNlZCh0cnVlKSwgW3NldExheW91dENvbGxhcHNlZF0pO1xuICBjb25zdCBoYW5kbGVSb290RXhwYW5kID0gdXNlQ2FsbGJhY2soKCkgPT4gc2V0TGF5b3V0Q29sbGFwc2VkKGZhbHNlKSwgW3NldExheW91dENvbGxhcHNlZF0pO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChyZXNvbHZlZFBhbmVzLmxlbmd0aCkge1xuICAgICAgb25QYW5lQ2hhbmdlKHJlc29sdmVkUGFuZXMpO1xuICAgIH1cbiAgfSwgW29uUGFuZUNoYW5nZSwgcmVzb2x2ZWRQYW5lc10pO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZUdsb2JhbEtleURvd24gPSBldmVudCA9PiB7XG4gICAgICBpZiAoaXNTYXZlSG90a2V5KGV2ZW50KSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBwdXNoVG9hc3Qoe1xuICAgICAgICAgIGNsb3NhYmxlOiB0cnVlLFxuICAgICAgICAgIGlkOiBcImF1dG8tc2F2ZS1tZXNzYWdlXCIsXG4gICAgICAgICAgc3RhdHVzOiBcImluZm9cIixcbiAgICAgICAgICB0aXRsZTogXCJZb3VyIHdvcmsgaXMgYXV0b21hdGljYWxseSBzYXZlZCFcIixcbiAgICAgICAgICBkdXJhdGlvbjogNGUzXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUdsb2JhbEtleURvd24pO1xuICAgIHJldHVybiAoKSA9PiB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlR2xvYmFsS2V5RG93bik7XG4gIH0sIFtwdXNoVG9hc3RdKTtcbiAgY29uc3QgaGFzRGVmaW5lZERvY3VtZW50VHlwZXMgPSAoX2EyID0gc2NoZW1hLl9vcmlnaW5hbCkgPT0gbnVsbCA/IHZvaWQgMCA6IF9hMi50eXBlcy5zb21lKF9pc0N1c3RvbURvY3VtZW50VHlwZURlZmluaXRpb24pO1xuICBpZiAoIWhhc0RlZmluZWREb2N1bWVudFR5cGVzKSB7XG4gICAgcmV0dXJuIC8qIEBfX1BVUkVfXyAqL2pzeChOb0RvY3VtZW50VHlwZXNTY3JlZW4sIHt9KTtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4cyhQb3J0YWxQcm92aWRlciwge1xuICAgIGVsZW1lbnQ6IHBvcnRhbEVsZW1lbnQgfHwgbnVsbCxcbiAgICBjaGlsZHJlbjogWy8qIEBfX1BVUkVfXyAqL2pzeHMoU3R5bGVkUGFuZUxheW91dCwge1xuICAgICAgZmxleDogMSxcbiAgICAgIGhlaWdodDogbGF5b3V0Q29sbGFwc2VkID8gdm9pZCAwIDogXCJmaWxsXCIsXG4gICAgICBtaW5XaWR0aDogbWVkaWFbMV0sXG4gICAgICBvbkNvbGxhcHNlOiBoYW5kbGVSb290Q29sbGFwc2UsXG4gICAgICBvbkV4cGFuZDogaGFuZGxlUm9vdEV4cGFuZCxcbiAgICAgIGNoaWxkcmVuOiBbcGFuZURhdGFJdGVtcy5tYXAoX3JlZjEyID0+IHtcbiAgICAgICAgbGV0IHtcbiAgICAgICAgICBhY3RpdmUsXG4gICAgICAgICAgY2hpbGRJdGVtSWQsXG4gICAgICAgICAgZ3JvdXBJbmRleCxcbiAgICAgICAgICBpdGVtSWQsXG4gICAgICAgICAga2V5OiBwYW5lS2V5LFxuICAgICAgICAgIHBhbmUsXG4gICAgICAgICAgaW5kZXg6IHBhbmVJbmRleCxcbiAgICAgICAgICBwYXJhbXM6IHBhbmVQYXJhbXMsXG4gICAgICAgICAgcGF0aCxcbiAgICAgICAgICBwYXlsb2FkLFxuICAgICAgICAgIHNpYmxpbmdJbmRleCxcbiAgICAgICAgICBzZWxlY3RlZFxuICAgICAgICB9ID0gX3JlZjEyO1xuICAgICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovanN4KEZyYWdtZW50LCB7XG4gICAgICAgICAgY2hpbGRyZW46IHBhbmUgPT09IExPQURJTkdfUEFORSA/IC8qIEBfX1BVUkVfXyAqL2pzeChMb2FkaW5nUGFuZSwge1xuICAgICAgICAgICAgcGFuZUtleSxcbiAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICBzZWxlY3RlZFxuICAgICAgICAgIH0pIDogLyogQF9fUFVSRV9fICovanN4KERlc2tUb29sUGFuZSwge1xuICAgICAgICAgICAgYWN0aXZlLFxuICAgICAgICAgICAgZ3JvdXBJbmRleCxcbiAgICAgICAgICAgIGluZGV4OiBwYW5lSW5kZXgsXG4gICAgICAgICAgICBwYW5lLFxuICAgICAgICAgICAgY2hpbGRJdGVtSWQsXG4gICAgICAgICAgICBpdGVtSWQsXG4gICAgICAgICAgICBwYW5lS2V5LFxuICAgICAgICAgICAgcGFyYW1zOiBwYW5lUGFyYW1zLFxuICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgICBzZWxlY3RlZCxcbiAgICAgICAgICAgIHNpYmxpbmdJbmRleFxuICAgICAgICAgIH0pXG4gICAgICAgIH0sIFwiXCIuY29uY2F0KHBhbmUgPT09IExPQURJTkdfUEFORSA/IFwibG9hZGluZ1wiIDogcGFuZS50eXBlLCBcIi1cIikuY29uY2F0KHBhbmVJbmRleCkpO1xuICAgICAgfSksIHBhbmVEYXRhSXRlbXMubGVuZ3RoIDw9IDEgJiYgaXNSZXNvbHZpbmdJbnRlbnQgJiYgLyogQF9fUFVSRV9fICovanN4KExvYWRpbmdQYW5lLCB7XG4gICAgICAgIHBhbmVLZXk6IFwiaW50ZW50LXJlc29sdmVyXCJcbiAgICAgIH0pXVxuICAgIH0pLCAvKiBAX19QVVJFX18gKi9qc3goRGVza1RpdGxlLCB7XG4gICAgICByZXNvbHZlZFBhbmVzXG4gICAgfSksIC8qIEBfX1BVUkVfXyAqL2pzeChcImRpdlwiLCB7XG4gICAgICBcImRhdGEtcG9ydGFsXCI6IFwiXCIsXG4gICAgICByZWY6IHNldFBvcnRhbEVsZW1lbnRcbiAgICB9KV1cbiAgfSk7XG59KTtcbmZ1bmN0aW9uIERlc2tUb29sQm91bmRhcnkoX3JlZjEzKSB7XG4gIGxldCB7XG4gICAgdG9vbDoge1xuICAgICAgb3B0aW9uc1xuICAgIH1cbiAgfSA9IF9yZWYxMztcbiAgY29uc3Qge1xuICAgIHVuc3RhYmxlX3NvdXJjZXM6IHNvdXJjZXNcbiAgfSA9IHVzZVdvcmtzcGFjZSgpO1xuICBjb25zdCBbZmlyc3RTb3VyY2VdID0gc291cmNlcztcbiAgY29uc3Qge1xuICAgIHNvdXJjZSxcbiAgICBkZWZhdWx0RG9jdW1lbnROb2RlLFxuICAgIHN0cnVjdHVyZVxuICB9ID0gb3B0aW9ucyB8fCB7fTtcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRBY3RpdmVQYW5lcyhbXSk7XG4gICAgcmV0dXJuICgpID0+IHNldEFjdGl2ZVBhbmVzKFtdKTtcbiAgfSwgW10pO1xuICBjb25zdCBbe1xuICAgIGVycm9yXG4gIH0sIHNldEVycm9yXSA9IHVzZVN0YXRlKHtcbiAgICBlcnJvcjogbnVsbFxuICB9KTtcbiAgaWYgKGVycm9yKSByZXR1cm4gLyogQF9fUFVSRV9fICovanN4KFN0cnVjdHVyZUVycm9yLCB7XG4gICAgZXJyb3JcbiAgfSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi9qc3goRXJyb3JCb3VuZGFyeSwge1xuICAgIG9uQ2F0Y2g6IHNldEVycm9yLFxuICAgIGNoaWxkcmVuOiAvKiBAX19QVVJFX18gKi9qc3goU291cmNlUHJvdmlkZXIsIHtcbiAgICAgIG5hbWU6IHNvdXJjZSB8fCBmaXJzdFNvdXJjZS5uYW1lLFxuICAgICAgY2hpbGRyZW46IC8qIEBfX1BVUkVfXyAqL2pzeHMoRGVza1Rvb2xQcm92aWRlciwge1xuICAgICAgICBkZWZhdWx0RG9jdW1lbnROb2RlLFxuICAgICAgICBzdHJ1Y3R1cmUsXG4gICAgICAgIGNoaWxkcmVuOiBbLyogQF9fUFVSRV9fICovanN4KERlc2tUb29sLCB7XG4gICAgICAgICAgb25QYW5lQ2hhbmdlOiBzZXRBY3RpdmVQYW5lc1xuICAgICAgICB9KSwgLyogQF9fUFVSRV9fICovanN4KEludGVudFJlc29sdmVyLCB7fSldXG4gICAgICB9KVxuICAgIH0pXG4gIH0pO1xufVxuZXhwb3J0IHsgRGVza1Rvb2xCb3VuZGFyeSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC10UHZJU1E5UC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/sanity/lib/_chunks/index-tPvISQ9P.js\n"));

/***/ })

}]);