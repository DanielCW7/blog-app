"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[...admin]",{

/***/ "./sanity/blog-schema.ts":
/*!*******************************!*\
  !*** ./sanity/blog-schema.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst blog = {\n    name: \"blog\",\n    title: \"Blog\",\n    type: \"document\",\n    fields: [\n        {\n            name: \"topic\",\n            type: \"string\",\n            title: \"Topic\"\n        },\n        {\n            name: \"date\",\n            type: \"date\",\n            title: \"Date\"\n        },\n        {\n            name: \"brief\",\n            type: \"text\",\n            title: \"Brief\"\n        },\n        {\n            name: \"content\",\n            type: \"array\",\n            // type: 'text',\n            title: \"Content\",\n            of: [\n                {\n                    type: \"block\"\n                }\n            ]\n        },\n        {\n            name: \"thumbnail\",\n            type: \"image\",\n            title: \"Thumbnail\"\n        },\n        {\n            name: \"alt\",\n            type: \"string\",\n            title: \"Alt\"\n        },\n        {\n            name: \"slug\",\n            type: \"slug\",\n            title: \"Slug\",\n            options: {\n                source: \"name\"\n            }\n        },\n        {\n            name: \"avatar\",\n            type: \"image\",\n            title: \"Avatar\",\n            options: {\n                hotspot: true\n            }\n        },\n        {\n            name: \"author\",\n            type: \"string\",\n            title: \"Author\"\n        }\n    ]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (blog);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYW5pdHkvYmxvZy1zY2hlbWEudHMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE9BQU87SUFDVEMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsUUFBUTtRQUNKO1lBQ0lILE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1FBQ1g7UUFFQTtZQUNJRCxNQUFNO1lBQ05FLE1BQU07WUFDTkQsT0FBTztRQUNYO1FBQ0E7WUFDSUQsTUFBTTtZQUNORSxNQUFNO1lBQ05ELE9BQU87UUFDWDtRQUNBO1lBQ0lELE1BQU07WUFDTkUsTUFBTTtZQUNOLGdCQUFnQjtZQUNoQkQsT0FBTztZQUNQRyxJQUFJO2dCQUFDO29CQUFFRixNQUFNO2dCQUFPO2FBQUU7UUFDMUI7UUFDQTtZQUNJRixNQUFNO1lBQ05FLE1BQU07WUFDTkQsT0FBTztRQUNYO1FBQ0E7WUFDSUQsTUFBTTtZQUNORSxNQUFNO1lBQ05ELE9BQU87UUFDWDtRQUNBO1lBQ0lELE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1lBQ1BJLFNBQVM7Z0JBQUVDLFFBQVE7WUFBTztRQUM5QjtRQUNBO1lBQ0lOLE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1lBQ1BJLFNBQVM7Z0JBQUVFLFNBQVM7WUFBSztRQUM3QjtRQUNBO1lBQ0lQLE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1FBQ1g7S0FDSDtBQUNMO0FBRUEsK0RBQWVGLElBQUlBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2FuaXR5L2Jsb2ctc2NoZW1hLnRzPzhmYzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmxvZyA9IHtcclxuICAgIG5hbWU6ICdibG9nJyxcclxuICAgIHRpdGxlOiAnQmxvZycsXHJcbiAgICB0eXBlOiAnZG9jdW1lbnQnLFxyXG4gICAgZmllbGRzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAndG9waWMnLFxyXG4gICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdUb3BpYydcclxuICAgICAgICB9LFxyXG5cclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdkYXRlJyxcclxuICAgICAgICAgICAgdHlwZTogJ2RhdGUnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ0RhdGUnXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdicmllZicsXHJcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcclxuICAgICAgICAgICAgdGl0bGU6ICdCcmllZidcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ2NvbnRlbnQnLFxyXG4gICAgICAgICAgICB0eXBlOiAnYXJyYXknLFxyXG4gICAgICAgICAgICAvLyB0eXBlOiAndGV4dCcsXHJcbiAgICAgICAgICAgIHRpdGxlOiAnQ29udGVudCcsXHJcbiAgICAgICAgICAgIG9mOiBbeyB0eXBlOiBcImJsb2NrXCJ9XVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAndGh1bWJuYWlsJyxcclxuICAgICAgICAgICAgdHlwZTogJ2ltYWdlJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdUaHVtYm5haWwnICAgXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdhbHQnLFxyXG4gICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdBbHQnLCAgICAgICAgICAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnc2x1ZycsXHJcbiAgICAgICAgICAgIHR5cGU6ICdzbHVnJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdTbHVnJyxcclxuICAgICAgICAgICAgb3B0aW9uczogeyBzb3VyY2U6ICduYW1lJyB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdhdmF0YXInLFxyXG4gICAgICAgICAgICB0eXBlOiAnaW1hZ2UnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ0F2YXRhcicsXHJcbiAgICAgICAgICAgIG9wdGlvbnM6IHsgaG90c3BvdDogdHJ1ZSB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdhdXRob3InLFxyXG4gICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdBdXRob3InXHJcbiAgICAgICAgfSxcclxuICAgIF1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYmxvZ1xyXG5cclxuXHJcbi8vIFwiQWZ0ZXIgTUFSVkVMJ3Mgc3VjY2VzcyB3aXRoIHRoZSBpbmZpbml0eSBzYWdhLCBpdCBzZWVtcyBhcyB0aG91Z2ggdGhlcmUgYXJlbid0IG1hbnkgc3RvcmllcyBsZWZ0IHRvIHRlbGwuIEFmdGVyIHNvbWUgcHJldHR5IGRpcmUgc3Rha2VzIHdpdGggVGhhbm9zIGFuZCBkZXN0cm95aW5nIGFuIGVudGlyZSB1bml2ZXJzZSwgdGhlcmUgc2VlbXMgbGlrZSBub3QgbWFueSBvdGhlciB3YXlzIG9uZSBjb3VsZCB0b3AgdGhhdC4gU2luY2UgdGhhdCBzdG9yeWxpbmUgZW5kZWQsIHdlJ3ZlIGJlZW4gc2VlaW5nIG90aGVyIHN0b3JpZXMgdGhhdCBoYXBwZW4gYXMgYSByZXN1bHQgb2YgdGhlIGluZmluaXR5IHNhZ2EuIFNvbWUgbW92aWVzIGRpZCBsYW5kIHBhcnRpY3VsYXJseSB3ZWxsLCB3aGlsZSBvdGhlcnMgbm90IHNvIHdlbGwuIEJsYWNrIFdpZG93LCBFdGVybmFscywgYW5kIFRob3I6IExvdmUgYW5kIFRodW5kZXIgd2VyZSBhIGZldyBvZiB0aGUgbW92aWVzIHRoYXQgd2VyZW4ndCBhcyBzdWNjZXNzZnVsIGFzIHRoZWlyIHByZWRlY2Vzc29ycywgd2hpbGUgbW92aWVzIGxpa2UgU2hhbmctQ2hpLCBTcGlkZXJtYW4gTm8gV2F5IEhvbWUsIGFuZCBHdWFyZGlhbnMgb2YgdGhlIEdhbGF4eSBWb2wuMyB3ZXJlIGdlbmVyYWxseSB2ZXJ5IGdvb2QuIFNvbWUgb2YgdGhlc2UgbW92aWVzIGF0dGVtcHQgdG8gcGlnZ3liYWNrIG9mZiBvZiB0aGUgc3VjY2VzcyBnZW5lcmF0ZWQgYnkgdGhlIGluZmluaXR5IHNhZ2EsIGFuZCBzb21lIHN1Y2NlZWRlZC4gSG93ZXZlciwgc2V2ZXJhbCBtb3ZpZXMgaGFkIGxpdHRsZSBzdWNjZXNzLiBBIGxvdCBvZiB0aGVzZSBtb3ZpZXMgc3VjaCBhcyB0aGVzZSBhcmUgY29taW5nIGF0IGEgdGltZSB3aGVyZSBmYW5zIGhhdmUgZ3Jvd24gZmF0aWd1ZWQgYnkgdGhlIG92ZXJzYXR1cmF0aW9uIG9mIGNvbWljIGJvb2sgZW50ZXJ0YWlubWVudC4gU2hvd3MgbGlrZSBTaGUtSHVsaywgU2VjcmV0IEludmFzaW9uLCBhbmQgTXMuIE1hcnZlbCBhcmUgZXhhbXBsZXMgb2YgbW92aWVzIHRoYXQgZW50ZXJlZCB0aGUgcmluZyB3aXRoIGhpZ2ggZXhwZWN0YXRpb24sIGJ1dCBsZWZ0IGZhbnMgdW5kZXJ3aGVsbWVkLiBJdCBzZWVtcyBsaWtlIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBNQ1UgcHJpbWFyaWx5IGlzIHRoYXQgdGhlcmUncyBhIGhpZ2hlciBmb2N1cyBvbiBxdWFudGl0eSBvdmVyIHF1YWxpdHkuIE5vdywgdGhlcmUgaGF2ZSBiZWVuIHNvbWUgZ29vZCB0aGluZ3MgdGhhdCBoYXZlIGNvbWUgb3V0IG9mIHRoZSBNQ1Ugc2luY2UgRW5kZ2FtZS4gU3RpbGwsIHdpdGggdGhlIGN1cnJlbnQgaXNzdWVzIHN1cnJvdW5kaW5nIHRoZSBuZXh0IEF2ZW5nZXJzIGluc3RhbGxtZW50IGFuZCB0aGUgZ2VuZXJhbCBkaXJlY3Rpb24gb2YgdGhlIE1DVSwgdGhleSByZWFsbHkgaGF2ZW4ndCBmdWxseSBmbGVzaGVkIG91dCB3aGVyZSB0aGV5IGdvIGZyb20gdGhlcmUuIEJleW9uZCB0aGUgb3JpZ2luYWwgQXZlbmdlcnMsIHRoZXJlIGFyZSBtYW55IHVuZXhwbG9yZWQgcGxhY2VzIHRoYXQgTUFSVkVMIGhhcyB5ZXQgdG8gZXhwbG9yZS4gVGhlIFgtTWVuIGFuZCBGYW50YXN0aWMgNCBhcmUgcHJvYmFibHkgdGhlIG1vc3QgbGlrZWx5IHRvIGJlIHRoZSBuZXh0IHRhcmdldHMgb2YgTUFSVkVMIGlmIHRoZXkgYXJlIHRvIGNvbnRpbnVlIHB1dHRpbmcgb3V0IG1vdmllcyBvZiB0aGVpciBiZWxvdmVkIGNoYXJhY3RlcnMuIEFkZGl0aW9uYWxseSwgbm93IHRoYXQgdGhlIGNvbmNlcHQgb2YgdGhlIG11bHRpdmVyc2UgaGFzIGJlZW4gYnJvdWdodCBpbnRvIGV4aXN0ZW5jZSwgdGhlcmUgbm93IGxpZXMgdGhlIHBvc3NpYmlsaXR5IHRoYXQgdGhleSd2ZSBvcGVuZWQgdXAgYW4gZW5kbGVzcyBzdHJlYW0gb2YgZW50ZXJ0YWlubWVudCBwb3NzaWJpbGl0aWVzLiBFc3RhYmxpc2hpbmcgYW4gaW5maW5pdGUgbnVtYmVyIG9mIGRpZmZlcmVudCBzY2VuYXJpb3MgdGhhdCBjYW4gYmUgZHJhd24gdXBvbiBhdCBhbnkgdGltZSBpbiBvcmRlciB0byBzdXN0YWluIGF1ZGllbmNlcycgaW50ZXJlc3Qgc2VlbXMgbGlrZSBhIGdlbml1cyB3YXkgdG8gcHJvbG9uZyBib3RoIHRoZSBNQ1UgYW5kIERDRVUuIFdoaWxlIGl0J3MgdGFjdGljYWwgdG8gaGF2ZSB1bnRhcHBlZCBzdG9yaWVzIHRvIGludmVudCBmcm9tIHRoZSBNQ1UsIHRoZXkgd291bGQgZmlyc3QgaGF2ZSB0byBmaWd1cmUgb3V0IHdoZXJlIHRvIGZpeCB0aGVpciBjdXJyZW50IHN0b3J5LCBhcyB3ZWxsIGFzIGltcHJvdmUgdGhlIGF1ZGllbmNlIGVuZ2FnZW1lbnQuIEkgZG9uJ3QgdGhpbmsgdGhhdCB0aGUgTUNVIGlzIGRlYWQgYnkgYW55IG1lYW5zLCBidXQgdGhleSBhcmUgY2VydGFpbmx5IHB1dHRpbmcgb3V0IGxvd2VyIHF1YWxpdHkgZW50ZXJ0YWlubWVudCBhbmQgbm90IGdpdmluZyBtb3ZpZXMgdGltZSB0byBiZSBwcm9wZXJseSB3cml0dGVuIGFuZCBwcm9kdWNlZC4gWW91IHVzZWQgdG8gc2VlIG9ubHkgMiBNQ1UgbW92aWVzIGNvbWUgb3V0IGluIGEgc2luZ2xlIHllYXIsIG1heC4gVGhlc2UgZGF5cywgd2UgaGF2ZSBtb3ZpZXMgYW5kIHNob3dzIGZpbGxpbmcgaW4gdGhlIGdhcHMsIHdoaWNoIG1ha2VzIG1lIGZlZWwgb3ZlcndoZWxtZWQuIFlvdSBhbHNvIGRpZG4ndCBuZWVkIHRvIGtlZXAgdHJhY2sgb2YgbXVsdGlwbGUgbW92aWVzIGFuZCBzaG93cyB0byBrZWVwIHRyYWNrIG9mIHRoZSBvdmVyYWxsIHN0b3J5LCBub3QgYW55bW9yZS4gU28sIHRoZSBNQVJWRUwgbmVlZHMgdG8gc2xvdyBkb3duIHdpdGggdGhlaXIgZW50ZXJ0YWlubWVudCBpZiB0aGV5IHRydWx5IHdhbnQgdGhlaXIgZmFuYmFzZSB0byBzdGljayBhcm91bmQuIElmIG5vdCwgZmFucyBhcmUgbW9zdCBsaWtlbHkgZ29pbmcgdG8gZ2V0IHRpcmVkIG9mIHRoZSB0YW5nbGVkIG1lc3Mgb2YgcHJvamVjdHMgYW5kIGFsdG9nZXRoZXIgbGVhdmUuIFwiXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbImJsb2ciLCJuYW1lIiwidGl0bGUiLCJ0eXBlIiwiZmllbGRzIiwib2YiLCJvcHRpb25zIiwic291cmNlIiwiaG90c3BvdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./sanity/blog-schema.ts\n"));

/***/ })

});