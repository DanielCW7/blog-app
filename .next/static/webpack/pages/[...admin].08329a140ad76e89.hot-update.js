"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/[...admin]",{

/***/ "./sanity/blog-schema.ts":
/*!*******************************!*\
  !*** ./sanity/blog-schema.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nconst blog = {\n    name: \"blog\",\n    title: \"Blog\",\n    type: \"document\",\n    fields: [\n        {\n            name: \"topic\",\n            type: \"string\",\n            title: \"Topic\"\n        },\n        {\n            name: \"avatar\",\n            type: \"image\",\n            title: \"Avatar\",\n            options: {\n                hotspot: true\n            }\n        },\n        {\n            name: \"author\",\n            type: \"string\",\n            title: \"Author\"\n        },\n        {\n            name: \"date\",\n            type: \"date\",\n            title: \"Date\"\n        },\n        {\n            name: \"brief\",\n            type: \"text\",\n            title: \"Brief\"\n        },\n        {\n            name: \"content\",\n            type: \"array\",\n            // type: 'text',\n            title: \"Content\",\n            of: [\n                {\n                    type: \"block\"\n                }\n            ]\n        },\n        {\n            name: \"thumbnail\",\n            type: \"image\",\n            title: \"Thumbnail\",\n            fields: [\n                {\n                    name: \"alt\",\n                    type: \"string\",\n                    title: \"Alt\"\n                }\n            ]\n        },\n        {\n            name: \"slug\",\n            type: \"slug\",\n            title: \"Slug\",\n            options: {\n                source: \"name\"\n            }\n        }\n    ]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (blog);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYW5pdHkvYmxvZy1zY2hlbWEudHMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE9BQU87SUFDVEMsTUFBTTtJQUNOQyxPQUFPO0lBQ1BDLE1BQU07SUFDTkMsUUFBUTtRQUNKO1lBQ0lILE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1FBQ1g7UUFDQTtZQUNJRCxNQUFNO1lBQ05FLE1BQU07WUFDTkQsT0FBTztZQUNQRyxTQUFTO2dCQUFFQyxTQUFTO1lBQUs7UUFDN0I7UUFDQTtZQUNJTCxNQUFNO1lBQ05FLE1BQU07WUFDTkQsT0FBTztRQUNYO1FBQ0E7WUFDSUQsTUFBTTtZQUNORSxNQUFNO1lBQ05ELE9BQU87UUFDWDtRQUNBO1lBQ0lELE1BQU07WUFDTkUsTUFBTTtZQUNORCxPQUFPO1FBQ1g7UUFDQTtZQUNJRCxNQUFNO1lBQ05FLE1BQU07WUFDTixnQkFBZ0I7WUFDaEJELE9BQU87WUFDUEssSUFBSTtnQkFBQztvQkFBRUosTUFBTTtnQkFBTzthQUFFO1FBQzFCO1FBQ0E7WUFDSUYsTUFBTTtZQUNORSxNQUFNO1lBQ05ELE9BQU87WUFDUEUsUUFBUTtnQkFDSjtvQkFDSUgsTUFBTTtvQkFDTkUsTUFBTTtvQkFDTkQsT0FBTztnQkFDWDthQUNIO1FBQ0w7UUFDQTtZQUNJRCxNQUFNO1lBQ05FLE1BQU07WUFDTkQsT0FBTztZQUNQRyxTQUFTO2dCQUFFRyxRQUFRO1lBQU87UUFDOUI7S0FDSDtBQUNMO0FBRUEsK0RBQWVSLElBQUlBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc2FuaXR5L2Jsb2ctc2NoZW1hLnRzPzhmYzkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmxvZyA9IHtcclxuICAgIG5hbWU6ICdibG9nJyxcclxuICAgIHRpdGxlOiAnQmxvZycsXHJcbiAgICB0eXBlOiAnZG9jdW1lbnQnLFxyXG4gICAgZmllbGRzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAndG9waWMnLFxyXG4gICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcclxuICAgICAgICAgICAgdGl0bGU6ICdUb3BpYydcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ2F2YXRhcicsXHJcbiAgICAgICAgICAgIHR5cGU6ICdpbWFnZScsXHJcbiAgICAgICAgICAgIHRpdGxlOiAnQXZhdGFyJyxcclxuICAgICAgICAgICAgb3B0aW9uczogeyBob3RzcG90OiB0cnVlIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ2F1dGhvcicsXHJcbiAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ0F1dGhvcidcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ2RhdGUnLFxyXG4gICAgICAgICAgICB0eXBlOiAnZGF0ZScsXHJcbiAgICAgICAgICAgIHRpdGxlOiAnRGF0ZSdcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbmFtZTogJ2JyaWVmJyxcclxuICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ0JyaWVmJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuYW1lOiAnY29udGVudCcsXHJcbiAgICAgICAgICAgIHR5cGU6ICdhcnJheScsXHJcbiAgICAgICAgICAgIC8vIHR5cGU6ICd0ZXh0JyxcclxuICAgICAgICAgICAgdGl0bGU6ICdDb250ZW50JyxcclxuICAgICAgICAgICAgb2Y6IFt7IHR5cGU6IFwiYmxvY2tcIn1dXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICd0aHVtYm5haWwnLFxyXG4gICAgICAgICAgICB0eXBlOiAnaW1hZ2UnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ1RodW1ibmFpbCcsXHJcbiAgICAgICAgICAgIGZpZWxkczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdhbHQnLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLFxyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnQWx0JywgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0gIFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdzbHVnJyxcclxuICAgICAgICAgICAgdHlwZTogJ3NsdWcnLFxyXG4gICAgICAgICAgICB0aXRsZTogJ1NsdWcnLFxyXG4gICAgICAgICAgICBvcHRpb25zOiB7IHNvdXJjZTogJ25hbWUnIH1cclxuICAgICAgICB9XHJcbiAgICBdXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGJsb2dcclxuXHJcblxyXG4vLyBcIkFmdGVyIE1BUlZFTCdzIHN1Y2Nlc3Mgd2l0aCB0aGUgaW5maW5pdHkgc2FnYSwgaXQgc2VlbXMgYXMgdGhvdWdoIHRoZXJlIGFyZW4ndCBtYW55IHN0b3JpZXMgbGVmdCB0byB0ZWxsLiBBZnRlciBzb21lIHByZXR0eSBkaXJlIHN0YWtlcyB3aXRoIFRoYW5vcyBhbmQgZGVzdHJveWluZyBhbiBlbnRpcmUgdW5pdmVyc2UsIHRoZXJlIHNlZW1zIGxpa2Ugbm90IG1hbnkgb3RoZXIgd2F5cyBvbmUgY291bGQgdG9wIHRoYXQuIFNpbmNlIHRoYXQgc3RvcnlsaW5lIGVuZGVkLCB3ZSd2ZSBiZWVuIHNlZWluZyBvdGhlciBzdG9yaWVzIHRoYXQgaGFwcGVuIGFzIGEgcmVzdWx0IG9mIHRoZSBpbmZpbml0eSBzYWdhLiBTb21lIG1vdmllcyBkaWQgbGFuZCBwYXJ0aWN1bGFybHkgd2VsbCwgd2hpbGUgb3RoZXJzIG5vdCBzbyB3ZWxsLiBCbGFjayBXaWRvdywgRXRlcm5hbHMsIGFuZCBUaG9yOiBMb3ZlIGFuZCBUaHVuZGVyIHdlcmUgYSBmZXcgb2YgdGhlIG1vdmllcyB0aGF0IHdlcmVuJ3QgYXMgc3VjY2Vzc2Z1bCBhcyB0aGVpciBwcmVkZWNlc3NvcnMsIHdoaWxlIG1vdmllcyBsaWtlIFNoYW5nLUNoaSwgU3BpZGVybWFuIE5vIFdheSBIb21lLCBhbmQgR3VhcmRpYW5zIG9mIHRoZSBHYWxheHkgVm9sLjMgd2VyZSBnZW5lcmFsbHkgdmVyeSBnb29kLiBTb21lIG9mIHRoZXNlIG1vdmllcyBhdHRlbXB0IHRvIHBpZ2d5YmFjayBvZmYgb2YgdGhlIHN1Y2Nlc3MgZ2VuZXJhdGVkIGJ5IHRoZSBpbmZpbml0eSBzYWdhLCBhbmQgc29tZSBzdWNjZWVkZWQuIEhvd2V2ZXIsIHNldmVyYWwgbW92aWVzIGhhZCBsaXR0bGUgc3VjY2Vzcy4gQSBsb3Qgb2YgdGhlc2UgbW92aWVzIHN1Y2ggYXMgdGhlc2UgYXJlIGNvbWluZyBhdCBhIHRpbWUgd2hlcmUgZmFucyBoYXZlIGdyb3duIGZhdGlndWVkIGJ5IHRoZSBvdmVyc2F0dXJhdGlvbiBvZiBjb21pYyBib29rIGVudGVydGFpbm1lbnQuIFNob3dzIGxpa2UgU2hlLUh1bGssIFNlY3JldCBJbnZhc2lvbiwgYW5kIE1zLiBNYXJ2ZWwgYXJlIGV4YW1wbGVzIG9mIG1vdmllcyB0aGF0IGVudGVyZWQgdGhlIHJpbmcgd2l0aCBoaWdoIGV4cGVjdGF0aW9uLCBidXQgbGVmdCBmYW5zIHVuZGVyd2hlbG1lZC4gSXQgc2VlbXMgbGlrZSB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgTUNVIHByaW1hcmlseSBpcyB0aGF0IHRoZXJlJ3MgYSBoaWdoZXIgZm9jdXMgb24gcXVhbnRpdHkgb3ZlciBxdWFsaXR5LiBOb3csIHRoZXJlIGhhdmUgYmVlbiBzb21lIGdvb2QgdGhpbmdzIHRoYXQgaGF2ZSBjb21lIG91dCBvZiB0aGUgTUNVIHNpbmNlIEVuZGdhbWUuIFN0aWxsLCB3aXRoIHRoZSBjdXJyZW50IGlzc3VlcyBzdXJyb3VuZGluZyB0aGUgbmV4dCBBdmVuZ2VycyBpbnN0YWxsbWVudCBhbmQgdGhlIGdlbmVyYWwgZGlyZWN0aW9uIG9mIHRoZSBNQ1UsIHRoZXkgcmVhbGx5IGhhdmVuJ3QgZnVsbHkgZmxlc2hlZCBvdXQgd2hlcmUgdGhleSBnbyBmcm9tIHRoZXJlLiBCZXlvbmQgdGhlIG9yaWdpbmFsIEF2ZW5nZXJzLCB0aGVyZSBhcmUgbWFueSB1bmV4cGxvcmVkIHBsYWNlcyB0aGF0IE1BUlZFTCBoYXMgeWV0IHRvIGV4cGxvcmUuIFRoZSBYLU1lbiBhbmQgRmFudGFzdGljIDQgYXJlIHByb2JhYmx5IHRoZSBtb3N0IGxpa2VseSB0byBiZSB0aGUgbmV4dCB0YXJnZXRzIG9mIE1BUlZFTCBpZiB0aGV5IGFyZSB0byBjb250aW51ZSBwdXR0aW5nIG91dCBtb3ZpZXMgb2YgdGhlaXIgYmVsb3ZlZCBjaGFyYWN0ZXJzLiBBZGRpdGlvbmFsbHksIG5vdyB0aGF0IHRoZSBjb25jZXB0IG9mIHRoZSBtdWx0aXZlcnNlIGhhcyBiZWVuIGJyb3VnaHQgaW50byBleGlzdGVuY2UsIHRoZXJlIG5vdyBsaWVzIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZXkndmUgb3BlbmVkIHVwIGFuIGVuZGxlc3Mgc3RyZWFtIG9mIGVudGVydGFpbm1lbnQgcG9zc2liaWxpdGllcy4gRXN0YWJsaXNoaW5nIGFuIGluZmluaXRlIG51bWJlciBvZiBkaWZmZXJlbnQgc2NlbmFyaW9zIHRoYXQgY2FuIGJlIGRyYXduIHVwb24gYXQgYW55IHRpbWUgaW4gb3JkZXIgdG8gc3VzdGFpbiBhdWRpZW5jZXMnIGludGVyZXN0IHNlZW1zIGxpa2UgYSBnZW5pdXMgd2F5IHRvIHByb2xvbmcgYm90aCB0aGUgTUNVIGFuZCBEQ0VVLiBXaGlsZSBpdCdzIHRhY3RpY2FsIHRvIGhhdmUgdW50YXBwZWQgc3RvcmllcyB0byBpbnZlbnQgZnJvbSB0aGUgTUNVLCB0aGV5IHdvdWxkIGZpcnN0IGhhdmUgdG8gZmlndXJlIG91dCB3aGVyZSB0byBmaXggdGhlaXIgY3VycmVudCBzdG9yeSwgYXMgd2VsbCBhcyBpbXByb3ZlIHRoZSBhdWRpZW5jZSBlbmdhZ2VtZW50LiBJIGRvbid0IHRoaW5rIHRoYXQgdGhlIE1DVSBpcyBkZWFkIGJ5IGFueSBtZWFucywgYnV0IHRoZXkgYXJlIGNlcnRhaW5seSBwdXR0aW5nIG91dCBsb3dlciBxdWFsaXR5IGVudGVydGFpbm1lbnQgYW5kIG5vdCBnaXZpbmcgbW92aWVzIHRpbWUgdG8gYmUgcHJvcGVybHkgd3JpdHRlbiBhbmQgcHJvZHVjZWQuIFlvdSB1c2VkIHRvIHNlZSBvbmx5IDIgTUNVIG1vdmllcyBjb21lIG91dCBpbiBhIHNpbmdsZSB5ZWFyLCBtYXguIFRoZXNlIGRheXMsIHdlIGhhdmUgbW92aWVzIGFuZCBzaG93cyBmaWxsaW5nIGluIHRoZSBnYXBzLCB3aGljaCBtYWtlcyBtZSBmZWVsIG92ZXJ3aGVsbWVkLiBZb3UgYWxzbyBkaWRuJ3QgbmVlZCB0byBrZWVwIHRyYWNrIG9mIG11bHRpcGxlIG1vdmllcyBhbmQgc2hvd3MgdG8ga2VlcCB0cmFjayBvZiB0aGUgb3ZlcmFsbCBzdG9yeSwgbm90IGFueW1vcmUuIFNvLCB0aGUgTUFSVkVMIG5lZWRzIHRvIHNsb3cgZG93biB3aXRoIHRoZWlyIGVudGVydGFpbm1lbnQgaWYgdGhleSB0cnVseSB3YW50IHRoZWlyIGZhbmJhc2UgdG8gc3RpY2sgYXJvdW5kLiBJZiBub3QsIGZhbnMgYXJlIG1vc3QgbGlrZWx5IGdvaW5nIHRvIGdldCB0aXJlZCBvZiB0aGUgdGFuZ2xlZCBtZXNzIG9mIHByb2plY3RzIGFuZCBhbHRvZ2V0aGVyIGxlYXZlLiBcIlxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJibG9nIiwibmFtZSIsInRpdGxlIiwidHlwZSIsImZpZWxkcyIsIm9wdGlvbnMiLCJob3RzcG90Iiwib2YiLCJzb3VyY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./sanity/blog-schema.ts\n"));

/***/ })

});